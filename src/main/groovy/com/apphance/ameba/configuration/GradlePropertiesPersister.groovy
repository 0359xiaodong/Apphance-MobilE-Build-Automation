package com.apphance.ameba.configuration

import com.apphance.ameba.configuration.properties.AbstractProperty
import com.google.common.io.Files
import com.google.inject.Inject
import org.gradle.api.Project

import java.nio.charset.StandardCharsets
import java.text.SimpleDateFormat

class GradlePropertiesPersister implements PropertyPersister {

    private Properties props

    private File propertyFile

    @Inject GradlePropertiesPersister(Project project) {
        props = new Properties()
        propertyFile = new File(project.rootDir.absolutePath + '/gradle.properties')
        if (propertyFile.exists()) {
            props.load(Files.newReader(propertyFile, StandardCharsets.UTF_8))
        }
    }

    @Override
    def get(String key) {
        return props.getProperty(key)
    }

    @Override
    def save(List<Configuration> configurations) {
        if (propertyFile.exists()) {
            Files.copy(propertyFile, new File(propertyFile.absolutePath + timeStamp))
            propertyFile.delete()
        }
        propertyFile.createNewFile()

        configurations.each { Configuration conf ->
            conf.amebaProperties.each { AbstractProperty prop ->
                props.setProperty(prop.name, prop.value.toString())
            }
        }

        props.store(Files.newWriter(propertyFile, StandardCharsets.UTF_8), "Automatically generated by Ameba")
    }

    static String getTimeStamp() {
        new SimpleDateFormat("yyyyMMddHHmmssSSS").format(new Date())
    }
}
