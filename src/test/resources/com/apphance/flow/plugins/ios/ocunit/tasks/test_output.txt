Test Suite 'All tests' started at 2013-06-07 08:57:59 +0000
Test Suite '/Users/demouser/projects/Demo/ios-client/build/Debug-iphonesimulator/DemoTests.octest(Tests)' started at 2013-06-07 08:57:59 +0000
Test Suite 'KWSpec' started at 2013-06-07 08:57:59 +0000
Test Suite 'KWSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 0 tests, with 0 failures (0 unexpected) in 0.000 (0.000) seconds
Test Suite 'KWTestCase' started at 2013-06-07 08:57:59 +0000
Test Suite 'KWTestCase' finished at 2013-06-07 08:57:59 +0000.
Executed 0 tests, with 0 failures (0 unexpected) in 0.000 (0.000) seconds
Test Suite 'NSDateRelativeSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[NSDateRelativeSpec NSDateRelative_ReturningRelativeDateString_WhenHandlingDayBeforeYesterday_ShouldReturn2DaysAgo]' started.
2013-06-07 10:57:59.324 DemoDev[2667:1d603] + 'NSDate+Relative, returning relative date string, when handling day before yesterday, should return 2 days ago' [PASSED]
Test Case '-[NSDateRelativeSpec NSDateRelative_ReturningRelativeDateString_WhenHandlingDayBeforeYesterday_ShouldReturn2DaysAgo]' passed (0.024 seconds).
Test Suite 'NSDateRelativeSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.024 (0.024) seconds
Test Suite 'QWAddCommentMethodExecutorSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldAddCommentToPhoto]' started.
2013-06-07 10:57:59.334 DemoDev[2667:1d603] Created new object of class QWComment with id -6 in context 333749440
2013-06-07 10:57:59.335 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 333749440
2013-06-07 10:57:59.339 DemoDev[2667:1d603] + 'QWAddCommentMethodExecutor, executing request, when request is successful, should add comment to photo' [PASSED]
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldAddCommentToPhoto]' passed (0.015 seconds).
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateAlbumsCommentsCount]' started.
2013-06-07 10:57:59.346 DemoDev[2667:1d603] Created new object of class QWComment with id -6 in context 202902208
2013-06-07 10:57:59.347 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 202902208
2013-06-07 10:57:59.350 DemoDev[2667:1d603] + 'QWAddCommentMethodExecutor, executing request, when request is successful, should update albums comments count' [PASSED]
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateAlbumsCommentsCount]' passed (0.011 seconds).
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdatePopularityOfPhoto]' started.
2013-06-07 10:57:59.358 DemoDev[2667:1d603] Created new object of class QWComment with id -6 in context 333049968
2013-06-07 10:57:59.359 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 333049968
2013-06-07 10:57:59.360 DemoDev[2667:1d603] + 'QWAddCommentMethodExecutor, executing request, when request is successful, should update popularity of photo' [PASSED]
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdatePopularityOfPhoto]' passed (0.010 seconds).
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:57:59.367 DemoDev[2667:1d603] Created new object of class QWComment with id -6 in context 173953936
2013-06-07 10:57:59.368 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 173953936
2013-06-07 10:57:59.370 DemoDev[2667:1d603] + 'QWAddCommentMethodExecutor, executing request, when request is successful, should update last activity timestamp' [PASSED]
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateLastActivityTimestamp]' passed (0.009 seconds).
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRemoveLocalCommentFromPhoto]' started.
2013-06-07 10:57:59.379 DemoDev[2667:1d603] Created new object of class QWComment with id -6 in context 333784352
2013-06-07 10:57:59.380 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 333784352
2013-06-07 10:57:59.383 DemoDev[2667:1d603] + 'QWAddCommentMethodExecutor, executing request, when request failed, should remove local comment from photo' [PASSED]
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRemoveLocalCommentFromPhoto]' passed (0.012 seconds).
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateAlbumsCommentsCount]' started.
2013-06-07 10:57:59.392 DemoDev[2667:1d603] Created new object of class QWComment with id -6 in context 202920240
2013-06-07 10:57:59.393 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 202920240
2013-06-07 10:57:59.397 DemoDev[2667:1d603] + 'QWAddCommentMethodExecutor, executing request, when request failed, should update albums comments count' [PASSED]
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateAlbumsCommentsCount]' passed (0.013 seconds).
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRevertPopularityOfPhoto]' started.
2013-06-07 10:57:59.407 DemoDev[2667:1d603] Created new object of class QWComment with id -6 in context 333752368
2013-06-07 10:57:59.408 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 333752368
Unknown.m:0: error: -[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRevertPopularityOfPhoto] : 'QWAddCommentMethodExecutor, executing request, when request failed, should revert popularity of photo' [FAILED], Expecta Error "/Users/demouser/projects/Demo/ios-client/DemoTests/Specs/ServerMethodExecutors/QWAddCommentMethodExecutorSpec.m：131 expected： 13, got： 3" raised
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRevertPopularityOfPhoto]' failed (0.013 seconds).
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRevertLastActivityTimestamp]' started.
2013-06-07 10:57:59.418 DemoDev[2667:1d603] Created new object of class QWComment with id -6 in context 202907824
2013-06-07 10:57:59.419 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 202907824
2013-06-07 10:57:59.421 DemoDev[2667:1d603] + 'QWAddCommentMethodExecutor, executing request, when request failed, should revert last activity timestamp' [PASSED]
Test Case '-[QWAddCommentMethodExecutorSpec QWAddCommentMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRevertLastActivityTimestamp]' passed (0.010 seconds).
Test Suite 'QWAddCommentMethodExecutorSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 8 tests, with 1 failure (1 unexpected) in 0.093 (0.097) seconds
Test Suite 'QWAddCommentParserSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdateAlbumsCommentsCount]' started.
2013-06-07 10:57:59.427 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 202956640
2013-06-07 10:57:59.428 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 202956640
2013-06-07 10:57:59.428 DemoDev[2667:1d603] + 'QWAddCommentParser, should update album's comments count' [PASSED]
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdateAlbumsCommentsCount]' passed (0.007 seconds).
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdatePhotosCommentsCount]' started.
2013-06-07 10:57:59.435 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 203032416
2013-06-07 10:57:59.436 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 203032416
2013-06-07 10:57:59.436 DemoDev[2667:1d603] + 'QWAddCommentParser, should update photo's comments count' [PASSED]
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdatePhotosCommentsCount]' passed (0.008 seconds).
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdatePhotosPopularity]' started.
2013-06-07 10:57:59.443 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 332866992
2013-06-07 10:57:59.444 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 332866992
2013-06-07 10:57:59.444 DemoDev[2667:1d603] + 'QWAddCommentParser, should update photo's popularity' [PASSED]
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdatePhotosPopularity]' passed (0.008 seconds).
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldAddCommentToPhoto]' started.
2013-06-07 10:57:59.451 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 202907088
2013-06-07 10:57:59.451 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 202907088
2013-06-07 10:57:59.452 DemoDev[2667:1d603] + 'QWAddCommentParser, should add comment to photo' [PASSED]
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldAddCommentToPhoto]' passed (0.007 seconds).
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdateDemoShareFeedObjectCommentsCount]' started.
2013-06-07 10:57:59.459 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 173893072
2013-06-07 10:57:59.460 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 173893072
2013-06-07 10:57:59.460 DemoDev[2667:1d603] + 'QWAddCommentParser, should update demo share feed object comments count' [PASSED]
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdateDemoShareFeedObjectCommentsCount]' passed (0.008 seconds).
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:57:59.466 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 203121328
2013-06-07 10:57:59.466 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 203121328
2013-06-07 10:57:59.467 DemoDev[2667:1d603] + 'QWAddCommentParser, should update last activity timestamp' [PASSED]
Test Case '-[QWAddCommentParserSpec QWAddCommentParser_ShouldUpdateLastActivityTimestamp]' passed (0.006 seconds).
Test Suite 'QWAddCommentParserSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.043 (0.045) seconds
Test Suite 'QWAddressBookHandlerSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAddressBookHandlerSpec QWAddressBookHandler_FetchingContacts_ShouldReturnContactsWithEmailFromAddressBook]' started.
2013-06-07 10:57:59.596 DemoDev[2667:1d603] + 'QWAddressBookHandler, fetching contacts, should return contacts with email from address book' [PASSED]
Test Case '-[QWAddressBookHandlerSpec QWAddressBookHandler_FetchingContacts_ShouldReturnContactsWithEmailFromAddressBook]' passed (0.140 seconds).
Test Case '-[QWAddressBookHandlerSpec QWAddressBookHandler_FetchingContacts_ShouldNotReturnContactsWithfacebookcomEmails]' started.
2013-06-07 10:57:59.651 DemoDev[2667:1d603] + 'QWAddressBookHandler, fetching contacts, should not return contacts with @facebook.com emails' [PASSED]
Test Case '-[QWAddressBookHandlerSpec QWAddressBookHandler_FetchingContacts_ShouldNotReturnContactsWithfacebookcomEmails]' passed (0.055 seconds).
Test Case '-[QWAddressBookHandlerSpec QWAddressBookHandler_FetchingContacts_ShouldNotReturnContactsWithoutEmails]' started.
2013-06-07 10:57:59.706 DemoDev[2667:1d603] + 'QWAddressBookHandler, fetching contacts, should not return contacts without emails' [PASSED]
Test Case '-[QWAddressBookHandlerSpec QWAddressBookHandler_FetchingContacts_ShouldNotReturnContactsWithoutEmails]' passed (0.053 seconds).
Test Suite 'QWAddressBookHandlerSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.248 (0.250) seconds
Test Suite 'QWAlbumCountsUpdateSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAlbumCountsUpdateSpec QWAlbumCountsUpdate_WhenUpdateCalled_ShouldUpdateCommentsCount]' started.
2013-06-07 10:57:59.722 DemoDev[2667:1d603] + 'QWAlbum+CountsUpdate, when update called, should update comments count' [PASSED]
Test Case '-[QWAlbumCountsUpdateSpec QWAlbumCountsUpdate_WhenUpdateCalled_ShouldUpdateCommentsCount]' passed (0.005 seconds).
Test Case '-[QWAlbumCountsUpdateSpec QWAlbumCountsUpdate_WhenUpdateCalled_ShouldUpdateLoversCount]' started.
2013-06-07 10:57:59.728 DemoDev[2667:1d603] + 'QWAlbum+CountsUpdate, when update called, should update lovers count' [PASSED]
Test Case '-[QWAlbumCountsUpdateSpec QWAlbumCountsUpdate_WhenUpdateCalled_ShouldUpdateLoversCount]' passed (0.005 seconds).
Test Suite 'QWAlbumCountsUpdateSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.011 (0.011) seconds
Test Suite 'QWAlbumParserSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAlbumParserSpec QWAlbumParser_Creation_WithProvidedCoradataAccessor_ShouldHaveItSet]' started.
2013-06-07 10:57:59.731 DemoDev[2667:1d603] + 'QWAlbumParser, creation, with provided coradata accessor, should have it set' [PASSED]
Test Case '-[QWAlbumParserSpec QWAlbumParser_Creation_WithProvidedCoradataAccessor_ShouldHaveItSet]' passed (0.002 seconds).
Test Case '-[QWAlbumParserSpec QWAlbumParser_Creation_WithProvidedCoradataAccessor_ShouldCreateAProperlyConfiguredPhotoParser]' started.
2013-06-07 10:57:59.733 DemoDev[2667:1d603] + 'QWAlbumParser, creation, with provided coradata accessor, should create a properly configured photo parser' [PASSED]
Test Case '-[QWAlbumParserSpec QWAlbumParser_Creation_WithProvidedCoradataAccessor_ShouldCreateAProperlyConfiguredPhotoParser]' passed (0.002 seconds).
Test Case '-[QWAlbumParserSpec QWAlbumParser_Creation_WithoutProvidingCoradataAccessor_ShouldUseTheDefaultBackgroundOne]' started.
2013-06-07 10:57:59.734 DemoDev[2667:1d603] + 'QWAlbumParser, creation, without providing coradata accessor, should use the default background one' [PASSED]
Test Case '-[QWAlbumParserSpec QWAlbumParser_Creation_WithoutProvidingCoradataAccessor_ShouldUseTheDefaultBackgroundOne]' passed (0.000 seconds).
Test Case '-[QWAlbumParserSpec QWAlbumParser_Creation_WithoutProvidingCoradataAccessor_ShouldCreateAProperlyConfiguredPhotoParser]' started.
2013-06-07 10:57:59.735 DemoDev[2667:1d603] + 'QWAlbumParser, creation, without providing coradata accessor, should create a properly configured photo parser' [PASSED]
Test Case '-[QWAlbumParserSpec QWAlbumParser_Creation_WithoutProvidingCoradataAccessor_ShouldCreateAProperlyConfiguredPhotoParser]' passed (0.000 seconds).
Test Case '-[QWAlbumParserSpec QWAlbumParser_ParsingResponse_ShouldForwardPhotoParsingToPhotoParser]' started.
2013-06-07 10:57:59.738 DemoDev[2667:1d603] Created new object of class QWAlbum with id 12 in context 203305760
2013-06-07 10:57:59.738 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 203305760
2013-06-07 10:57:59.740 DemoDev[2667:1d603] + 'QWAlbumParser, parsing response, should forward photo parsing to photo parser' [PASSED]
Test Case '-[QWAlbumParserSpec QWAlbumParser_ParsingResponse_ShouldForwardPhotoParsingToPhotoParser]' passed (0.005 seconds).
Test Case '-[QWAlbumParserSpec QWAlbumParser_ParsingResponse_ShouldReturnParsedAlbum]' started.
2013-06-07 10:57:59.743 DemoDev[2667:1d603] Created new object of class QWAlbum with id 12 in context 203212624
2013-06-07 10:57:59.744 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 203212624
2013-06-07 10:57:59.746 DemoDev[2667:1d603] + 'QWAlbumParser, parsing response, should return parsed album' [PASSED]
Test Case '-[QWAlbumParserSpec QWAlbumParser_ParsingResponse_ShouldReturnParsedAlbum]' passed (0.005 seconds).
Test Case '-[QWAlbumParserSpec QWAlbumParser_ParsingResponse_WhenResponseContainsPrivateAlbum_ShouldReturnPrivateAlbum]' started.
2013-06-07 10:57:59.750 DemoDev[2667:1d603] Created new object of class QWAlbum with id 12 in context 202451696
2013-06-07 10:57:59.750 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 202451696
2013-06-07 10:57:59.752 DemoDev[2667:1d603] + 'QWAlbumParser, parsing response, when response contains private album, should return private album' [PASSED]
Test Case '-[QWAlbumParserSpec QWAlbumParser_ParsingResponse_WhenResponseContainsPrivateAlbum_ShouldReturnPrivateAlbum]' passed (0.006 seconds).
Test Case '-[QWAlbumParserSpec QWAlbumParser_ParsingResponse_WhenResponseContainsPublicAlbum_ShouldReturnPrivateAlbum]' started.
2013-06-07 10:57:59.755 DemoDev[2667:1d603] Created new object of class QWAlbum with id 12 in context 203350496
2013-06-07 10:57:59.756 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 203350496
2013-06-07 10:57:59.757 DemoDev[2667:1d603] + 'QWAlbumParser, parsing response, when response contains public album, should return private album' [PASSED]
Test Case '-[QWAlbumParserSpec QWAlbumParser_ParsingResponse_WhenResponseContainsPublicAlbum_ShouldReturnPrivateAlbum]' passed (0.005 seconds).
Test Suite 'QWAlbumParserSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 8 tests, with 0 failures (0 unexpected) in 0.026 (0.029) seconds
Test Suite 'QWAlbumTagsParserSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingDemoUsers_WhenTagWithParsedUserAlreadyExists_ShouldNOTCreateANewTag]' started.
2013-06-07 10:57:59.762 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing demo users, when tag with parsed user already exists, should NOT create a new tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingDemoUsers_WhenTagWithParsedUserAlreadyExists_ShouldNOTCreateANewTag]' passed (0.005 seconds).
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingDemoUsers_WhenTagWithParsedUserDoesNOTExist_ShouldCreateANewTag]' started.
2013-06-07 10:57:59.768 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing demo users, when tag with parsed user does NOT exist, should create a new tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingDemoUsers_WhenTagWithParsedUserDoesNOTExist_ShouldCreateANewTag]' passed (0.005 seconds).
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingDemoUsers_WhenParsedResponseDoesNOTContainATagFromDatabase_ShouldRemoveATag]' started.
2013-06-07 10:57:59.773 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing demo users, when parsed response does NOT contain a tag from database, should remove a tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingDemoUsers_WhenParsedResponseDoesNOTContainATagFromDatabase_ShouldRemoveATag]' passed (0.005 seconds).
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingContacts_WhenTagWithParsedContactAlreadyExists_ShouldNOTCreateANewTag]' started.
2013-06-07 10:57:59.777 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing contacts, when tag with parsed contact already exists, should NOT create a new tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingContacts_WhenTagWithParsedContactAlreadyExists_ShouldNOTCreateANewTag]' passed (0.004 seconds).
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingContacts_WhenTagWithParsedContactDoesNOTExist_ShouldCreateANewTag]' started.
2013-06-07 10:57:59.782 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing contacts, when tag with parsed contact does NOT exist, should create a new tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingContacts_WhenTagWithParsedContactDoesNOTExist_ShouldCreateANewTag]' passed (0.004 seconds).
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingContacts_WhenParsedResponseDoesNOTContainATagFromDatabase_ShouldRemoveATag]' started.
2013-06-07 10:57:59.786 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing contacts, when parsed response does NOT contain a tag from database, should remove a tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingContacts_WhenParsedResponseDoesNOTContainATagFromDatabase_ShouldRemoveATag]' passed (0.004 seconds).
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingFreeTextUsers_WhenTagWithParsedFreeTextUserAlreadyExists_ShouldNOTCreateANewTag]' started.
2013-06-07 10:57:59.790 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing free text users, when tag with parsed free text user already exists, should NOT create a new tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingFreeTextUsers_WhenTagWithParsedFreeTextUserAlreadyExists_ShouldNOTCreateANewTag]' passed (0.004 seconds).
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingFreeTextUsers_WhenTagWithParsedFreeTextUserDoesNOTExist_ShouldCreateANewTag]' started.
2013-06-07 10:57:59.795 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing free text users, when tag with parsed free text user does NOT exist, should create a new tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingFreeTextUsers_WhenTagWithParsedFreeTextUserDoesNOTExist_ShouldCreateANewTag]' passed (0.004 seconds).
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingFreeTextUsers_WhenParsedResponseDoesNOTContainATagFromDatabase_ShouldRemoveATag]' started.
2013-06-07 10:57:59.799 DemoDev[2667:1d603] + 'QWAlbumTagsParser, parsing free text users, when parsed response does NOT contain a tag from database, should remove a tag' [PASSED]
Test Case '-[QWAlbumTagsParserSpec QWAlbumTagsParser_ParsingFreeTextUsers_WhenParsedResponseDoesNOTContainATagFromDatabase_ShouldRemoveATag]' passed (0.004 seconds).
Test Suite 'QWAlbumTagsParserSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 9 tests, with 0 failures (0 unexpected) in 0.039 (0.043) seconds
Test Suite 'QWAllUserCommentsParserSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForNewComment_ShouldUpdateAlbumCommentsCount]' started.
2013-06-07 10:57:59.805 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 353497440
2013-06-07 10:57:59.806 DemoDev[2667:1d603] Created new object of class QWComment with id 2 in context 353497440
2013-06-07 10:57:59.806 DemoDev[2667:1d603] + 'QWAllUserCommentsParser, for new comment, should update album comments count' [PASSED]
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForNewComment_ShouldUpdateAlbumCommentsCount]' passed (0.006 seconds).
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForNewComment_ShouldUpdatePhotosCommentsCount]' started.
2013-06-07 10:57:59.812 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 202453152
2013-06-07 10:57:59.813 DemoDev[2667:1d603] Created new object of class QWComment with id 2 in context 202453152
2013-06-07 10:57:59.814 DemoDev[2667:1d603] + 'QWAllUserCommentsParser, for new comment, should update photos comments count' [PASSED]
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForNewComment_ShouldUpdatePhotosCommentsCount]' passed (0.007 seconds).
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForNewComment_ShouldUpdateCountersInShareDemoFeedObject]' started.
2013-06-07 10:57:59.819 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 353525744
2013-06-07 10:57:59.820 DemoDev[2667:1d603] Created new object of class QWComment with id 2 in context 353525744
2013-06-07 10:57:59.820 DemoDev[2667:1d603] + 'QWAllUserCommentsParser, for new comment, should update counters in share demo feed object' [PASSED]
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForNewComment_ShouldUpdateCountersInShareDemoFeedObject]' passed (0.006 seconds).
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForExistingComment_ShouldNotUpdateAlbumCommentsCount]' started.
2013-06-07 10:57:59.826 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 353462256
2013-06-07 10:57:59.826 DemoDev[2667:1d603] + 'QWAllUserCommentsParser, for existing comment, should not update album comments count' [PASSED]
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForExistingComment_ShouldNotUpdateAlbumCommentsCount]' passed (0.006 seconds).
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForExistingComment_ShouldNotUpdatePhotosCommentsCount]' started.
2013-06-07 10:57:59.832 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 353590688
2013-06-07 10:57:59.832 DemoDev[2667:1d603] + 'QWAllUserCommentsParser, for existing comment, should not update photos comments count' [PASSED]
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForExistingComment_ShouldNotUpdatePhotosCommentsCount]' passed (0.006 seconds).
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForExistingComment_ShouldNotUpdateCountersInShareDemoFeedObject]' started.
2013-06-07 10:57:59.838 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 202453152
2013-06-07 10:57:59.839 DemoDev[2667:1d603] + 'QWAllUserCommentsParser, for existing comment, should not update counters in share demo feed object' [PASSED]
Test Case '-[QWAllUserCommentsParserSpec QWAllUserCommentsParser_ForExistingComment_ShouldNotUpdateCountersInShareDemoFeedObject]' passed (0.006 seconds).
Test Suite 'QWAllUserCommentsParserSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.037 (0.039) seconds
Test Suite 'QWAppDelegateSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAppDelegateSpec QWAppDelegate_EnteringForeground_ShouldUpdatePopularityForLoggedUserIfNeeded]' started.
2013-06-07 10:57:59.841 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/requests, method: GET body: 
2013-06-07 10:57:59.841 DemoDev[2667:1d603] refreshNotifications by timer later than timestamp 1369410222.000000, current user id :22
2013-06-07 10:57:59.841 DemoDev[2667:1d603] + 'QWAppDelegate, entering foreground, should update popularity for logged user if needed' [PASSED]
Test Case '-[QWAppDelegateSpec QWAppDelegate_EnteringForeground_ShouldUpdatePopularityForLoggedUserIfNeeded]' passed (0.002 seconds).
Test Suite 'QWAppDelegateSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.002 (0.003) seconds
Test Suite 'QWAuthenticationHandlerSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_LoggingUser_WhenInUserDefaultsIsStoredThatUserHasAlreadyDemoed_WhenLoginResponseTellsThatUserHasAlreadyDemoed_ShouldSetHasAlreadyDemoedForSessionUserToYES]' started.
2013-06-07 10:57:59.846 DemoDev[2667:1d603] + 'QWAuthenticationHandler, logging user, when in user defaults is stored that user has already demoed, when login response tells that user has already demoed, should set hasAlreadyDemoed for session user to YES' [PASSED]
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_LoggingUser_WhenInUserDefaultsIsStoredThatUserHasAlreadyDemoed_WhenLoginResponseTellsThatUserHasAlreadyDemoed_ShouldSetHasAlreadyDemoedForSessionUserToYES]' passed (0.004 seconds).
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_LoggingUser_WhenInUserDefaultsIsStoredThatUserHasAlreadyDemoed_WhenLoginResponseTellsThatUserHasNOTYetDemoed_ShouldSetHasAlreadyDemoedForSessionUserToNO]' started.
2013-06-07 10:57:59.850 DemoDev[2667:1d603] + 'QWAuthenticationHandler, logging user, when in user defaults is stored that user has already demoed, when login response tells that user has NOT yet demoed, should set hasAlreadyDemoed for session user to NO ' [PASSED]
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_LoggingUser_WhenInUserDefaultsIsStoredThatUserHasAlreadyDemoed_WhenLoginResponseTellsThatUserHasNOTYetDemoed_ShouldSetHasAlreadyDemoedForSessionUserToNO]' passed (0.004 seconds).
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_LoggingUser_WhenInUserDefaultsIsStoredThatUserHasNotYetDemoed_WhenLoginResponseTellsThatUserHasAlreadyDemoed_ShouldSetHasAlreadyDemoedForSessionUserToYES]' started.
2013-06-07 10:57:59.854 DemoDev[2667:1d603] + 'QWAuthenticationHandler, logging user, when in user defaults is stored that user has not yet demoed, when login response tells that user has already demoed, should set hasAlreadyDemoed for session user to YES' [PASSED]
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_LoggingUser_WhenInUserDefaultsIsStoredThatUserHasNotYetDemoed_WhenLoginResponseTellsThatUserHasAlreadyDemoed_ShouldSetHasAlreadyDemoedForSessionUserToYES]' passed (0.003 seconds).
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_LoggingUser_WhenInUserDefaultsIsStoredThatUserHasNotYetDemoed_WhenLoginResponseTellsThatUserHasNOTYetDemoed_ShouldSetHasAlreadyDemoedForSessionUserToNO]' started.
2013-06-07 10:57:59.858 DemoDev[2667:1d603] + 'QWAuthenticationHandler, logging user, when in user defaults is stored that user has not yet demoed, when login response tells that user has NOT yet demoed, should set hasAlreadyDemoed for session user to NO' [PASSED]
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_LoggingUser_WhenInUserDefaultsIsStoredThatUserHasNotYetDemoed_WhenLoginResponseTellsThatUserHasNOTYetDemoed_ShouldSetHasAlreadyDemoedForSessionUserToNO]' passed (0.003 seconds).
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_ParsingLoginResponse_ShouldAddNewUser]' started.
2013-06-07 10:57:59.861 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 173922560
2013-06-07 10:57:59.862 DemoDev[2667:1d603] + 'QWAuthenticationHandler, parsing login response, should add new user' [PASSED]
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_ParsingLoginResponse_ShouldAddNewUser]' passed (0.003 seconds).
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_ParsingLoginResponse_ShouldMarkUserAsSuggested]' started.
2013-06-07 10:57:59.866 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 332869664
2013-06-07 10:57:59.867 DemoDev[2667:1d603] + 'QWAuthenticationHandler, parsing login response, should mark user as suggested' [PASSED]
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_ParsingLoginResponse_ShouldMarkUserAsSuggested]' passed (0.004 seconds).
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_ParsingLoginResponse_ShouldAddRankToUser]' started.
2013-06-07 10:57:59.871 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 203357680
2013-06-07 10:57:59.872 DemoDev[2667:1d603] + 'QWAuthenticationHandler, parsing login response, should add rank to user' [PASSED]
Test Case '-[QWAuthenticationHandlerSpec QWAuthenticationHandler_ParsingLoginResponse_ShouldAddRankToUser]' passed (0.004 seconds).
Test Suite 'QWAuthenticationHandlerSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 7 tests, with 0 failures (0 unexpected) in 0.025 (0.030) seconds
Test Suite 'QWAutoSharingFriendsLeftMenuAdapterSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldNotFetchDormantUser]' started.
2013-06-07 10:57:59.876 DemoDev[2667:1d603] + 'QWAutoSharingFriendsLeftMenuAdapter, should not fetch dormant user' [PASSED]
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldNotFetchDormantUser]' passed (0.004 seconds).
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldNotFetchLoggedUser]' started.
2013-06-07 10:57:59.880 DemoDev[2667:1d603] + 'QWAutoSharingFriendsLeftMenuAdapter, should not fetch logged user' [PASSED]
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldNotFetchLoggedUser]' passed (0.003 seconds).
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldFetchUsersWhoAreViewingDemo]' started.
2013-06-07 10:57:59.884 DemoDev[2667:1d603] + 'QWAutoSharingFriendsLeftMenuAdapter, should fetch users who are viewingDemo' [PASSED]
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldFetchUsersWhoAreViewingDemo]' passed (0.004 seconds).
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldFetchUsersWhoAreSharingDemo]' started.
2013-06-07 10:57:59.889 DemoDev[2667:1d603] + 'QWAutoSharingFriendsLeftMenuAdapter, should fetch users who are sharingDemo' [PASSED]
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldFetchUsersWhoAreSharingDemo]' passed (0.005 seconds).
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldNOTFetchUsersWhoAreNOTSharingDemoOrViewingDemo]' started.
2013-06-07 10:57:59.895 DemoDev[2667:1d603] + 'QWAutoSharingFriendsLeftMenuAdapter, should NOT fetch users who are NOT sharingDemo or viewingDemo' [PASSED]
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldNOTFetchUsersWhoAreNOTSharingDemoOrViewingDemo]' passed (0.005 seconds).
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldReturnNumberOfRowsEqualToNumberOrUsersThatAreViewingDemoAndSharingDemo]' started.
2013-06-07 10:57:59.901 DemoDev[2667:1d603] + 'QWAutoSharingFriendsLeftMenuAdapter, should return number of rows equal to number or users that are viewingDemo and sharingDemo' [PASSED]
Test Case '-[QWAutoSharingFriendsLeftMenuAdapterSpec QWAutoSharingFriendsLeftMenuAdapter_ShouldReturnNumberOfRowsEqualToNumberOrUsersThatAreViewingDemoAndSharingDemo]' passed (0.005 seconds).
Test Suite 'QWAutoSharingFriendsLeftMenuAdapterSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.027 (0.030) seconds
Test Suite 'QWBatchMetadataUploadRequestSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHavingADictionaryOnTheRootLevel]' started.
2013-06-07 10:57:59.902 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by having a dictionary on the root level' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHavingADictionaryOnTheRootLevel]' passed (0.001 seconds).
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByProvidingADevice_id]' started.
2013-06-07 10:57:59.904 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by providing a device_id' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByProvidingADevice_id]' passed (0.001 seconds).
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHavingAArrayWithPhotoInfo]' started.
2013-06-07 10:57:59.905 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by having a array with photo info' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHavingAArrayWithPhotoInfo]' passed (0.001 seconds).
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheProperAmount]' started.
2013-06-07 10:57:59.906 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by holding photo info, in the proper amount' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheProperAmount]' passed (0.001 seconds).
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDicts]' started.
2013-06-07 10:57:59.908 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by holding photo info, in the form of dicts' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDicts]' passed (0.001 seconds).
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDictsEach_HoldingALocalPhotoIdassetURL]' started.
2013-06-07 10:57:59.909 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by holding photo info, in the form of dicts each, holding a local photo id (assetURL)' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDictsEach_HoldingALocalPhotoIdassetURL]' passed (0.001 seconds).
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDictsEach_HoldingATimestamp]' started.
2013-06-07 10:57:59.910 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by holding photo info, in the form of dicts each, holding a timestamp' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDictsEach_HoldingATimestamp]' passed (0.001 seconds).
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDictsEach_HoldingALat]' started.
2013-06-07 10:57:59.912 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by holding photo info, in the form of dicts each, holding a lat' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDictsEach_HoldingALat]' passed (0.001 seconds).
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDictsEach_HoldingALon]' started.
2013-06-07 10:57:59.913 DemoDev[2667:1d603] + 'QWBatchMetadataUploadRequest, should conform with the API, by holding photo info, in the form of dicts each, holding a lon' [PASSED]
Test Case '-[QWBatchMetadataUploadRequestSpec QWBatchMetadataUploadRequest_ShouldConformWithTheAPI_ByHoldingPhotoInfo_InTheFormOfDictsEach_HoldingALon]' passed (0.001 seconds).
Test Suite 'QWBatchMetadataUploadRequestSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 9 tests, with 0 failures (0 unexpected) in 0.007 (0.012) seconds
Test Suite 'QWCommentsParserSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:57:59.919 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 174026192
2013-06-07 10:57:59.920 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 174026192
2013-06-07 10:57:59.920 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, should update last activity timestamp' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_ShouldUpdateLastActivityTimestamp]' passed (0.007 seconds).
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingNewComment_ShouldUpdatePhotoCommentsCount]' started.
2013-06-07 10:57:59.927 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 334333504
2013-06-07 10:57:59.928 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 334333504
2013-06-07 10:57:59.929 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, when parsing new comment, should update photo comments count' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingNewComment_ShouldUpdatePhotoCommentsCount]' passed (0.008 seconds).
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingNewComment_ShouldAddCommentToPhoto]' started.
2013-06-07 10:57:59.935 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 334369312
2013-06-07 10:57:59.936 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 334369312
2013-06-07 10:57:59.936 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, when parsing new comment, should add comment to photo' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingNewComment_ShouldAddCommentToPhoto]' passed (0.007 seconds).
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingNewComment_ShouldUpdateAlbumCommentsCount]' started.
2013-06-07 10:57:59.942 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 334351184
2013-06-07 10:57:59.942 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 334351184
2013-06-07 10:57:59.943 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, when parsing new comment, should update album comments count' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingNewComment_ShouldUpdateAlbumCommentsCount]' passed (0.006 seconds).
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingNewComment_ShouldUpdateCountersInShareDemoFeedObject]' started.
2013-06-07 10:57:59.949 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 173080096
2013-06-07 10:57:59.950 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 173080096
2013-06-07 10:57:59.951 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, when parsing new comment, should update counters in share demo feed object' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingNewComment_ShouldUpdateCountersInShareDemoFeedObject]' passed (0.008 seconds).
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingExistingComment_ShouldNotUpdatePhotoCommentsCount]' started.
2013-06-07 10:57:59.957 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 174014752
2013-06-07 10:57:59.958 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, when parsing existing comment, should not update photo comments count' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingExistingComment_ShouldNotUpdatePhotoCommentsCount]' passed (0.006 seconds).
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingExistingComment_ShouldNotAddCommentToPhoto]' started.
2013-06-07 10:57:59.964 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 354519024
2013-06-07 10:57:59.964 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, when parsing existing comment, should not add comment to photo' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingExistingComment_ShouldNotAddCommentToPhoto]' passed (0.006 seconds).
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingExistingComment_ShouldNotUpdateAlbumCommentsCount]' started.
2013-06-07 10:57:59.971 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 333381328
2013-06-07 10:57:59.971 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, when parsing existing comment, should not update album comments count' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingExistingComment_ShouldNotUpdateAlbumCommentsCount]' passed (0.007 seconds).
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingExistingComment_ShouldNotUpdateCountersInShareDemoFeedObject]' started.
2013-06-07 10:57:59.979 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 333063504
2013-06-07 10:57:59.979 DemoDev[2667:1d603] + 'QWCommentsParser, parsing comments, when parsing existing comment, should not update counters in share demo feed object' [PASSED]
Test Case '-[QWCommentsParserSpec QWCommentsParser_ParsingComments_WhenParsingExistingComment_ShouldNotUpdateCountersInShareDemoFeedObject]' passed (0.008 seconds).
Test Suite 'QWCommentsParserSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 9 tests, with 0 failures (0 unexpected) in 0.062 (0.066) seconds
Test Suite 'QWContactsHandlerSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWContactsHandlerSpec QWContactsHandler_CreatingHashedEmailsDictionary_ShouldMapAllEmailsToUserId]' started.
2013-06-07 10:57:59.982 DemoDev[2667:1d603] + 'QWContactsHandler, creating hashed emails dictionary, should map all emails to user id' [PASSED]
Test Case '-[QWContactsHandlerSpec QWContactsHandler_CreatingHashedEmailsDictionary_ShouldMapAllEmailsToUserId]' passed (0.002 seconds).
Test Suite 'QWContactsHandlerSpec' finished at 2013-06-07 08:57:59 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.002 (0.002) seconds
Test Suite 'QWDeleteCommentExecutorSpec' started at 2013-06-07 08:57:59 +0000
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldRemoveCommentFromPhoto]' started.
2013-06-07 10:57:59.989 DemoDev[2667:1d603] + 'QWDeleteCommentExecutor, executing request, when request is successful, should remove comment from photo' [PASSED]
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldRemoveCommentFromPhoto]' passed (0.007 seconds).
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateAlbumsCommentsCount]' started.
2013-06-07 10:57:59.997 DemoDev[2667:1d603] + 'QWDeleteCommentExecutor, executing request, when request is successful, should update albums comments count' [PASSED]
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateAlbumsCommentsCount]' passed (0.007 seconds).
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdatePopularityOfPhoto]' started.
2013-06-07 10:58:00.005 DemoDev[2667:1d603] + 'QWDeleteCommentExecutor, executing request, when request is successful, should update popularity of photo' [PASSED]
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdatePopularityOfPhoto]' passed (0.008 seconds).
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestFailed_ShouldAddCommentForPhoto]' started.
2013-06-07 10:58:00.014 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 173075248
2013-06-07 10:58:00.016 DemoDev[2667:1d603] + 'QWDeleteCommentExecutor, executing request, when request failed, should add comment for photo' [PASSED]
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestFailed_ShouldAddCommentForPhoto]' passed (0.010 seconds).
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateAlbumsCommentsCount]' started.
2013-06-07 10:58:00.023 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 354566288
2013-06-07 10:58:00.024 DemoDev[2667:1d603] + 'QWDeleteCommentExecutor, executing request, when request failed, should update albums comments count' [PASSED]
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateAlbumsCommentsCount]' passed (0.008 seconds).
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdatePopularityOfPhoto]' started.
2013-06-07 10:58:00.031 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 354572176
2013-06-07 10:58:00.032 DemoDev[2667:1d603] + 'QWDeleteCommentExecutor, executing request, when request failed, should update popularity of photo' [PASSED]
Test Case '-[QWDeleteCommentExecutorSpec QWDeleteCommentExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdatePopularityOfPhoto]' passed (0.008 seconds).
Test Suite 'QWDeleteCommentExecutorSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.047 (0.050) seconds
Test Suite 'QWDeleteCommentParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWDeleteCommentParserSpec QWDeleteCommentParser_ShouldDeleteACommentFromPhoto]' started.
2013-06-07 10:58:00.037 DemoDev[2667:1d603] + 'QWDeleteCommentParser, should delete a comment from photo' [PASSED]
Test Case '-[QWDeleteCommentParserSpec QWDeleteCommentParser_ShouldDeleteACommentFromPhoto]' passed (0.004 seconds).
Test Case '-[QWDeleteCommentParserSpec QWDeleteCommentParser_ShouldUpdateCommentsCountOnAPhoto]' started.
2013-06-07 10:58:00.042 DemoDev[2667:1d603] + 'QWDeleteCommentParser, should update comments count on a photo' [PASSED]
Test Case '-[QWDeleteCommentParserSpec QWDeleteCommentParser_ShouldUpdateCommentsCountOnAPhoto]' passed (0.005 seconds).
Test Case '-[QWDeleteCommentParserSpec QWDeleteCommentParser_ShouldUpdateCommentCountForAlbum]' started.
2013-06-07 10:58:00.046 DemoDev[2667:1d603] + 'QWDeleteCommentParser, should update comment count for album' [PASSED]
Test Case '-[QWDeleteCommentParserSpec QWDeleteCommentParser_ShouldUpdateCommentCountForAlbum]' passed (0.004 seconds).
Test Suite 'QWDeleteCommentParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.013 (0.014) seconds
Test Suite 'QWDeletePhotosParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWDeletePhotosParserSpec QWDeletePhotosParser_WhenDeletingPhotoWithLovers_ShouldUpdateAlbumsLoversCount]' started.
2013-06-07 10:58:00.052 DemoDev[2667:1d603] + 'QWDeletePhotosParser, when deleting photo with lovers, should update album's lovers count' [PASSED]
Test Case '-[QWDeletePhotosParserSpec QWDeletePhotosParser_WhenDeletingPhotoWithLovers_ShouldUpdateAlbumsLoversCount]' passed (0.005 seconds).
Test Case '-[QWDeletePhotosParserSpec QWDeletePhotosParser_WhenDeletingPhotoWithoutLovers_ShouldNotChangeAlbumLoversCount]' started.
2013-06-07 10:58:00.057 DemoDev[2667:1d603] + 'QWDeletePhotosParser, when deleting photo without lovers, should not change album lovers count' [PASSED]
Test Case '-[QWDeletePhotosParserSpec QWDeletePhotosParser_WhenDeletingPhotoWithoutLovers_ShouldNotChangeAlbumLoversCount]' passed (0.006 seconds).
Test Case '-[QWDeletePhotosParserSpec QWDeletePhotosParser_WhenDeletingPhotoWithComments_ShouldUpdateAlbumsCommentsCount]' started.
2013-06-07 10:58:00.062 DemoDev[2667:1d603] + 'QWDeletePhotosParser, when deleting photo with comments, should update album's comments count' [PASSED]
Test Case '-[QWDeletePhotosParserSpec QWDeletePhotosParser_WhenDeletingPhotoWithComments_ShouldUpdateAlbumsCommentsCount]' passed (0.004 seconds).
Test Case '-[QWDeletePhotosParserSpec QWDeletePhotosParser_WhenDeletingPhotoWithoutComments_ShouldNotChangeAlbumLoversCount]' started.
2013-06-07 10:58:00.067 DemoDev[2667:1d603] + 'QWDeletePhotosParser, when deleting photo without comments, should not change album lovers count' [PASSED]
Test Case '-[QWDeletePhotosParserSpec QWDeletePhotosParser_WhenDeletingPhotoWithoutComments_ShouldNotChangeAlbumLoversCount]' passed (0.004 seconds).
Test Suite 'QWDeletePhotosParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.019 (0.021) seconds
Test Suite 'QWEmailAlbumShareParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWEmailAlbumShareParserSpec QWEmailAlbumShareParser_ParsingResponse_ShouldAddUsersToAlbumsShareList]' started.
2013-06-07 10:58:00.072 DemoDev[2667:1d603] + 'QWEmailAlbumShareParser, parsing response, should add users to album's share list' [PASSED]
Test Case '-[QWEmailAlbumShareParserSpec QWEmailAlbumShareParser_ParsingResponse_ShouldAddUsersToAlbumsShareList]' passed (0.005 seconds).
Test Case '-[QWEmailAlbumShareParserSpec QWEmailAlbumShareParser_ParsingResponse_ShouldCreateNewUserWhenDormantAccountWasCreated]' started.
2013-06-07 10:58:00.078 DemoDev[2667:1d603] + 'QWEmailAlbumShareParser, parsing response, should create new user when dormant account was created' [PASSED]
Test Case '-[QWEmailAlbumShareParserSpec QWEmailAlbumShareParser_ParsingResponse_ShouldCreateNewUserWhenDormantAccountWasCreated]' passed (0.005 seconds).
Test Case '-[QWEmailAlbumShareParserSpec QWEmailAlbumShareParser_ParsingResponse_ShouldAddDemoIdsToContacts]' started.
2013-06-07 10:58:00.083 DemoDev[2667:1d603] + 'QWEmailAlbumShareParser, parsing response, should add demo ids to contacts' [PASSED]
Test Case '-[QWEmailAlbumShareParserSpec QWEmailAlbumShareParser_ParsingResponse_ShouldAddDemoIdsToContacts]' passed (0.005 seconds).
Test Case '-[QWEmailAlbumShareParserSpec QWEmailAlbumShareParser_ParsingResponse_ShouldCreateContactForEveryEmail]' started.
2013-06-07 10:58:00.090 DemoDev[2667:1d603] + 'QWEmailAlbumShareParser, parsing response, should create contact for every email' [PASSED]
Test Case '-[QWEmailAlbumShareParserSpec QWEmailAlbumShareParser_ParsingResponse_ShouldCreateContactForEveryEmail]' passed (0.007 seconds).
Test Suite 'QWEmailAlbumShareParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.022 (0.023) seconds
Test Suite 'QWEmailPhotoShareParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWEmailPhotoShareParserSpec QWEmailPhotoShareParser_ParsingResponse_ShouldAddUsersToPhotosShareList]' started.
2013-06-07 10:58:00.098 DemoDev[2667:1d603] + 'QWEmailPhotoShareParser, parsing response, should add users to photo's share list' [PASSED]
Test Case '-[QWEmailPhotoShareParserSpec QWEmailPhotoShareParser_ParsingResponse_ShouldAddUsersToPhotosShareList]' passed (0.008 seconds).
Test Case '-[QWEmailPhotoShareParserSpec QWEmailPhotoShareParser_ParsingResponse_ShouldCreateNewUserWhenDormantAccountWasCreated]' started.
2013-06-07 10:58:00.107 DemoDev[2667:1d603] + 'QWEmailPhotoShareParser, parsing response, should create new user when dormant account was created' [PASSED]
Test Case '-[QWEmailPhotoShareParserSpec QWEmailPhotoShareParser_ParsingResponse_ShouldCreateNewUserWhenDormantAccountWasCreated]' passed (0.009 seconds).
Test Case '-[QWEmailPhotoShareParserSpec QWEmailPhotoShareParser_ParsingResponse_ShouldAddDemoIdsToContacts]' started.
2013-06-07 10:58:00.115 DemoDev[2667:1d603] + 'QWEmailPhotoShareParser, parsing response, should add demo ids to contacts' [PASSED]
Test Case '-[QWEmailPhotoShareParserSpec QWEmailPhotoShareParser_ParsingResponse_ShouldAddDemoIdsToContacts]' passed (0.007 seconds).
Test Case '-[QWEmailPhotoShareParserSpec QWEmailPhotoShareParser_ParsingResponse_ShouldCreateContactForEveryEmail]' started.
2013-06-07 10:58:00.121 DemoDev[2667:1d603] + 'QWEmailPhotoShareParser, parsing response, should create contact for every email' [PASSED]
Test Case '-[QWEmailPhotoShareParserSpec QWEmailPhotoShareParser_ParsingResponse_ShouldCreateContactForEveryEmail]' passed (0.005 seconds).
Test Suite 'QWEmailPhotoShareParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.029 (0.031) seconds
Test Suite 'QWEmailDemoShareParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWEmailDemoShareParserSpec QWEmailDemoShareParser_ParsingResponse_ShouldSetUsersAsViewingDemo]' started.
2013-06-07 10:58:00.125 DemoDev[2667:1d603] + 'QWEmailDemoShareParser, parsing response, should set users as viewing Demo' [PASSED]
Test Case '-[QWEmailDemoShareParserSpec QWEmailDemoShareParser_ParsingResponse_ShouldSetUsersAsViewingDemo]' passed (0.004 seconds).
Test Case '-[QWEmailDemoShareParserSpec QWEmailDemoShareParser_ParsingResponse_ShouldCreateNewUserWhenDormantAccountWasCreated]' started.
2013-06-07 10:58:00.130 DemoDev[2667:1d603] + 'QWEmailDemoShareParser, parsing response, should create new user when dormant account was created' [PASSED]
Test Case '-[QWEmailDemoShareParserSpec QWEmailDemoShareParser_ParsingResponse_ShouldCreateNewUserWhenDormantAccountWasCreated]' passed (0.005 seconds).
Test Case '-[QWEmailDemoShareParserSpec QWEmailDemoShareParser_ParsingResponse_ShouldAddDemoIdsToContacts]' started.
2013-06-07 10:58:00.137 DemoDev[2667:1d603] + 'QWEmailDemoShareParser, parsing response, should add demo ids to contacts' [PASSED]
Test Case '-[QWEmailDemoShareParserSpec QWEmailDemoShareParser_ParsingResponse_ShouldAddDemoIdsToContacts]' passed (0.006 seconds).
Test Case '-[QWEmailDemoShareParserSpec QWEmailDemoShareParser_ParsingResponse_ShouldCreateContactForEveryEmail]' started.
2013-06-07 10:58:00.144 DemoDev[2667:1d603] + 'QWEmailDemoShareParser, parsing response, should create contact for every email' [PASSED]
Test Case '-[QWEmailDemoShareParserSpec QWEmailDemoShareParser_ParsingResponse_ShouldCreateContactForEveryEmail]' passed (0.006 seconds).
Test Suite 'QWEmailDemoShareParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.022 (0.024) seconds
Test Suite 'QWFeedHelperSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWFeedHelperSpec QWFeedHelper_SettingCommonAlbumProperties_WhenPassingNullValuesForLocationAndBusiness_ShouldOverrideAlbumLocationToNil]' started.
2013-06-07 10:58:00.150 DemoDev[2667:1d603] + 'QWFeedHelper, setting common album properties, when passing null values for location and business, should override album location to nil' [PASSED]
Test Case '-[QWFeedHelperSpec QWFeedHelper_SettingCommonAlbumProperties_WhenPassingNullValuesForLocationAndBusiness_ShouldOverrideAlbumLocationToNil]' passed (0.005 seconds).
Test Case '-[QWFeedHelperSpec QWFeedHelper_SettingCommonAlbumProperties_WhenPassingNullValuesForLocationAndBusiness_ShouldOverrideAlbumBusinessToNil]' started.
2013-06-07 10:58:00.155 DemoDev[2667:1d603] + 'QWFeedHelper, setting common album properties, when passing null values for location and business, should override album business to nil' [PASSED]
Test Case '-[QWFeedHelperSpec QWFeedHelper_SettingCommonAlbumProperties_WhenPassingNullValuesForLocationAndBusiness_ShouldOverrideAlbumBusinessToNil]' passed (0.004 seconds).
Test Case '-[QWFeedHelperSpec QWFeedHelper_SettingCommonAlbumProperties_WhenPassingNonNullValuesForLocationAndBusiness_ShouldUpdateAlbumLocation]' started.
2013-06-07 10:58:00.160 DemoDev[2667:1d603] + 'QWFeedHelper, setting common album properties, when passing non null values for location and business, should update album location' [PASSED]
Test Case '-[QWFeedHelperSpec QWFeedHelper_SettingCommonAlbumProperties_WhenPassingNonNullValuesForLocationAndBusiness_ShouldUpdateAlbumLocation]' passed (0.004 seconds).
Test Case '-[QWFeedHelperSpec QWFeedHelper_SettingCommonAlbumProperties_WhenPassingNonNullValuesForLocationAndBusiness_ShouldUpdateAlbumBusiness]' started.
2013-06-07 10:58:00.164 DemoDev[2667:1d603] + 'QWFeedHelper, setting common album properties, when passing non null values for location and business, should update album business' [PASSED]
Test Case '-[QWFeedHelperSpec QWFeedHelper_SettingCommonAlbumProperties_WhenPassingNonNullValuesForLocationAndBusiness_ShouldUpdateAlbumBusiness]' passed (0.003 seconds).
Test Suite 'QWFeedHelperSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.017 (0.019) seconds
Test Suite 'QWFeedParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWFeedParserSpec QWFeedParser_SharingPhotos_WhenSharedOnePhoto_WhenAlbumBusinessAndLocationAreNulls_ShouldOverrideAlbumBusinessToNil]' started.
2013-06-07 10:58:00.169 DemoDev[2667:1d603] Created new object of class QWFeedObject with id 7822 in context 354561056
2013-06-07 10:58:00.171 DemoDev[2667:1d603] Created new object of class QWUser with id 151 in context 354561056
2013-06-07 10:58:00.173 DemoDev[2667:1d603] Created new object of class QWPhoto with id 54196 in context 354561056
2013-06-07 10:58:00.175 DemoDev[2667:1d603] Created new object of class QWUser with id 73 in context 354561056
2013-06-07 10:58:00.175 DemoDev[2667:1d603] + 'QWFeedParser, sharing photos, when shared one photo, when album business and location are nulls, should override album business to nil' [PASSED]
Test Case '-[QWFeedParserSpec QWFeedParser_SharingPhotos_WhenSharedOnePhoto_WhenAlbumBusinessAndLocationAreNulls_ShouldOverrideAlbumBusinessToNil]' passed (0.011 seconds).
Test Case '-[QWFeedParserSpec QWFeedParser_SharingPhotos_WhenSharedOnePhoto_WhenAlbumBusinessAndLocationAreNulls_ShouldOverrideAlbumLocationToNil]' started.
2013-06-07 10:58:00.180 DemoDev[2667:1d603] Created new object of class QWFeedObject with id 7822 in context 353903792
2013-06-07 10:58:00.181 DemoDev[2667:1d603] Created new object of class QWUser with id 151 in context 353903792
2013-06-07 10:58:00.183 DemoDev[2667:1d603] Created new object of class QWPhoto with id 54196 in context 353903792
2013-06-07 10:58:00.184 DemoDev[2667:1d603] Created new object of class QWUser with id 73 in context 353903792
2013-06-07 10:58:00.184 DemoDev[2667:1d603] + 'QWFeedParser, sharing photos, when shared one photo, when album business and location are nulls, should override album location to nil' [PASSED]
Test Case '-[QWFeedParserSpec QWFeedParser_SharingPhotos_WhenSharedOnePhoto_WhenAlbumBusinessAndLocationAreNulls_ShouldOverrideAlbumLocationToNil]' passed (0.008 seconds).
Test Case '-[QWFeedParserSpec QWFeedParser_SharingPhotos_WhenSharedOnePhoto_WhenAlbumBusinessAndLocationAreNotNulls_ShouldUpdateAlbumBusiness]' started.
2013-06-07 10:58:00.188 DemoDev[2667:1d603] Created new object of class QWFeedObject with id 7822 in context 354047728
2013-06-07 10:58:00.189 DemoDev[2667:1d603] Created new object of class QWUser with id 151 in context 354047728
2013-06-07 10:58:00.191 DemoDev[2667:1d603] Created new object of class QWPhoto with id 54196 in context 354047728
2013-06-07 10:58:00.192 DemoDev[2667:1d603] Created new object of class QWUser with id 73 in context 354047728
2013-06-07 10:58:00.192 DemoDev[2667:1d603] + 'QWFeedParser, sharing photos, when shared one photo, when album business and location are not nulls, should update album business' [PASSED]
Test Case '-[QWFeedParserSpec QWFeedParser_SharingPhotos_WhenSharedOnePhoto_WhenAlbumBusinessAndLocationAreNotNulls_ShouldUpdateAlbumBusiness]' passed (0.007 seconds).
Test Case '-[QWFeedParserSpec QWFeedParser_SharingPhotos_WhenSharedOnePhoto_WhenAlbumBusinessAndLocationAreNotNulls_ShouldUpdateAlbumLocation]' started.
2013-06-07 10:58:00.196 DemoDev[2667:1d603] Created new object of class QWFeedObject with id 7822 in context 354085152
2013-06-07 10:58:00.197 DemoDev[2667:1d603] Created new object of class QWUser with id 151 in context 354085152
2013-06-07 10:58:00.200 DemoDev[2667:1d603] Created new object of class QWPhoto with id 54196 in context 354085152
2013-06-07 10:58:00.201 DemoDev[2667:1d603] Created new object of class QWUser with id 73 in context 354085152
2013-06-07 10:58:00.202 DemoDev[2667:1d603] + 'QWFeedParser, sharing photos, when shared one photo, when album business and location are not nulls, should update album location' [PASSED]
Test Case '-[QWFeedParserSpec QWFeedParser_SharingPhotos_WhenSharedOnePhoto_WhenAlbumBusinessAndLocationAreNotNulls_ShouldUpdateAlbumLocation]' passed (0.009 seconds).
Test Suite 'QWFeedParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.036 (0.038) seconds
Test Suite 'QWFeedViewAdapterSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWFeedViewAdapterSpec QWFeedViewAdapter_DisplayingCell_WhenDisplayingLastCell_WhenDownloadedAllOldFeeds_ShouldNotDownloadNextBatchOfFeeds]' started.
2013-06-07 10:58:00.204 DemoDev[2667:1d603] + 'QWFeedViewAdapter, displaying cell, when displaying last cell, when downloaded all old feeds, should not download next batch of feeds' [PASSED]
Test Case '-[QWFeedViewAdapterSpec QWFeedViewAdapter_DisplayingCell_WhenDisplayingLastCell_WhenDownloadedAllOldFeeds_ShouldNotDownloadNextBatchOfFeeds]' passed (0.002 seconds).
Test Case '-[QWFeedViewAdapterSpec QWFeedViewAdapter_DisplayingCell_WhenDisplayingLastCell_WhenNotDownloadedAllOldFeeds_ShouldDownloadNextBatchOfFeeds]' started.
2013-06-07 10:58:00.206 DemoDev[2667:1d603] + 'QWFeedViewAdapter, displaying cell, when displaying last cell, when not downloaded all old feeds, should download next batch of feeds' [PASSED]
Test Case '-[QWFeedViewAdapterSpec QWFeedViewAdapter_DisplayingCell_WhenDisplayingLastCell_WhenNotDownloadedAllOldFeeds_ShouldDownloadNextBatchOfFeeds]' passed (0.002 seconds).
Test Suite 'QWFeedViewAdapterSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.004 (0.005) seconds
Test Suite 'QWFeedViewControllerSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWFeedViewControllerSpec QWFeedViewController_DisplayingFeedView_WhenThereAreNoSharedItems_ShouldShowEmptyFeedView]' started.
2013-06-07 10:58:00.217 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.225 DemoDev[2667:1d603] Presented THREAD view
2013-06-07 10:58:00.226 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/feed/list, method: POST body: count=20&timestamp=0&offset=0
2013-06-07 10:58:00.227 DemoDev[2667:1d603] + 'QWFeedViewController, displaying feed view, when there are no shared items, should show empty feed view' [PASSED]
Test Case '-[QWFeedViewControllerSpec QWFeedViewController_DisplayingFeedView_WhenThereAreNoSharedItems_ShouldShowEmptyFeedView]' passed (0.020 seconds).
Test Case '-[QWFeedViewControllerSpec QWFeedViewController_DisplayingFeedView_WhenThereAreNoSharedItems_IfNewItemsAppear_ShouldHideEmptyFeedView]' started.
2013-06-07 10:58:00.234 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.237 DemoDev[2667:1d603] Feed dealloc
2013-06-07 10:58:00.240 DemoDev[2667:1d603] Presented THREAD view
2013-06-07 10:58:00.241 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/feed/list, method: POST body: count=20&timestamp=0&offset=0
2013-06-07 10:58:00.245 DemoDev[2667:1d603] + 'QWFeedViewController, displaying feed view, when there are no shared items, if new items appear, should hide empty feed view' [PASSED]
Test Case '-[QWFeedViewControllerSpec QWFeedViewController_DisplayingFeedView_WhenThereAreNoSharedItems_IfNewItemsAppear_ShouldHideEmptyFeedView]' passed (0.017 seconds).
Test Case '-[QWFeedViewControllerSpec QWFeedViewController_DisplayingFeedView_WhenThereAreSomeSharedItems_ShouldNotDisplayEmptyFeedView]' started.
2013-06-07 10:58:00.252 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.255 DemoDev[2667:1d603] Feed dealloc
2013-06-07 10:58:00.258 DemoDev[2667:1d603] Presented THREAD view
2013-06-07 10:58:00.259 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/device/saveLastFeedDisplayTimestamp, method: POST body: timestamp=0
2013-06-07 10:58:00.260 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/feed/list, method: POST body: count=20&timestamp=0&offset=0
2013-06-07 10:58:00.261 DemoDev[2667:1d603] + 'QWFeedViewController, displaying feed view, when there are some shared items, should not display empty feed view' [PASSED]
Test Case '-[QWFeedViewControllerSpec QWFeedViewController_DisplayingFeedView_WhenThereAreSomeSharedItems_ShouldNotDisplayEmptyFeedView]' passed (0.016 seconds).
Test Case '-[QWFeedViewControllerSpec QWFeedViewController_DisplayingFeedView_WhenThereAreSomeSharedItems_IfAllSharedItemsDisappear_ShouldDisplayEmptyFeedView]' started.
2013-06-07 10:58:00.267 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.271 DemoDev[2667:1d603] Feed dealloc
2013-06-07 10:58:00.274 DemoDev[2667:1d603] Presented THREAD view
2013-06-07 10:58:00.275 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/device/saveLastFeedDisplayTimestamp, method: POST body: timestamp=0
2013-06-07 10:58:00.275 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/feed/list, method: POST body: count=20&timestamp=0&offset=0
2013-06-07 10:58:00.277 DemoDev[2667:1d603] + 'QWFeedViewController, displaying feed view, when there are some shared items, if all shared items disappear, should display empty feed view' [PASSED]
Test Case '-[QWFeedViewControllerSpec QWFeedViewController_DisplayingFeedView_WhenThereAreSomeSharedItems_IfAllSharedItemsDisappear_ShouldDisplayEmptyFeedView]' passed (0.015 seconds).
Test Suite 'QWFeedViewControllerSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.069 (0.071) seconds
Test Suite 'QWFullPhotoViewControllerSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWFullPhotoViewControllerSpec QWFullPhotoViewController_TappingOnDoneButton_ShouldUpdateViewsCount]' started.
2013-06-07 10:58:00.288 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.292 DemoDev[2667:1d603] + 'QWFullPhotoViewController, tapping on done button, should update views count' [PASSED]
Test Case '-[QWFullPhotoViewControllerSpec QWFullPhotoViewController_TappingOnDoneButton_ShouldUpdateViewsCount]' passed (0.015 seconds).
Test Case '-[QWFullPhotoViewControllerSpec QWFullPhotoViewController_TappingOnMovePhotoButton_ShouldUpdateViewsCount]' started.
2013-06-07 10:58:00.305 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.310 DemoDev[2667:1d603] Created new object of class QWUser with id 14 in context 359762000
2013-06-07 10:58:00.313 DemoDev[2667:1d603] + 'QWFullPhotoViewController, tapping on move photo button, should update views count' [PASSED]
Test Case '-[QWFullPhotoViewControllerSpec QWFullPhotoViewController_TappingOnMovePhotoButton_ShouldUpdateViewsCount]' passed (0.020 seconds).
Test Suite 'QWFullPhotoViewControllerSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.036 (0.036) seconds
Test Suite 'QWGetAlbumsUpdatesParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenCommentsCountIsDifferentFromLocalCommentsCount_CheckingIfCommentsAndLikersShouldBeDownloaded_ShouldReturnYES]' started.
2013-06-07 10:58:00.319 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing comments and likes counts, when comments count is different from local comments count, checking if comments and likers should be downloaded, should return YES' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenCommentsCountIsDifferentFromLocalCommentsCount_CheckingIfCommentsAndLikersShouldBeDownloaded_ShouldReturnYES]' passed (0.005 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenCommentsCountIsDifferentFromLocalCommentsCount_WhenWhereAreNoNewPhotosFoundInPhotoIdsList_ShouldDownloadCommentsAndLikers]' started.
2013-06-07 10:58:00.326 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing comments and likes counts, when comments count is different from local comments count, when where are no new photos found in photo ids list, should download comments and likers' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenCommentsCountIsDifferentFromLocalCommentsCount_WhenWhereAreNoNewPhotosFoundInPhotoIdsList_ShouldDownloadCommentsAndLikers]' passed (0.006 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenCommentsCountIsDifferentFromLocalCommentsCount_WhenThereAreNewPhotosFoundInPhotoIdsList_ShouldDownloadNewPhotos]' started.
2013-06-07 10:58:00.331 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing comments and likes counts, when comments count is different from local comments count, when there are new photos found in photo ids list, should download new photos' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenCommentsCountIsDifferentFromLocalCommentsCount_WhenThereAreNewPhotosFoundInPhotoIdsList_ShouldDownloadNewPhotos]' passed (0.004 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenCommentsCountAndLovesCountIsTheSameAsLocalCommentsCount_CheckingIfCommentsAndLikersShouldBeDownloaded_ShouldReturnNO]' started.
2013-06-07 10:58:00.337 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing comments and likes counts, when comments count and loves count is the same as local comments count, checking if comments and likers should be downloaded, should return NO' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenCommentsCountAndLovesCountIsTheSameAsLocalCommentsCount_CheckingIfCommentsAndLikersShouldBeDownloaded_ShouldReturnNO]' passed (0.005 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenLikesCountIsDifferentFromLocalLikesCount_CheckingIfCommentsAndLikersShouldBeDownloaded_ShouldReturnYES]' started.
2013-06-07 10:58:00.342 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing comments and likes counts, when likes count is different from local likes count, checking if comments and likers should be downloaded, should return YES' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenLikesCountIsDifferentFromLocalLikesCount_CheckingIfCommentsAndLikersShouldBeDownloaded_ShouldReturnYES]' passed (0.005 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenLikesCountIsDifferentFromLocalLikesCount_WhenWhereAreNoNewPhotosFoundInPhotoIdsList_ShouldDownloadCommentsAndLikers]' started.
2013-06-07 10:58:00.350 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing comments and likes counts, when likes count is different from local likes count, when where are no new photos found in photo ids list, should download comments and likers' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenLikesCountIsDifferentFromLocalLikesCount_WhenWhereAreNoNewPhotosFoundInPhotoIdsList_ShouldDownloadCommentsAndLikers]' passed (0.007 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenLikesCountIsDifferentFromLocalLikesCount_WhenThereAreNewPhotosFoundInPhotoIdsList_ShouldDownloadNewPhotos]' started.
2013-06-07 10:58:00.356 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing comments and likes counts, when likes count is different from local likes count, when there are new photos found in photo ids list, should download new photos' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingCommentsAndLikesCounts_WhenLikesCountIsDifferentFromLocalLikesCount_WhenThereAreNewPhotosFoundInPhotoIdsList_ShouldDownloadNewPhotos]' passed (0.005 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingPhotosIds_WhenTheListOfPhotoIdsDoesntContainPhotoIdsThatAreStoredLocally_ShouldRemovePhotosLocally]' started.
2013-06-07 10:58:00.362 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/photos/get, method: POST body: photos_ids=%5B5%2C4%5D
2013-06-07 10:58:00.363 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing photos ids, when the list of photo ids doesn't contain photo ids that are stored locally, should remove photos locally' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingPhotosIds_WhenTheListOfPhotoIdsDoesntContainPhotoIdsThatAreStoredLocally_ShouldRemovePhotosLocally]' passed (0.006 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingPhotosIds_WhenTheListOfPhotoIdsContainsIdsThatAreNotStoredLocally_ShouldDownloadPhotosWithThoseIds]' started.
2013-06-07 10:58:00.369 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, parsing photos ids, when the list of photo ids contains ids that are not stored locally, should download photos with those ids' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_ParsingPhotosIds_WhenTheListOfPhotoIdsContainsIdsThatAreNotStoredLocally_ShouldDownloadPhotosWithThoseIds]' passed (0.006 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNewValues_ShouldUpdateAlbumsProperties]' started.
2013-06-07 10:58:00.375 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, when receiving new values, should update album's properties' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNewValues_ShouldUpdateAlbumsProperties]' passed (0.005 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReveivingNullemptyValues_WhenReceivingNullValues_ShouldNilAlbumsProperties]' started.
2013-06-07 10:58:00.379 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, when reveiving null/empty values, when receiving null values, should nil albums properties' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReveivingNullemptyValues_WhenReceivingNullValues_ShouldNilAlbumsProperties]' passed (0.004 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReveivingNullemptyValues_WhenReceivingEmptyValues_ShouldNilAlbumsProperties]' started.
2013-06-07 10:58:00.384 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, when reveiving null/empty values, when receiving empty values, should nil albums properties' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReveivingNullemptyValues_WhenReceivingEmptyValues_ShouldNilAlbumsProperties]' passed (0.004 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNullemptyCityAndNotNullState_WhenCityIsNull_ShouldSetLocationToStateOnly]' started.
2013-06-07 10:58:00.388 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, when receiving null/empty city and not null state, when city is null, should set location to state only' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNullemptyCityAndNotNullState_WhenCityIsNull_ShouldSetLocationToStateOnly]' passed (0.004 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNullemptyCityAndNotNullState_WhenCityIsEmpty_ShouldSetLocationToStateOnly]' started.
2013-06-07 10:58:00.393 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, when receiving null/empty city and not null state, when city is empty, should set location to state only' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNullemptyCityAndNotNullState_WhenCityIsEmpty_ShouldSetLocationToStateOnly]' passed (0.004 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNullemptyStateAndNotNullCity_WhenStateIsNull_ShouldSetLocationToCityOnly]' started.
2013-06-07 10:58:00.398 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, when receiving null/empty state and not null city, when state is null, should set location to city only' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNullemptyStateAndNotNullCity_WhenStateIsNull_ShouldSetLocationToCityOnly]' passed (0.004 seconds).
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNullemptyStateAndNotNullCity_WhenStateIsEmpty_ShouldSetLocationToCityOnly]' started.
2013-06-07 10:58:00.404 DemoDev[2667:1d603] + 'QWGetAlbumsUpdatesParser, when receiving null/empty state and not null city, when state is empty, should set location to city only' [PASSED]
Test Case '-[QWGetAlbumsUpdatesParserSpec QWGetAlbumsUpdatesParser_WhenReceivingNullemptyStateAndNotNullCity_WhenStateIsEmpty_ShouldSetLocationToCityOnly]' passed (0.005 seconds).
Test Suite 'QWGetAlbumsUpdatesParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 16 tests, with 0 failures (0 unexpected) in 0.080 (0.090) seconds
Test Suite 'QWGetPhotosCommentsAndLoversRequestSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWGetPhotosCommentsAndLoversRequestSpec QWGetPhotosCommentsAndLoversRequest_WhenSending_ShouldHaveProperServerUrl]' started.
2013-06-07 10:58:00.405 DemoDev[2667:1d603] + 'QWGetPhotosCommentsAndLoversRequest, when sending, should have proper server url' [PASSED]
Test Case '-[QWGetPhotosCommentsAndLoversRequestSpec QWGetPhotosCommentsAndLoversRequest_WhenSending_ShouldHaveProperServerUrl]' passed (0.000 seconds).
Test Case '-[QWGetPhotosCommentsAndLoversRequestSpec QWGetPhotosCommentsAndLoversRequest_WhenSending_ShouldHaveProperParamsSet]' started.
2013-06-07 10:58:00.406 DemoDev[2667:1d603] + 'QWGetPhotosCommentsAndLoversRequest, when sending, should have proper params set' [PASSED]
Test Case '-[QWGetPhotosCommentsAndLoversRequestSpec QWGetPhotosCommentsAndLoversRequest_WhenSending_ShouldHaveProperParamsSet]' passed (0.000 seconds).
Test Suite 'QWGetPhotosCommentsAndLoversRequestSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.001 (0.002) seconds
Test Suite 'QWGetDemoSharingUsersInfoParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWGetDemoSharingUsersInfoParserSpec QWGetDemoSharingUsersInfoParser_ParsingResponse_WhenUserRequestedDemoShareAndRequestWasAccepted_ShouldRemoveDemoShareRequest]' started.
2013-06-07 10:58:00.410 DemoDev[2667:1d603] Created new object of class QWUser with id 4 in context 354901776
2013-06-07 10:58:00.410 DemoDev[2667:1d603] + 'QWGetDemoSharingUsersInfoParser, parsing response, when user requested demo share and request was accepted, should remove demo share request' [PASSED]
Test Case '-[QWGetDemoSharingUsersInfoParserSpec QWGetDemoSharingUsersInfoParser_ParsingResponse_WhenUserRequestedDemoShareAndRequestWasAccepted_ShouldRemoveDemoShareRequest]' passed (0.005 seconds).
Test Suite 'QWGetDemoSharingUsersInfoParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.005 (0.005) seconds
Test Suite 'QWGetRequestSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWGetRequestSpec QWGetRequest_WhenRequestingHttpMethodType_ShouldReturnGET]' started.
2013-06-07 10:58:00.412 DemoDev[2667:1d603] + 'QWGetRequest, when requesting http method type, should return GET' [PASSED]
Test Case '-[QWGetRequestSpec QWGetRequest_WhenRequestingHttpMethodType_ShouldReturnGET]' passed (0.000 seconds).
Test Suite 'QWGetRequestSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.000 (0.001) seconds
Test Suite 'QWGetSuggestedUsersParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWGetSuggestedUsersParserSpec QWGetSuggestedUsersParser_ParsingResponse_ShouldAddUser]' started.
2013-06-07 10:58:00.415 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 354913360
2013-06-07 10:58:00.416 DemoDev[2667:1d603] + 'QWGetSuggestedUsersParser, parsing response, should add user' [PASSED]
Test Case '-[QWGetSuggestedUsersParserSpec QWGetSuggestedUsersParser_ParsingResponse_ShouldAddUser]' passed (0.004 seconds).
Test Case '-[QWGetSuggestedUsersParserSpec QWGetSuggestedUsersParser_ParsingResponse_ShouldMarkUserAsSuggested]' started.
2013-06-07 10:58:00.419 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 355009968
2013-06-07 10:58:00.420 DemoDev[2667:1d603] + 'QWGetSuggestedUsersParser, parsing response, should mark user as suggested' [PASSED]
Test Case '-[QWGetSuggestedUsersParserSpec QWGetSuggestedUsersParser_ParsingResponse_ShouldMarkUserAsSuggested]' passed (0.004 seconds).
Test Case '-[QWGetSuggestedUsersParserSpec QWGetSuggestedUsersParser_ParsingResponse_ShouldAddRankToUser]' started.
2013-06-07 10:58:00.423 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 355113200
2013-06-07 10:58:00.424 DemoDev[2667:1d603] + 'QWGetSuggestedUsersParser, parsing response, should add rank to user' [PASSED]
Test Case '-[QWGetSuggestedUsersParserSpec QWGetSuggestedUsersParser_ParsingResponse_ShouldAddRankToUser]' passed (0.004 seconds).
Test Suite 'QWGetSuggestedUsersParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.011 (0.012) seconds
Test Suite 'QWGetUsersWeSharedPhotoWithParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWGetUsersWeSharedPhotoWithParserSpec QWGetUsersWeSharedPhotoWithParser_ParsingResponse_ShouldAddUsersToSharesList]' started.
2013-06-07 10:58:00.428 DemoDev[2667:1d603] Created new object of class QWUser with id 23 in context 355111856
2013-06-07 10:58:00.429 DemoDev[2667:1d603] Created new object of class QWUser with id 14 in context 355111856
2013-06-07 10:58:00.429 DemoDev[2667:1d603] Created new object of class QWUser with id 34 in context 355111856
2013-06-07 10:58:00.430 DemoDev[2667:1d603] + 'QWGetUsersWeSharedPhotoWithParser, parsing response, should add users to shares list' [PASSED]
Test Case '-[QWGetUsersWeSharedPhotoWithParserSpec QWGetUsersWeSharedPhotoWithParser_ParsingResponse_ShouldAddUsersToSharesList]' passed (0.006 seconds).
Test Case '-[QWGetUsersWeSharedPhotoWithParserSpec QWGetUsersWeSharedPhotoWithParser_ParsingResponse_WhenWeUnsharedPhotoWithSomeone_ShouldBeRemovedFromUsersList]' started.
2013-06-07 10:58:00.436 DemoDev[2667:1d603] Created new object of class QWUser with id 23 in context 355121488
2013-06-07 10:58:00.437 DemoDev[2667:1d603] Created new object of class QWUser with id 14 in context 355121488
2013-06-07 10:58:00.437 DemoDev[2667:1d603] Created new object of class QWUser with id 34 in context 355121488
2013-06-07 10:58:00.438 DemoDev[2667:1d603] + 'QWGetUsersWeSharedPhotoWithParser, parsing response, when we unshared photo with someone, should be removed from users list' [PASSED]
Test Case '-[QWGetUsersWeSharedPhotoWithParserSpec QWGetUsersWeSharedPhotoWithParser_ParsingResponse_WhenWeUnsharedPhotoWithSomeone_ShouldBeRemovedFromUsersList]' passed (0.007 seconds).
Test Case '-[QWGetUsersWeSharedPhotoWithParserSpec QWGetUsersWeSharedPhotoWithParser_ParsingResponse_WhenReceivingUserWeSharedDemo_ShouldMarkThatWeSharedDemoWithSomebody]' started.
2013-06-07 10:58:00.443 DemoDev[2667:1d603] Created new object of class QWUser with id 23 in context 355048592
2013-06-07 10:58:00.444 DemoDev[2667:1d603] Created new object of class QWUser with id 14 in context 355048592
2013-06-07 10:58:00.444 DemoDev[2667:1d603] Created new object of class QWUser with id 34 in context 355048592
2013-06-07 10:58:00.445 DemoDev[2667:1d603] + 'QWGetUsersWeSharedPhotoWithParser, parsing response, when receiving user we shared Demo, should mark that we shared Demo with somebody' [PASSED]
Test Case '-[QWGetUsersWeSharedPhotoWithParserSpec QWGetUsersWeSharedPhotoWithParser_ParsingResponse_WhenReceivingUserWeSharedDemo_ShouldMarkThatWeSharedDemoWithSomebody]' passed (0.007 seconds).
Test Case '-[QWGetUsersWeSharedPhotoWithParserSpec QWGetUsersWeSharedPhotoWithParser_ParsingResponse_WhenReceivingUserWeSharedAlbum_ShouldAddUserToAlbumSharesList]' started.
2013-06-07 10:58:00.451 DemoDev[2667:1d603] Created new object of class QWUser with id 23 in context 355188736
2013-06-07 10:58:00.452 DemoDev[2667:1d603] Created new object of class QWUser with id 14 in context 355188736
2013-06-07 10:58:00.452 DemoDev[2667:1d603] Created new object of class QWUser with id 34 in context 355188736
2013-06-07 10:58:00.453 DemoDev[2667:1d603] + 'QWGetUsersWeSharedPhotoWithParser, parsing response, when receiving user we shared album, should add user to album shares list' [PASSED]
Test Case '-[QWGetUsersWeSharedPhotoWithParserSpec QWGetUsersWeSharedPhotoWithParser_ParsingResponse_WhenReceivingUserWeSharedAlbum_ShouldAddUserToAlbumSharesList]' passed (0.007 seconds).
Test Suite 'QWGetUsersWeSharedPhotoWithParserSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.027 (0.029) seconds
Test Suite 'QWIPCSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWIPCSpec QWIPC_HandlingFriendJoinedNotification_ShouldDownloadSuggestedUsers]' started.
2013-06-07 10:58:00.457 DemoDev[2667:1d603] + 'QWIPC, handling friend joined notification, should download suggested users' [PASSED]
Test Case '-[QWIPCSpec QWIPC_HandlingFriendJoinedNotification_ShouldDownloadSuggestedUsers]' passed (0.004 seconds).
Test Case '-[QWIPCSpec QWIPC_HandlingOpenFeedNotification_ShouldOpenFeedView]' started.
2013-06-07 10:58:00.464 DemoDev[2667:1d603] + 'QWIPC, handling open feed notification, should open feed view' [PASSED]
Test Case '-[QWIPCSpec QWIPC_HandlingOpenFeedNotification_ShouldOpenFeedView]' passed (0.007 seconds).
Test Case '-[QWIPCSpec QWIPC_HandlingOtherNotification_ShouldNotDownloadSuggestedUsers]' started.
2013-06-07 10:58:00.469 DemoDev[2667:1d603] + 'QWIPC, handling other notification, should not download suggested users' [PASSED]
Test Case '-[QWIPCSpec QWIPC_HandlingOtherNotification_ShouldNotDownloadSuggestedUsers]' passed (0.004 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsDemoShare_ShouldReturnFeedClassForObjectType]' started.
2013-06-07 10:58:00.474 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is demo share, should return Feed class for object type' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsDemoShare_ShouldReturnFeedClassForObjectType]' passed (0.004 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsDemoShare_ShouldReturnQWOtherUserDemoViewController]' started.
2013-06-07 10:58:00.479 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/feed/details, method: POST body: ids=%5B1%5D
2013-06-07 10:58:00.482 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.490 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is demo share, should return QWOtherUserDemoViewController' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsDemoShare_ShouldReturnQWOtherUserDemoViewController]' passed (0.017 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsAlbumShare_ShouldReturnFeedClassForObjectType]' started.
2013-06-07 10:58:00.496 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is album share, should return Feed class for object type' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsAlbumShare_ShouldReturnFeedClassForObjectType]' passed (0.004 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsAlbumShare_ShouldReturnQWAlbumViewController]' started.
2013-06-07 10:58:00.501 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/feed/details, method: POST body: ids=%5B1%5D
2013-06-07 10:58:00.504 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.510 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is album share, should return QWAlbumViewController' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsAlbumShare_ShouldReturnQWAlbumViewController]' passed (0.014 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsPhotoShare_ShouldReturnFeedClassForObjectType]' started.
2013-06-07 10:58:00.514 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is photo share, should return Feed class for object type' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsPhotoShare_ShouldReturnFeedClassForObjectType]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsPhotoShare_ShouldReturnQWFullPhotoViewController]' started.
2013-06-07 10:58:00.519 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/feed/details, method: POST body: ids=%5B1%5D
2013-06-07 10:58:00.532 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is photo share, should return QWFullPhotoViewController' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsPhotoShare_ShouldReturnQWFullPhotoViewController]' passed (0.018 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsPhotosShare_ShouldReturnFeedClassForObjectType]' started.
2013-06-07 10:58:00.536 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is photos share, should return Feed class for object type' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsPhotosShare_ShouldReturnFeedClassForObjectType]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsPhotosShare_ShouldReturnQWFullPhotoViewController]' started.
2013-06-07 10:58:00.541 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/feed/details, method: POST body: ids=%5B1%5D
2013-06-07 10:58:00.556 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is photos share, should return QWFullPhotoViewController' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsPhotosShare_ShouldReturnQWFullPhotoViewController]' passed (0.020 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsFriendJoined_ShouldReturnNotificationClassForObjectType]' started.
2013-06-07 10:58:00.560 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is friend joined, should return Notification class for object type' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsFriendJoined_ShouldReturnNotificationClassForObjectType]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsFriendJoined_ShouldReturnQWOtherUserDemoViewController]' started.
2013-06-07 10:58:00.565 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/notifications/details, method: POST body: ids=%5B1%5D
2013-06-07 10:58:00.568 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.574 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is friend joined, should return QWOtherUserDemoViewController' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsFriendJoined_ShouldReturnQWOtherUserDemoViewController]' passed (0.014 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsRequestShare_ShouldReturnNotificationClassForObjectType]' started.
2013-06-07 10:58:00.578 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is request share, should return Notification class for object type' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsRequestShare_ShouldReturnNotificationClassForObjectType]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsRequestShare_ShouldReturnQWOtherUserDemoViewController]' started.
2013-06-07 10:58:00.583 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/notifications/details, method: POST body: ids=%5B1%5D
2013-06-07 10:58:00.586 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.592 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is request share, should return QWOtherUserDemoViewController' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsRequestShare_ShouldReturnQWOtherUserDemoViewController]' passed (0.014 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsComment_ShouldReturnNotificationClassForObjectType]' started.
2013-06-07 10:58:00.596 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is comment, should return Notification class for object type' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsComment_ShouldReturnNotificationClassForObjectType]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsComment_ShouldReturnQWFullPhotoViewController]' started.
2013-06-07 10:58:00.600 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/notifications/details, method: POST body: ids=%5B1%5D
2013-06-07 10:58:00.614 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is comment, should return QWFullPhotoViewController' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsComment_ShouldReturnQWFullPhotoViewController]' passed (0.019 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsLike_ShouldReturnNotificationClassForObjectType]' started.
2013-06-07 10:58:00.619 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is like, should return Notification class for object type' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsLike_ShouldReturnNotificationClassForObjectType]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsLike_ShouldReturnQWFullPhotoViewController]' started.
2013-06-07 10:58:00.623 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/events/notifications/details, method: POST body: ids=%5B1%5D
2013-06-07 10:58:00.635 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification is like, should return QWFullPhotoViewController' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationIsLike_ShouldReturnQWFullPhotoViewController]' passed (0.017 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationHasOtherType_ShouldReturnNULL]' started.
2013-06-07 10:58:00.640 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification has other type, should return NULL' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationHasOtherType_ShouldReturnNULL]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationHasOtherType_ShouldReturnNilViewController]' started.
2013-06-07 10:58:00.644 DemoDev[2667:1d603] No view controller
2013-06-07 10:58:00.644 DemoDev[2667:1d603] + 'QWIPC, returning view controller, when notification has other type, should return nil view controller' [PASSED]
Test Case '-[QWIPCSpec QWIPC_ReturningViewController_WhenNotificationHasOtherType_ShouldReturnNilViewController]' passed (0.004 seconds).
Test Case '-[QWIPCSpec QWIPC_GettingObjectId_WhenObjectIsFeedClass_ShouldReturnF_id]' started.
2013-06-07 10:58:00.647 DemoDev[2667:1d603] + 'QWIPC, getting object id, when object is Feed class, should return f_id' [PASSED]
Test Case '-[QWIPCSpec QWIPC_GettingObjectId_WhenObjectIsFeedClass_ShouldReturnF_id]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_GettingObjectId_WhenObjectIsNotificationClass_ShouldReturnId]' started.
2013-06-07 10:58:00.651 DemoDev[2667:1d603] + 'QWIPC, getting object id, when object is Notification class, should return id' [PASSED]
Test Case '-[QWIPCSpec QWIPC_GettingObjectId_WhenObjectIsNotificationClass_ShouldReturnId]' passed (0.003 seconds).
Test Case '-[QWIPCSpec QWIPC_GettingObjectId_WhenObjectIsOtherClass_ShouldReturnNil]' started.
2013-06-07 10:58:00.654 DemoDev[2667:1d603] + 'QWIPC, getting object id, when object is other class, should return nil' [PASSED]
Test Case '-[QWIPCSpec QWIPC_GettingObjectId_WhenObjectIsOtherClass_ShouldReturnNil]' passed (0.003 seconds).
Test Suite 'QWIPCSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 24 tests, with 0 failures (0 unexpected) in 0.191 (0.202) seconds
Test Suite 'QWItemsAvailabilityHandlerSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_RegisteringExecutor_ShouldStartObservingExecutorRequests]' started.
2013-06-07 10:58:00.656 DemoDev[2667:1d603] + 'QWAvailabilityHandler, registering executor, should start observing executor requests' [PASSED]
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_RegisteringExecutor_ShouldStartObservingExecutorRequests]' passed (0.001 seconds).
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_RegisteringExecutor_ShouldRetainExecutor]' started.
2013-06-07 10:58:00.657 DemoDev[2667:1d603] + 'QWAvailabilityHandler, registering executor, should retain executor' [PASSED]
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_RegisteringExecutor_ShouldRetainExecutor]' passed (0.001 seconds).
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_ReceivingDidRunFailureCallbackWithError_WhenErrorMessageIsDifferentThanItemNotAvailable_ShouldNOTDisplayNoLongerAvailableDialog]' started.
2013-06-07 10:58:00.659 DemoDev[2667:1d603] + 'QWAvailabilityHandler, receiving did run failure callback with error, when error message is different than item not available, should NOT display no longer available dialog' [PASSED]
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_ReceivingDidRunFailureCallbackWithError_WhenErrorMessageIsDifferentThanItemNotAvailable_ShouldNOTDisplayNoLongerAvailableDialog]' passed (0.001 seconds).
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_ReceivingDidRunFailureCallbackWithError_WhenErrorMessageIsItemNotAvailable_ShouldDisplayNoLongerAvailableDialog]' started.
2013-06-07 10:58:00.661 DemoDev[2667:1d603] + 'QWAvailabilityHandler, receiving did run failure callback with error, when error message is item not available, should display no longer available dialog' [PASSED]
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_ReceivingDidRunFailureCallbackWithError_WhenErrorMessageIsItemNotAvailable_ShouldDisplayNoLongerAvailableDialog]' passed (0.001 seconds).
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_ReceivingDidRunFailureCallbackWithError_WhenErrorMessageIsItemNotAvailable_ShouldInformDelegateThatItemIsNoLongerAvailable]' started.
2013-06-07 10:58:00.666 DemoDev[2667:1d603] + 'QWAvailabilityHandler, receiving did run failure callback with error, when error message is item not available, should inform delegate that item is no longer available' [PASSED]
Test Case '-[QWItemsAvailabilityHandlerSpec QWAvailabilityHandler_ReceivingDidRunFailureCallbackWithError_WhenErrorMessageIsItemNotAvailable_ShouldInformDelegateThatItemIsNoLongerAvailable]' passed (0.005 seconds).
Test Suite 'QWItemsAvailabilityHandlerSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 5 tests, with 0 failures (0 unexpected) in 0.010 (0.012) seconds
Test Suite 'QWJSONRequestSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWJSONRequestSpec QWJSONRequest_ShouldSetTheHTTPBodyWhenSettingTheJSON]' started.
2013-06-07 10:58:00.668 DemoDev[2667:1d603] + 'QWJSONRequest, should set the HTTP body when setting the JSON ' [PASSED]
Test Case '-[QWJSONRequestSpec QWJSONRequest_ShouldSetTheHTTPBodyWhenSettingTheJSON]' passed (0.000 seconds).
Test Case '-[QWJSONRequestSpec QWJSONRequest_ShouldGetTheJSONFromTheHTTPBody]' started.
2013-06-07 10:58:00.669 DemoDev[2667:1d603] + 'QWJSONRequest, should get the JSON from the HTTP body' [PASSED]
Test Case '-[QWJSONRequestSpec QWJSONRequest_ShouldGetTheJSONFromTheHTTPBody]' passed (0.000 seconds).
Test Suite 'QWJSONRequestSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.001 (0.002) seconds
Test Suite 'QWLeftMenuViewControllerSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWLeftMenuViewControllerSpec QWLeftMenuViewController_OpeningLeftDrawer_WhenMoreThan10MinutesHavePassedSinceLastUpdate_ShouldUpdateOtherFriends]' started.
2013-06-07 10:58:00.675 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.681 DemoDev[2667:1d603] + 'QWLeftMenuViewController, opening left drawer, when more than 10 minutes have passed since last update, should update other friends' [PASSED]
Test Case '-[QWLeftMenuViewControllerSpec QWLeftMenuViewController_OpeningLeftDrawer_WhenMoreThan10MinutesHavePassedSinceLastUpdate_ShouldUpdateOtherFriends]' passed (0.012 seconds).
Test Case '-[QWLeftMenuViewControllerSpec QWLeftMenuViewController_OpeningLeftDrawer_WhenLessThan10MinutesHavePassedSinceLastUpdate_ShouldNOTUpdateOtherFriens]' started.
2013-06-07 10:58:00.685 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.693 DemoDev[2667:1d603] + 'QWLeftMenuViewController, opening left drawer, when less than 10 minutes have passed since last update, should NOT update other friens' [PASSED]
Test Case '-[QWLeftMenuViewControllerSpec QWLeftMenuViewController_OpeningLeftDrawer_WhenLessThan10MinutesHavePassedSinceLastUpdate_ShouldNOTUpdateOtherFriens]' passed (0.011 seconds).
Test Suite 'QWLeftMenuViewControllerSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.023 (0.024) seconds
Test Suite 'QWLoggedUserDemoViewControllerSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_TappingOnStartDemoingButton_ShouldTriggerStartSyncing]' started.
2013-06-07 10:58:00.697 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.705 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, tapping on start demoing button, should trigger start syncing' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_TappingOnStartDemoingButton_ShouldTriggerStartSyncing]' passed (0.012 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_TappingOnStartDemoingButton_ShouldSetDemoViewStateToQWDemoViewStateDemoedSomeAlbums]' started.
2013-06-07 10:58:00.710 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.739 DemoDev[2667:1d603] Sync manager state changed to state: 0 from state: 0
2013-06-07 10:58:00.739 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:00.740 DemoDev[2667:1d603] Sync manager state changed to state: 4 from state: 0
2013-06-07 10:58:00.740 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:00.742 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/contacts/getOtherFriends, method: POST body: timestamp=0
2013-06-07 10:58:00.742 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/shares, method: GET body: 
2013-06-07 10:58:00.743 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, tapping on start demoing button, should set demo view state to QWDemoViewStateDemoedSomeAlbums' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_TappingOnStartDemoingButton_ShouldSetDemoViewStateToQWDemoViewStateDemoedSomeAlbums]' passed (0.038 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_TappingOnStartDemoingButton_ShouldSetRightBarNavigationButtonEnabled]' started.
2013-06-07 10:58:00.749 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.757 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, tapping on start demoing button, should set right bar navigation button enabled' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_TappingOnStartDemoingButton_ShouldSetRightBarNavigationButtonEnabled]' passed (0.013 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_TappingOnStartDemoingButton_ShouldStoreInUserDefaultsThatCurrentUserHasAlreadyStartedDemoing]' started.
2013-06-07 10:58:00.762 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.767 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, tapping on start demoing button, should store in user defaults that current user has already started demoing' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_TappingOnStartDemoingButton_ShouldStoreInUserDefaultsThatCurrentUserHasAlreadyStartedDemoing]' passed (0.010 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_DisplayingAlbumCell_ShouldChangeDemoViewStateToQWDemoViewStateDemoedSomeAlbums]' started.
2013-06-07 10:58:00.772 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.781 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/contacts/getOtherFriends, method: POST body: timestamp=0
2013-06-07 10:58:00.781 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/shares, method: GET body: 
2013-06-07 10:58:00.782 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, displaying album cell, should change demo view state to QWDemoViewStateDemoedSomeAlbums' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_DisplayingAlbumCell_ShouldChangeDemoViewStateToQWDemoViewStateDemoedSomeAlbums]' passed (0.014 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetRightNavigationItemToEnabled]' started.
2013-06-07 10:58:00.787 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.796 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/contacts/getOtherFriends, method: POST body: timestamp=0
2013-06-07 10:58:00.796 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/shares, method: GET body: 
2013-06-07 10:58:00.796 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, loading view, when loaded for logged user, when user has already demoed, should set right navigation item to enabled' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetRightNavigationItemToEnabled]' passed (0.014 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetDemoViewInHasAlreadyDemoedState]' started.
2013-06-07 10:58:00.802 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.813 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/contacts/getOtherFriends, method: POST body: timestamp=0
2013-06-07 10:58:00.814 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/shares, method: GET body: 
2013-06-07 10:58:00.814 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, loading view, when loaded for logged user, when user has already demoed, should set demo view in has already demoed state' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetDemoViewInHasAlreadyDemoedState]' passed (0.017 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasAlreadyDemoed_ShouldTriggerSyncing]' started.
2013-06-07 10:58:00.820 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.832 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/contacts/getOtherFriends, method: POST body: timestamp=0
2013-06-07 10:58:00.832 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/shares, method: GET body: 
2013-06-07 10:58:00.832 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, loading view, when loaded for logged user, when user has already demoed, should trigger syncing' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasAlreadyDemoed_ShouldTriggerSyncing]' passed (0.017 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetRightNavigationItemToDisabled]' started.
2013-06-07 10:58:00.837 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.847 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/contacts/getOtherFriends, method: POST body: timestamp=0
2013-06-07 10:58:00.848 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/shares, method: GET body: 
2013-06-07 10:58:00.848 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, loading view, when loaded for logged user, when user has NOT yet demoed, should set right navigation item to disabled' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetRightNavigationItemToDisabled]' passed (0.015 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetDemoViewInBeforeInitialDemoingState]' started.
2013-06-07 10:58:00.854 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.865 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/contacts/getOtherFriends, method: POST body: timestamp=0
2013-06-07 10:58:00.865 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/shares, method: GET body: 
2013-06-07 10:58:00.866 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, loading view, when loaded for logged user, when user has NOT yet demoed, should set demo view in before initial demoing state' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenLoadedForLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetDemoViewInBeforeInitialDemoingState]' passed (0.016 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenUserHasAlreadyDemoed_ShouldSetRightNavigationItemToEnabled]' started.
2013-06-07 10:58:00.871 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.876 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, loading view, when user has already demoed, should set right navigation item to enabled' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenUserHasAlreadyDemoed_ShouldSetRightNavigationItemToEnabled]' passed (0.009 seconds).
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenUserHasNOTYetDemoed_ShouldSetRightNavigationItemToDisabled]' started.
2013-06-07 10:58:00.880 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:00.885 DemoDev[2667:1d603] + 'QWLoggedUserDemoViewController, loading view, when user has NOT yet demoed, should set right navigation item to disabled' [PASSED]
Test Case '-[QWLoggedUserDemoViewControllerSpec QWLoggedUserDemoViewController_LoadingView_WhenUserHasNOTYetDemoed_ShouldSetRightNavigationItemToDisabled]' passed (0.008 seconds).
Test Suite 'QWLoggedUserDemoViewControllerSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 12 tests, with 0 failures (0 unexpected) in 0.184 (0.192) seconds
Test Suite 'QWLovePhotoMethodExecutorSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldAddLoverToPhoto]' started.
2013-06-07 10:58:00.893 DemoDev[2667:1d603] + 'QWLovePhotoMethodExecutor, executing request, when request is successful, should add lover to photo' [PASSED]
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldAddLoverToPhoto]' passed (0.008 seconds).
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateAlbumLovesCount]' started.
2013-06-07 10:58:00.902 DemoDev[2667:1d603] + 'QWLovePhotoMethodExecutor, executing request, when request is successful, should update album loves count' [PASSED]
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateAlbumLovesCount]' passed (0.008 seconds).
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:00.910 DemoDev[2667:1d603] + 'QWLovePhotoMethodExecutor, executing request, when request is successful, should update last activity timestamp' [PASSED]
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdateLastActivityTimestamp]' passed (0.008 seconds).
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdatePopularity]' started.
2013-06-07 10:58:00.918 DemoDev[2667:1d603] + 'QWLovePhotoMethodExecutor, executing request, when request is successful, should update popularity' [PASSED]
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldUpdatePopularity]' passed (0.007 seconds).
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateLoversInPhoto]' started.
2013-06-07 10:58:00.927 DemoDev[2667:1d603] + 'QWLovePhotoMethodExecutor, executing request, when request failed, should update lovers in photo' [PASSED]
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateLoversInPhoto]' passed (0.008 seconds).
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateAlbumLovesCount]' started.
2013-06-07 10:58:00.935 DemoDev[2667:1d603] + 'QWLovePhotoMethodExecutor, executing request, when request failed, should update album loves count' [PASSED]
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateAlbumLovesCount]' passed (0.007 seconds).
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:00.943 DemoDev[2667:1d603] + 'QWLovePhotoMethodExecutor, executing request, when request failed, should update last activity timestamp' [PASSED]
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdateLastActivityTimestamp]' passed (0.008 seconds).
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdatePopularity]' started.
2013-06-07 10:58:00.951 DemoDev[2667:1d603] + 'QWLovePhotoMethodExecutor, executing request, when request failed, should update popularity' [PASSED]
Test Case '-[QWLovePhotoMethodExecutorSpec QWLovePhotoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldUpdatePopularity]' passed (0.008 seconds).
Test Suite 'QWLovePhotoMethodExecutorSpec' finished at 2013-06-07 08:58:00 +0000.
Executed 8 tests, with 0 failures (0 unexpected) in 0.063 (0.066) seconds
Test Suite 'QWLovePhotoParserSpec' started at 2013-06-07 08:58:00 +0000
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldAddUserToPhotoLovers]' started.
2013-06-07 10:58:00.958 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is not loving photo, should add user to photo lovers' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldAddUserToPhotoLovers]' passed (0.006 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdateLikesCountInPhoto]' started.
2013-06-07 10:58:00.965 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is not loving photo, should update likes count in photo' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdateLikesCountInPhoto]' passed (0.007 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdateLikesCountInAlbum]' started.
2013-06-07 10:58:00.973 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is not loving photo, should update likes count in album' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdateLikesCountInAlbum]' passed (0.008 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:00.980 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is not loving photo, should update likes count in feed object for demo share' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdateLikesCountInFeedObjectForDemoShare]' passed (0.006 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:00.987 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is not loving photo, should update popularity for a photo' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdatePopularityForAPhoto]' passed (0.006 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:00.994 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is not loving photo, should update last activity timestamp' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsNotLovingPhoto_ShouldUpdateLastActivityTimestamp]' passed (0.006 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNotUpdateLikesCountInPhoto]' started.
2013-06-07 10:58:01.002 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is liking photo, should not update likes count in photo' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNotUpdateLikesCountInPhoto]' passed (0.008 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNotUpdateLikesCountInAlbum]' started.
2013-06-07 10:58:01.009 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is liking photo, should not update likes count in album' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNotUpdateLikesCountInAlbum]' passed (0.007 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNotUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:01.016 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is liking photo, should not update likes count in feed object for demo share' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNotUpdateLikesCountInFeedObjectForDemoShare]' passed (0.006 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNotUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:01.022 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is liking photo, should not update popularity for a photo' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNotUpdatePopularityForAPhoto]' passed (0.006 seconds).
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNOTUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:01.029 DemoDev[2667:1d603] + 'QWLovePhotoParser, parsing love photo, when user is liking photo, should NOT update last activity timestamp' [PASSED]
Test Case '-[QWLovePhotoParserSpec QWLovePhotoParser_ParsingLovePhoto_WhenUserIsLikingPhoto_ShouldNOTUpdateLastActivityTimestamp]' passed (0.006 seconds).
Test Suite 'QWLovePhotoParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 11 tests, with 0 failures (0 unexpected) in 0.073 (0.078) seconds
Test Suite 'QWLoversParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:01.035 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, should update last activity timestamp' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_ShouldUpdateLastActivityTimestamp]' passed (0.005 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoDoesntHaveLikes_ShouldAddLoversToPhoto]' started.
2013-06-07 10:58:01.043 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo doesn't have likes, should add lovers to photo' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoDoesntHaveLikes_ShouldAddLoversToPhoto]' passed (0.008 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoDoesntHaveLikes_ShouldUpdatePhotoLovesCount]' started.
2013-06-07 10:58:01.050 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo doesn't have likes, should update photo loves count' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoDoesntHaveLikes_ShouldUpdatePhotoLovesCount]' passed (0.006 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoDoesntHaveLikes_ShouldUpdateAlbumLovesCount]' started.
2013-06-07 10:58:01.057 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo doesn't have likes, should update album loves count' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoDoesntHaveLikes_ShouldUpdateAlbumLovesCount]' passed (0.006 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoDoesntHaveLikes_ShouldUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:01.064 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo doesn't have likes, should update likes count in feed object for demo share' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoDoesntHaveLikes_ShouldUpdateLikesCountInFeedObjectForDemoShare]' passed (0.006 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneUnlovedPhoto_ShouldRemoveUserFromLovers]' started.
2013-06-07 10:58:01.070 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo has different lovers, and someone unloved photo, should remove user from lovers' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneUnlovedPhoto_ShouldRemoveUserFromLovers]' passed (0.006 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneUnlovedPhoto_ShouldUpdatePhotoLovesCount]' started.
2013-06-07 10:58:01.076 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo has different lovers, and someone unloved photo, should update photo loves count' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneUnlovedPhoto_ShouldUpdatePhotoLovesCount]' passed (0.006 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneUnlovedPhoto_ShouldUpdateAlbumLovesCount]' started.
2013-06-07 10:58:01.082 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo has different lovers, and someone unloved photo, should update album loves count' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneUnlovedPhoto_ShouldUpdateAlbumLovesCount]' passed (0.005 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneUnlovedPhoto_ShouldUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:01.089 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo has different lovers, and someone unloved photo, should update likes count in feed object for demo share' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneUnlovedPhoto_ShouldUpdateLikesCountInFeedObjectForDemoShare]' passed (0.007 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneLovedPhoto_ShouldAddUserToLovers]' started.
2013-06-07 10:58:01.096 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo has different lovers, and someone loved photo, should add user to lovers' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneLovedPhoto_ShouldAddUserToLovers]' passed (0.006 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneLovedPhoto_ShouldUpdatePhotoLovesCount]' started.
2013-06-07 10:58:01.107 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo has different lovers, and someone loved photo, should update photo loves count' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneLovedPhoto_ShouldUpdatePhotoLovesCount]' passed (0.011 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneLovedPhoto_ShouldUpdateAlbumLovesCount]' started.
2013-06-07 10:58:01.117 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo has different lovers, and someone loved photo, should update album loves count' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneLovedPhoto_ShouldUpdateAlbumLovesCount]' passed (0.010 seconds).
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneLovedPhoto_ShouldUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:01.129 DemoDev[2667:1d603] + 'QWLoversParser, parsing lovers, when photo has different lovers, and someone loved photo, should update likes count in feed object for demo share' [PASSED]
Test Case '-[QWLoversParserSpec QWLoversParser_ParsingLovers_WhenPhotoHasDifferentLovers_AndSomeoneLovedPhoto_ShouldUpdateLikesCountInFeedObjectForDemoShare]' passed (0.011 seconds).
Test Suite 'QWLoversParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 13 tests, with 0 failures (0 unexpected) in 0.093 (0.101) seconds
Test Suite 'QWMarkPhotosPrivateMethodExecutorSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWMarkPhotosPrivateMethodExecutorSpec QWMarkPhotosPrivateMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldMarkPhotoPrivate]' started.
2013-06-07 10:58:01.138 DemoDev[2667:1d603] + 'QWMarkPhotosPrivateMethodExecutor, executing request, when request is successful, should mark photo private' [PASSED]
Test Case '-[QWMarkPhotosPrivateMethodExecutorSpec QWMarkPhotosPrivateMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldMarkPhotoPrivate]' passed (0.008 seconds).
Test Case '-[QWMarkPhotosPrivateMethodExecutorSpec QWMarkPhotosPrivateMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_WhenItsLastNonPrivatePhotoInAlbum_ShouldMarkAlbumAsPrivate]' started.
2013-06-07 10:58:01.146 DemoDev[2667:1d603] + 'QWMarkPhotosPrivateMethodExecutor, executing request, when request is successful, when it's last non private photo in album, should mark album as private' [PASSED]
Test Case '-[QWMarkPhotosPrivateMethodExecutorSpec QWMarkPhotosPrivateMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_WhenItsLastNonPrivatePhotoInAlbum_ShouldMarkAlbumAsPrivate]' passed (0.007 seconds).
Test Case '-[QWMarkPhotosPrivateMethodExecutorSpec QWMarkPhotosPrivateMethodExecutor_ExecutingRequest_WhenRequestFails_ShouldMarkPhotoAsNotPrivate]' started.
2013-06-07 10:58:01.154 DemoDev[2667:1d603] + 'QWMarkPhotosPrivateMethodExecutor, executing request, when request fails, should mark photo as not private' [PASSED]
Test Case '-[QWMarkPhotosPrivateMethodExecutorSpec QWMarkPhotosPrivateMethodExecutor_ExecutingRequest_WhenRequestFails_ShouldMarkPhotoAsNotPrivate]' passed (0.007 seconds).
Test Case '-[QWMarkPhotosPrivateMethodExecutorSpec QWMarkPhotosPrivateMethodExecutor_ExecutingRequest_WhenRequestFails_ShouldMarkAlbumAsNotPrivate]' started.
2013-06-07 10:58:01.161 DemoDev[2667:1d603] + 'QWMarkPhotosPrivateMethodExecutor, executing request, when request fails, should mark album as not private' [PASSED]
Test Case '-[QWMarkPhotosPrivateMethodExecutorSpec QWMarkPhotosPrivateMethodExecutor_ExecutingRequest_WhenRequestFails_ShouldMarkAlbumAsNotPrivate]' passed (0.007 seconds).
Test Suite 'QWMarkPhotosPrivateMethodExecutorSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.029 (0.031) seconds
Test Suite 'QWMarkPhotosPublicMethodExecutorSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWMarkPhotosPublicMethodExecutorSpec QWMarkPhotosPublicMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldMarkPhotoAsPublic]' started.
2013-06-07 10:58:01.167 DemoDev[2667:1d603] + 'QWMarkPhotosPublicMethodExecutor, executing request, when request is successful, should mark photo as public' [PASSED]
Test Case '-[QWMarkPhotosPublicMethodExecutorSpec QWMarkPhotosPublicMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldMarkPhotoAsPublic]' passed (0.006 seconds).
Test Case '-[QWMarkPhotosPublicMethodExecutorSpec QWMarkPhotosPublicMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldMarkPhotoAsPublic]' started.
2013-06-07 10:58:01.175 DemoDev[2667:1d603] + 'QWMarkPhotosPublicMethodExecutor, executing request, when request is successful, should mark photo as public' [PASSED]
Test Case '-[QWMarkPhotosPublicMethodExecutorSpec QWMarkPhotosPublicMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldMarkPhotoAsPublic]' passed (0.007 seconds).
Test Case '-[QWMarkPhotosPublicMethodExecutorSpec QWMarkPhotosPublicMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldMarkPhotoAsPrivate]' started.
2013-06-07 10:58:01.182 DemoDev[2667:1d603] + 'QWMarkPhotosPublicMethodExecutor, executing request, when request failed, should mark photo as private' [PASSED]
Test Case '-[QWMarkPhotosPublicMethodExecutorSpec QWMarkPhotosPublicMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldMarkPhotoAsPrivate]' passed (0.006 seconds).
Test Case '-[QWMarkPhotosPublicMethodExecutorSpec QWMarkPhotosPublicMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRevertAlbumPrivacy]' started.
2013-06-07 10:58:01.188 DemoDev[2667:1d603] + 'QWMarkPhotosPublicMethodExecutor, executing request, when request failed, should revert album privacy' [PASSED]
Test Case '-[QWMarkPhotosPublicMethodExecutorSpec QWMarkPhotosPublicMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRevertAlbumPrivacy]' passed (0.006 seconds).
Test Suite 'QWMarkPhotosPublicMethodExecutorSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.025 (0.027) seconds
Test Suite 'QWMovePhotosToExistingAlbumParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_ShouldUpdateLikesCountInOldAlbum]' started.
2013-06-07 10:58:01.194 DemoDev[2667:1d603] + 'QWMovePhotosToExistingAlbumParser, when moving photo from one album to other, should update likes count in old album' [PASSED]
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_ShouldUpdateLikesCountInOldAlbum]' passed (0.005 seconds).
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_ShouldUpdateCommentsCountInOldAlbum]' started.
2013-06-07 10:58:01.202 DemoDev[2667:1d603] + 'QWMovePhotosToExistingAlbumParser, when moving photo from one album to other, should update comments count in old album' [PASSED]
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_ShouldUpdateCommentsCountInOldAlbum]' passed (0.007 seconds).
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_ShouldUpdateLikesCountInNewAlbum]' started.
2013-06-07 10:58:01.208 DemoDev[2667:1d603] + 'QWMovePhotosToExistingAlbumParser, when moving photo from one album to other, should update likes count in new album' [PASSED]
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_ShouldUpdateLikesCountInNewAlbum]' passed (0.006 seconds).
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_ShouldUpdateCommentsCountInNewAlbum]' started.
2013-06-07 10:58:01.214 DemoDev[2667:1d603] + 'QWMovePhotosToExistingAlbumParser, when moving photo from one album to other, should update comments count in new album' [PASSED]
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_ShouldUpdateCommentsCountInNewAlbum]' passed (0.005 seconds).
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_DestinationAlbumIsPrivate_MovedPhotoIsNotPrivate_ShouldMarkThePhotoPrivate]' started.
2013-06-07 10:58:01.220 DemoDev[2667:1d603] + 'QWMovePhotosToExistingAlbumParser, when moving photo from one album to other, destination album is private, moved photo is not private, should mark the photo private' [PASSED]
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_DestinationAlbumIsPrivate_MovedPhotoIsNotPrivate_ShouldMarkThePhotoPrivate]' passed (0.006 seconds).
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_DestinationAlbumIsPrivate_MovedPhotoIsPrivate_PhotoShouldStayPrivate]' started.
2013-06-07 10:58:01.227 DemoDev[2667:1d603] + 'QWMovePhotosToExistingAlbumParser, when moving photo from one album to other, destination album is private, moved photo is private, photo should stay private' [PASSED]
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_DestinationAlbumIsPrivate_MovedPhotoIsPrivate_PhotoShouldStayPrivate]' passed (0.006 seconds).
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_DestinationAlbumIsNotPrivate_MovedPhotoIsNotPrivate_ShouldNotMarkPhotoPrivate]' started.
2013-06-07 10:58:01.233 DemoDev[2667:1d603] + 'QWMovePhotosToExistingAlbumParser, when moving photo from one album to other, destination album is not private, moved photo is not private, should not mark photo private' [PASSED]
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_DestinationAlbumIsNotPrivate_MovedPhotoIsNotPrivate_ShouldNotMarkPhotoPrivate]' passed (0.005 seconds).
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_DestinationAlbumIsNotPrivate_MovedPhotoIsPrivate_PhotoShouldStayPrivate]' started.
2013-06-07 10:58:01.238 DemoDev[2667:1d603] + 'QWMovePhotosToExistingAlbumParser, when moving photo from one album to other, destination album is not private, moved photo is private, photo should stay private' [PASSED]
Test Case '-[QWMovePhotosToExistingAlbumParserSpec QWMovePhotosToExistingAlbumParser_WhenMovingPhotoFromOneAlbumToOther_DestinationAlbumIsNotPrivate_MovedPhotoIsPrivate_PhotoShouldStayPrivate]' passed (0.005 seconds).
Test Suite 'QWMovePhotosToExistingAlbumParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 8 tests, with 0 failures (0 unexpected) in 0.046 (0.050) seconds
Test Suite 'QWMovePhotosToNewlyCreatedAlbumParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_ShouldUpdateLikesCountInOldAlbum]' started.
2013-06-07 10:58:01.245 DemoDev[2667:1d603] Created new object of class QWAlbum with id (null) in context 190076112
2013-06-07 10:58:01.249 DemoDev[2667:1d603] No photos for album 0, json: (null)
2013-06-07 10:58:01.249 DemoDev[2667:1d603] + 'QWMovePhotosToNewlyCreatedAlbumParser, when moving photo to new album, should update likes count in old album' [PASSED]
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_ShouldUpdateLikesCountInOldAlbum]' passed (0.010 seconds).
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_ShouldUpdateCommentsCountInOldAlbum]' started.
2013-06-07 10:58:01.256 DemoDev[2667:1d603] Created new object of class QWAlbum with id (null) in context 190076112
2013-06-07 10:58:01.257 DemoDev[2667:1d603] No photos for album 0, json: (null)
2013-06-07 10:58:01.257 DemoDev[2667:1d603] + 'QWMovePhotosToNewlyCreatedAlbumParser, when moving photo to new album, should update comments count in old album' [PASSED]
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_ShouldUpdateCommentsCountInOldAlbum]' passed (0.007 seconds).
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_WhenAllPhotosArePrivate_PhotosShouldStayPrivate]' started.
2013-06-07 10:58:01.263 DemoDev[2667:1d603] Created new object of class QWAlbum with id (null) in context 190076112
2013-06-07 10:58:01.263 DemoDev[2667:1d603] No photos for album 0, json: (null)
2013-06-07 10:58:01.263 DemoDev[2667:1d603] + 'QWMovePhotosToNewlyCreatedAlbumParser, when moving photo to new album, when all photos are private, photos should stay private' [PASSED]
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_WhenAllPhotosArePrivate_PhotosShouldStayPrivate]' passed (0.006 seconds).
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_WhenOneOfPhotosIsPrivate_PhotosShouldStayPrivateOrPublicRespectively]' started.
2013-06-07 10:58:01.269 DemoDev[2667:1d603] Created new object of class QWAlbum with id (null) in context 190076112
2013-06-07 10:58:01.270 DemoDev[2667:1d603] No photos for album 0, json: (null)
2013-06-07 10:58:01.270 DemoDev[2667:1d603] + 'QWMovePhotosToNewlyCreatedAlbumParser, when moving photo to new album, when one of photos is private, photos should stay private or public respectively' [PASSED]
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_WhenOneOfPhotosIsPrivate_PhotosShouldStayPrivateOrPublicRespectively]' passed (0.006 seconds).
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_WhenNoPhotoIsPrivate_PhotosShouldStayPublic]' started.
2013-06-07 10:58:01.277 DemoDev[2667:1d603] Created new object of class QWAlbum with id (null) in context 190076112
2013-06-07 10:58:01.277 DemoDev[2667:1d603] No photos for album 0, json: (null)
2013-06-07 10:58:01.277 DemoDev[2667:1d603] + 'QWMovePhotosToNewlyCreatedAlbumParser, when moving photo to new album, when no photo is private, photos should stay public' [PASSED]
Test Case '-[QWMovePhotosToNewlyCreatedAlbumParserSpec QWMovePhotosToNewlyCreatedAlbumParser_WhenMovingPhotoToNewAlbum_WhenNoPhotoIsPrivate_PhotosShouldStayPublic]' passed (0.007 seconds).
Test Suite 'QWMovePhotosToNewlyCreatedAlbumParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 5 tests, with 0 failures (0 unexpected) in 0.036 (0.039) seconds
Test Suite 'QWNetworkGatewaySpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfPOSTType_ShouldMakeAHttpCallWithGivenMethod]' started.
2013-06-07 10:58:01.279 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/device/register, method: POST body: email=fixedEmail
2013-06-07 10:58:01.279 DemoDev[2667:1d603] + 'QWNetworkGateway, when executing request, of POST type, should make a http call with given method' [PASSED]
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfPOSTType_ShouldMakeAHttpCallWithGivenMethod]' passed (0.001 seconds).
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfPOSTType_ShouldMakeAHttpCallWithGivenAPIMethodUrl]' started.
2013-06-07 10:58:01.280 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/device/register, method: POST body: email=fixedEmail
2013-06-07 10:58:01.280 DemoDev[2667:1d603] + 'QWNetworkGateway, when executing request, of POST type, should make a http call with given API method url' [PASSED]
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfPOSTType_ShouldMakeAHttpCallWithGivenAPIMethodUrl]' passed (0.001 seconds).
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfPOSTType_ShouldMakeAHttpCallWithGivenParams]' started.
2013-06-07 10:58:01.282 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/device/register, method: POST body: email=fixedEmail
2013-06-07 10:58:01.282 DemoDev[2667:1d603] + 'QWNetworkGateway, when executing request, of POST type, should make a http call with given params' [PASSED]
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfPOSTType_ShouldMakeAHttpCallWithGivenParams]' passed (0.001 seconds).
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfGETType_ShouldUseGivenHttpMethod]' started.
2013-06-07 10:58:01.283 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/device/register, method: GET body: 
2013-06-07 10:58:01.283 DemoDev[2667:1d603] + 'QWNetworkGateway, when executing request, of GET type, should use given http method' [PASSED]
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfGETType_ShouldUseGivenHttpMethod]' passed (0.001 seconds).
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfGETType_ShouldUseGivenAPIMethodUrl]' started.
2013-06-07 10:58:01.284 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/device/register, method: GET body: 
2013-06-07 10:58:01.284 DemoDev[2667:1d603] + 'QWNetworkGateway, when executing request, of GET type, should use given API method url' [PASSED]
Test Case '-[QWNetworkGatewaySpec QWNetworkGateway_WhenExecutingRequest_OfGETType_ShouldUseGivenAPIMethodUrl]' passed (0.001 seconds).
Test Suite 'QWNetworkGatewaySpec' finished at 2013-06-07 08:58:01 +0000.
Executed 5 tests, with 0 failures (0 unexpected) in 0.005 (0.007) seconds
Test Suite 'QWNotificationsParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWNotificationsParserSpec QWNotificationsParser_WhenPhotoIsMovedFromOneAlbumToAnother_ShouldUpdateLikesCountInOldAlbum]' started.
2013-06-07 10:58:01.292 DemoDev[2667:1d603] + 'QWNotificationsParser, when photo is moved from one album to another, should update likes count in old album' [PASSED]
Test Case '-[QWNotificationsParserSpec QWNotificationsParser_WhenPhotoIsMovedFromOneAlbumToAnother_ShouldUpdateLikesCountInOldAlbum]' passed (0.007 seconds).
Test Case '-[QWNotificationsParserSpec QWNotificationsParser_WhenPhotoIsMovedFromOneAlbumToAnother_ShouldUpdateCommentsCountInOldAlbum]' started.
2013-06-07 10:58:01.301 DemoDev[2667:1d603] + 'QWNotificationsParser, when photo is moved from one album to another, should update comments count in old album' [PASSED]
Test Case '-[QWNotificationsParserSpec QWNotificationsParser_WhenPhotoIsMovedFromOneAlbumToAnother_ShouldUpdateCommentsCountInOldAlbum]' passed (0.008 seconds).
Test Case '-[QWNotificationsParserSpec QWNotificationsParser_WhenPhotoIsMovedFromOneAlbumToAnother_ShouldUpdateLikesCountInNewAlbum]' started.
2013-06-07 10:58:01.309 DemoDev[2667:1d603] + 'QWNotificationsParser, when photo is moved from one album to another, should update likes count in new album' [PASSED]
Test Case '-[QWNotificationsParserSpec QWNotificationsParser_WhenPhotoIsMovedFromOneAlbumToAnother_ShouldUpdateLikesCountInNewAlbum]' passed (0.008 seconds).
Test Case '-[QWNotificationsParserSpec QWNotificationsParser_WhenPhotoIsMovedFromOneAlbumToAnother_ShouldUpdateCommentsCountInNewAlbum]' started.
2013-06-07 10:58:01.316 DemoDev[2667:1d603] + 'QWNotificationsParser, when photo is moved from one album to another, should update comments count in new album' [PASSED]
Test Case '-[QWNotificationsParserSpec QWNotificationsParser_WhenPhotoIsMovedFromOneAlbumToAnother_ShouldUpdateCommentsCountInNewAlbum]' passed (0.007 seconds).
Test Suite 'QWNotificationsParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.030 (0.032) seconds
Test Suite 'QWOtherFriendsLeftMenuAdapterSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldNotFetchDormantUsers]' started.
2013-06-07 10:58:01.320 DemoDev[2667:1d603] + 'QWOtherFriendsLeftMenuAdapter, should not fetch dormant users' [PASSED]
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldNotFetchDormantUsers]' passed (0.003 seconds).
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldNotFetchLoggedUser]' started.
2013-06-07 10:58:01.324 DemoDev[2667:1d603] + 'QWOtherFriendsLeftMenuAdapter, should not fetch logged user' [PASSED]
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldNotFetchLoggedUser]' passed (0.004 seconds).
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldNOTFetchUsersWhoAreViewingDemo]' started.
2013-06-07 10:58:01.328 DemoDev[2667:1d603] + 'QWOtherFriendsLeftMenuAdapter, should NOT fetch users who are viewingDemo' [PASSED]
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldNOTFetchUsersWhoAreViewingDemo]' passed (0.003 seconds).
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldNOTFetchUsersWhoAreSharingDemo]' started.
2013-06-07 10:58:01.332 DemoDev[2667:1d603] + 'QWOtherFriendsLeftMenuAdapter, should NOT fetch users who are sharingDemo' [PASSED]
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldNOTFetchUsersWhoAreSharingDemo]' passed (0.004 seconds).
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldFetchUserWhoIsUserWeSharedPhotoOrAlbumWith]' started.
2013-06-07 10:58:01.336 DemoDev[2667:1d603] + 'QWOtherFriendsLeftMenuAdapter, should fetch user who isUserWeSharedPhotoOrAlbumWith' [PASSED]
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldFetchUserWhoIsUserWeSharedPhotoOrAlbumWith]' passed (0.003 seconds).
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldReturnNumberOfRowsEqualToNumberOrUsersWhoSharedPhotoOrAlbumWithLoggedUser]' started.
2013-06-07 10:58:01.340 DemoDev[2667:1d603] + 'QWOtherFriendsLeftMenuAdapter, should return number of rows equal to number or users who shared photo or album with logged user' [PASSED]
Test Case '-[QWOtherFriendsLeftMenuAdapterSpec QWOtherFriendsLeftMenuAdapter_ShouldReturnNumberOfRowsEqualToNumberOrUsersWhoSharedPhotoOrAlbumWithLoggedUser]' passed (0.004 seconds).
Test Suite 'QWOtherFriendsLeftMenuAdapterSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.021 (0.024) seconds
Test Suite 'QWOtherFriendsParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWOtherFriendsParserSpec QWOtherFriendsParser_ParsingUsers_ShouldSetIsUserWeSharedPhotoOrAlbumWithToYESForAllParsedUsers]' started.
2013-06-07 10:58:01.344 DemoDev[2667:1d603] Created new object of class QWUser with id 39 in context 365403456
2013-06-07 10:58:01.345 DemoDev[2667:1d603] Created new object of class QWUser with id 61 in context 365403456
2013-06-07 10:58:01.345 DemoDev[2667:1d603] Created new object of class QWUser with id 24 in context 365403456
2013-06-07 10:58:01.345 DemoDev[2667:1d603] Created new object of class QWUser with id 49 in context 365403456
2013-06-07 10:58:01.345 DemoDev[2667:1d603] Created new object of class QWUser with id 21 in context 365403456
2013-06-07 10:58:01.345 DemoDev[2667:1d603] + 'QWOtherFriendsParser, parsing users, should set isUserWeSharedPhotoOrAlbumWith to YES for all parsed users' [PASSED]
Test Case '-[QWOtherFriendsParserSpec QWOtherFriendsParser_ParsingUsers_ShouldSetIsUserWeSharedPhotoOrAlbumWithToYESForAllParsedUsers]' passed (0.004 seconds).
Test Case '-[QWOtherFriendsParserSpec QWOtherFriendsParser_ParsingUsers_ShouldUpdateLastUpdatedOtherFriendsTimestampForSessionUser]' started.
2013-06-07 10:58:01.349 DemoDev[2667:1d603] Created new object of class QWUser with id 39 in context 365460112
2013-06-07 10:58:01.350 DemoDev[2667:1d603] Created new object of class QWUser with id 61 in context 365460112
2013-06-07 10:58:01.351 DemoDev[2667:1d603] Created new object of class QWUser with id 24 in context 365460112
2013-06-07 10:58:01.351 DemoDev[2667:1d603] Created new object of class QWUser with id 49 in context 365460112
2013-06-07 10:58:01.351 DemoDev[2667:1d603] Created new object of class QWUser with id 21 in context 365460112
2013-06-07 10:58:01.351 DemoDev[2667:1d603] + 'QWOtherFriendsParser, parsing users, should update lastUpdatedOtherFriendsTimestamp for session user' [PASSED]
Test Case '-[QWOtherFriendsParserSpec QWOtherFriendsParser_ParsingUsers_ShouldUpdateLastUpdatedOtherFriendsTimestampForSessionUser]' passed (0.006 seconds).
Test Suite 'QWOtherFriendsParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.010 (0.011) seconds
Test Suite 'QWOtherUserDemoUpdaterSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWOtherUserDemoUpdaterSpec QWOtherUserDemoUpdater_LimitingArray_WhenLimitedArrayIsSmallerThanLimit_ShouldReturnWholeEntryArray]' started.
2013-06-07 10:58:01.353 DemoDev[2667:1d603] + 'QWOtherUserDemoUpdater, limiting array, when limited array is smaller than limit, should return whole entry array' [PASSED]
Test Case '-[QWOtherUserDemoUpdaterSpec QWOtherUserDemoUpdater_LimitingArray_WhenLimitedArrayIsSmallerThanLimit_ShouldReturnWholeEntryArray]' passed (0.001 seconds).
Test Case '-[QWOtherUserDemoUpdaterSpec QWOtherUserDemoUpdater_LimitingArray_WhenLimitedArrayIsBiggerThanLimit_ShouldReturnSubarrayLimitedWithLimit]' started.
2013-06-07 10:58:01.355 DemoDev[2667:1d603] + 'QWOtherUserDemoUpdater, limiting array, when limited array is bigger than limit, should return subarray limited with limit' [PASSED]
Test Case '-[QWOtherUserDemoUpdaterSpec QWOtherUserDemoUpdater_LimitingArray_WhenLimitedArrayIsBiggerThanLimit_ShouldReturnSubarrayLimitedWithLimit]' passed (0.001 seconds).
Test Suite 'QWOtherUserDemoUpdaterSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.002 (0.003) seconds
Test Suite 'QWOtherUserDemoViewControllerSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_InitializingViewController_WhenInitializedForOtherThanLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetRightNavigationItemToEnabled]' started.
2013-06-07 10:58:01.360 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.367 DemoDev[2667:1d603] + 'QWOtherUserDemoViewController, initializing view controller, when initialized for other than logged user, when user has already demoed, should set right navigation item to enabled' [PASSED]
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_InitializingViewController_WhenInitializedForOtherThanLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetRightNavigationItemToEnabled]' passed (0.012 seconds).
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_InitializingViewController_WhenInitializedForOtherThanLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetRightNavigationItemToEnabled]' started.
2013-06-07 10:58:01.373 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.379 DemoDev[2667:1d603] + 'QWOtherUserDemoViewController, initializing view controller, when initialized for other than logged user, when user has NOT yet demoed, should set right navigation item to enabled' [PASSED]
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_InitializingViewController_WhenInitializedForOtherThanLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetRightNavigationItemToEnabled]' passed (0.011 seconds).
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_LoadingView_WhenLoadedForOtherThanLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetRightNavigationItemToEnabled]' started.
2013-06-07 10:58:01.384 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.395 DemoDev[2667:1d603] + 'QWOtherUserDemoViewController, loading view, when loaded for other than logged user, when user has already demoed, should set right navigation item to enabled' [PASSED]
2013-06-07 10:58:01.395 DemoDev[2667:21403] Method url: https://api-dev.qwi.lt/api/demo/get, method: POST body: user_id=0
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_LoadingView_WhenLoadedForOtherThanLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetRightNavigationItemToEnabled]' passed (0.016 seconds).
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_LoadingView_WhenLoadedForOtherThanLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetDemoViewInHasAlreadyDemoedState]' started.
2013-06-07 10:58:01.401 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.414 DemoDev[2667:1d603] + 'QWOtherUserDemoViewController, loading view, when loaded for other than logged user, when user has already demoed, should set demo view in has already demoed state' [PASSED]
2013-06-07 10:58:01.414 DemoDev[2667:21403] Method url: https://api-dev.qwi.lt/api/demo/get, method: POST body: user_id=0
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_LoadingView_WhenLoadedForOtherThanLoggedUser_WhenUserHasAlreadyDemoed_ShouldSetDemoViewInHasAlreadyDemoedState]' passed (0.018 seconds).
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_LoadingView_WhenLoadedForOtherThanLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetRightNavigationItemToEnabled]' started.
2013-06-07 10:58:01.420 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.432 DemoDev[2667:1d603] + 'QWOtherUserDemoViewController, loading view, when loaded for other than logged user, when user has NOT yet demoed, should set right navigation item to enabled' [PASSED]
2013-06-07 10:58:01.432 DemoDev[2667:21403] Method url: https://api-dev.qwi.lt/api/demo/get, method: POST body: user_id=0
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_LoadingView_WhenLoadedForOtherThanLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetRightNavigationItemToEnabled]' passed (0.017 seconds).
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_LoadingView_WhenLoadedForOtherThanLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetDemoViewInHasAlreadyDemoedState]' started.
2013-06-07 10:58:01.438 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.451 DemoDev[2667:1d603] + 'QWOtherUserDemoViewController, loading view, when loaded for other than logged user, when user has NOT yet demoed, should set demo view in has already demoed state' [PASSED]
2013-06-07 10:58:01.451 DemoDev[2667:21403] Method url: https://api-dev.qwi.lt/api/demo/get, method: POST body: user_id=0
Test Case '-[QWOtherUserDemoViewControllerSpec QWOtherUserDemoViewController_LoadingView_WhenLoadedForOtherThanLoggedUser_WhenUserHasNOTYetDemoed_ShouldSetDemoViewInHasAlreadyDemoedState]' passed (0.018 seconds).
Test Suite 'QWOtherUserDemoViewControllerSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.093 (0.097) seconds
Test Suite 'QWParserUtilsCommentsParsingSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ShouldParseCommentFromJSON]' started.
2013-06-07 10:58:01.462 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 346618672
2013-06-07 10:58:01.462 DemoDev[2667:1d603] Created new object of class QWComment with id 2 in context 346618672
2013-06-07 10:58:01.463 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, should parse comment from JSON' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ShouldParseCommentFromJSON]' passed (0.010 seconds).
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForExistingComment_ShouldNotUpdateCommentsCountInPhotoAfterParsing]' started.
2013-06-07 10:58:01.470 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365648512
2013-06-07 10:58:01.470 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, for existing comment, should not update comments count in photo after parsing' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForExistingComment_ShouldNotUpdateCommentsCountInPhotoAfterParsing]' passed (0.007 seconds).
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForExistingComment_ShouldNotUpdateCommentsCountInAlbumAfterParsing]' started.
2013-06-07 10:58:01.477 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365808304
2013-06-07 10:58:01.477 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, for existing comment, should not update comments count in album after parsing' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForExistingComment_ShouldNotUpdateCommentsCountInAlbumAfterParsing]' passed (0.006 seconds).
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForExistingComment_ShouldNotUpdateCountersInShareDemoFeedObject]' started.
2013-06-07 10:58:01.483 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365869904
2013-06-07 10:58:01.484 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, for existing comment, should not update counters in share demo feed object' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForExistingComment_ShouldNotUpdateCountersInShareDemoFeedObject]' passed (0.006 seconds).
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForExistingComment_ShouldNotUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:01.490 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365859328
2013-06-07 10:58:01.490 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, for existing comment, should not update popularity for a photo' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForExistingComment_ShouldNotUpdatePopularityForAPhoto]' passed (0.006 seconds).
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForNewComment_ShouldUpdateCommentsCountInPhotoAfterAddingComment]' started.
2013-06-07 10:58:01.496 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365864704
2013-06-07 10:58:01.496 DemoDev[2667:1d603] Created new object of class QWComment with id 2 in context 365864704
2013-06-07 10:58:01.497 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, for new comment, should update comments count in photo after adding comment' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForNewComment_ShouldUpdateCommentsCountInPhotoAfterAddingComment]' passed (0.006 seconds).
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForNewComment_ShouldUpdateCommentsCountInAlbumAfterAddingComment]' started.
2013-06-07 10:58:01.504 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365787296
2013-06-07 10:58:01.504 DemoDev[2667:1d603] Created new object of class QWComment with id 2 in context 365787296
2013-06-07 10:58:01.505 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, for new comment, should update comments count in album after adding comment' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForNewComment_ShouldUpdateCommentsCountInAlbumAfterAddingComment]' passed (0.008 seconds).
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForNewComment_ShouldUpdateCountersInShareDemoFeedObject]' started.
2013-06-07 10:58:01.511 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365773216
2013-06-07 10:58:01.512 DemoDev[2667:1d603] Created new object of class QWComment with id 2 in context 365773216
2013-06-07 10:58:01.512 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, for new comment, should update counters in share demo feed object' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForNewComment_ShouldUpdateCountersInShareDemoFeedObject]' passed (0.007 seconds).
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForNewComment_ShouldUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:01.518 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365755296
2013-06-07 10:58:01.518 DemoDev[2667:1d603] Created new object of class QWComment with id 2 in context 365755296
2013-06-07 10:58:01.519 DemoDev[2667:1d603] + 'QWParserUtils+CommentsParsing, for new comment, should update popularity for a photo' [PASSED]
Test Case '-[QWParserUtilsCommentsParsingSpec QWParserUtilsCommentsParsing_ForNewComment_ShouldUpdatePopularityForAPhoto]' passed (0.006 seconds).
Test Suite 'QWParserUtilsCommentsParsingSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 9 tests, with 0 failures (0 unexpected) in 0.063 (0.066) seconds
Test Suite 'QWParserUtilsSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWParserUtilsSpec QWParserUtils_UsedForObjectValidation_ShouldValidateNonEmptyObject]' started.
2013-06-07 10:58:01.519 DemoDev[2667:1d603] + 'QWParserUtils, used for object validation, should validate non empty object' [PASSED]
Test Case '-[QWParserUtilsSpec QWParserUtils_UsedForObjectValidation_ShouldValidateNonEmptyObject]' passed (0.000 seconds).
Test Case '-[QWParserUtilsSpec QWParserUtils_UsedForObjectValidation_ShouldValidateNullObject]' started.
2013-06-07 10:58:01.520 DemoDev[2667:1d603] + 'QWParserUtils, used for object validation, should validate Null object' [PASSED]
Test Case '-[QWParserUtilsSpec QWParserUtils_UsedForObjectValidation_ShouldValidateNullObject]' passed (0.000 seconds).
Test Case '-[QWParserUtilsSpec QWParserUtils_UsedForObjectValidation_ShouldValidateNilObject]' started.
2013-06-07 10:58:01.521 DemoDev[2667:1d603] + 'QWParserUtils, used for object validation, should validate nil object' [PASSED]
Test Case '-[QWParserUtilsSpec QWParserUtils_UsedForObjectValidation_ShouldValidateNilObject]' passed (0.000 seconds).
Test Suite 'QWParserUtilsSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.001 (0.002) seconds
Test Suite 'QWParserUtilsUserParsingSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_ChecksumPart_WhenIsMissing_ShouldChangeExistingValueInUserToNil]' started.
2013-06-07 10:58:01.525 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, cover photo part, checksum part, when is missing, should change existing value in user to nil' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_ChecksumPart_WhenIsMissing_ShouldChangeExistingValueInUserToNil]' passed (0.003 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_ChecksumPart_WhenIsAvailable_ShouldCopyForNewUsers]' started.
2013-06-07 10:58:01.528 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 365819136
2013-06-07 10:58:01.528 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, cover photo part, checksum part, when is available, should copy for new users' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_ChecksumPart_WhenIsAvailable_ShouldCopyForNewUsers]' passed (0.003 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_ChecksumPart_WhenIsAvailable_ShouldOverrideValueIfDifferentAndForceRedownloadCoverPhoto]' started.
2013-06-07 10:58:01.532 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, cover photo part, checksum part, when is available, should override value if different and force redownload cover photo' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_ChecksumPart_WhenIsAvailable_ShouldOverrideValueIfDifferentAndForceRedownloadCoverPhoto]' passed (0.004 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_ChecksumPart_WhenIsAvailable_ShouldDoNothingIfTheValueIsSame]' started.
2013-06-07 10:58:01.536 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, cover photo part, checksum part, when is available, should do nothing if the value is same' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_ChecksumPart_WhenIsAvailable_ShouldDoNothingIfTheValueIsSame]' passed (0.003 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_UrlPart_WhenIsMissing_ShouldChangeExistingValueInUserToNil]' started.
2013-06-07 10:58:01.541 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, cover photo part, url part, when is missing, should change existing value in user to nil' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_UrlPart_WhenIsMissing_ShouldChangeExistingValueInUserToNil]' passed (0.004 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_UrlPart_WhenIsAvailable_ShouldOverrideValueIfDifferent]' started.
2013-06-07 10:58:01.545 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, cover photo part, url part, when is available, should override value if different' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_UrlPart_WhenIsAvailable_ShouldOverrideValueIfDifferent]' passed (0.004 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_UrlPart_WhenIsAvailable_ShouldDoNothingIfTheValueIsSame]' started.
2013-06-07 10:58:01.549 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, cover photo part, url part, when is available, should do nothing if the value is same' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_CoverPhotoPart_UrlPart_WhenIsAvailable_ShouldDoNothingIfTheValueIsSame]' passed (0.003 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_ChecksumPart_WhenIsMissing_ShouldChangeExistingValueInUserToNil]' started.
2013-06-07 10:58:01.554 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, avatar photo part, checksum part, when is missing, should change existing value in user to nil' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_ChecksumPart_WhenIsMissing_ShouldChangeExistingValueInUserToNil]' passed (0.004 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_ChecksumPart_WhenIsAvailable_ShouldCopyForNewUsers]' started.
2013-06-07 10:58:01.558 DemoDev[2667:1d603] Created new object of class QWUser with id 1 in context 366146960
2013-06-07 10:58:01.559 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, avatar photo part, checksum part, when is available, should copy for new users' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_ChecksumPart_WhenIsAvailable_ShouldCopyForNewUsers]' passed (0.004 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_ChecksumPart_WhenIsAvailable_ShouldOverrideValueIfDifferentAndForceRedownloadCoverPhotoAndRemovePhotoFromMemoryAndCache]' started.
2013-06-07 10:58:01.563 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, avatar photo part, checksum part, when is available, should override value if different and force redownload cover photo and remove photo from memory and cache' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_ChecksumPart_WhenIsAvailable_ShouldOverrideValueIfDifferentAndForceRedownloadCoverPhotoAndRemovePhotoFromMemoryAndCache]' passed (0.004 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_ChecksumPart_WhenIsAvailable_ShouldDoNothingIfTheValueIsSame]' started.
2013-06-07 10:58:01.568 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, avatar photo part, checksum part, when is available, should do nothing if the value is same' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_ChecksumPart_WhenIsAvailable_ShouldDoNothingIfTheValueIsSame]' passed (0.004 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_UrlPart_WhenIsMissing_ShouldChangeExistingValueInUserToNil]' started.
2013-06-07 10:58:01.573 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, avatar photo part, url part, when is missing, should change existing value in user to nil' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_UrlPart_WhenIsMissing_ShouldChangeExistingValueInUserToNil]' passed (0.005 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_UrlPart_WhenIsAvailable_ShouldOverrideValueIfDifferent]' started.
2013-06-07 10:58:01.578 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, avatar photo part, url part, when is available, should override value if different' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_UrlPart_WhenIsAvailable_ShouldOverrideValueIfDifferent]' passed (0.004 seconds).
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_UrlPart_WhenIsAvailable_ShouldDoNothingIfTheValueIsSame]' started.
2013-06-07 10:58:01.581 DemoDev[2667:1d603] + 'QWParserUtils+UserParsing, used for user JSON, avatar photo part, url part, when is available, should do nothing if the value is same' [PASSED]
Test Case '-[QWParserUtilsUserParsingSpec QWParserUtilsUserParsing_UsedForUserJSON_AvatarPhotoPart_UrlPart_WhenIsAvailable_ShouldDoNothingIfTheValueIsSame]' passed (0.003 seconds).
Test Suite 'QWParserUtilsUserParsingSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 14 tests, with 0 failures (0 unexpected) in 0.052 (0.061) seconds
Test Suite 'QWPhotoParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWPhotoParserSpec QWPhotoParser_Creation_WithProvidedCoradataAccessor_ShouldHaveItSet]' started.
2013-06-07 10:58:01.584 DemoDev[2667:1d603] + 'QWPhotoParser, creation, with provided coradata accessor, should have it set' [PASSED]
Test Case '-[QWPhotoParserSpec QWPhotoParser_Creation_WithProvidedCoradataAccessor_ShouldHaveItSet]' passed (0.002 seconds).
Test Case '-[QWPhotoParserSpec QWPhotoParser_Creation_WithoutProvidingCoradataAccessor_ShouldUseTheDefaultBackgroundOne]' started.
2013-06-07 10:58:01.585 DemoDev[2667:1d603] + 'QWPhotoParser, creation, without providing coradata accessor, should use the default background one' [PASSED]
Test Case '-[QWPhotoParserSpec QWPhotoParser_Creation_WithoutProvidingCoradataAccessor_ShouldUseTheDefaultBackgroundOne]' passed (0.000 seconds).
Test Case '-[QWPhotoParserSpec QWPhotoParser_ParsingResponse_ShouldReturnParsedPhoto]' started.
2013-06-07 10:58:01.588 DemoDev[2667:1d603] Created new object of class QWPhoto with id 13 in context 365757344
2013-06-07 10:58:01.588 DemoDev[2667:1d603] + 'QWPhotoParser, parsing response, should return parsed photo' [PASSED]
Test Case '-[QWPhotoParserSpec QWPhotoParser_ParsingResponse_ShouldReturnParsedPhoto]' passed (0.003 seconds).
Test Case '-[QWPhotoParserSpec QWPhotoParser_ParsingResponse_WithPrivatePhoto_ShouldReturnPrivatePhoto]' started.
2013-06-07 10:58:01.591 DemoDev[2667:1d603] Created new object of class QWPhoto with id 13 in context 365930784
2013-06-07 10:58:01.592 DemoDev[2667:1d603] + 'QWPhotoParser, parsing response, with private photo, should return private photo' [PASSED]
Test Case '-[QWPhotoParserSpec QWPhotoParser_ParsingResponse_WithPrivatePhoto_ShouldReturnPrivatePhoto]' passed (0.003 seconds).
Test Case '-[QWPhotoParserSpec QWPhotoParser_ParsingResponse_WithNotPrivatePhoto_ShouldReturnNotPrivatePhoto]' started.
2013-06-07 10:58:01.595 DemoDev[2667:1d603] Created new object of class QWPhoto with id 13 in context 364905936
2013-06-07 10:58:01.595 DemoDev[2667:1d603] + 'QWPhotoParser, parsing response, with not private photo, should return not private photo' [PASSED]
Test Case '-[QWPhotoParserSpec QWPhotoParser_ParsingResponse_WithNotPrivatePhoto_ShouldReturnNotPrivatePhoto]' passed (0.003 seconds).
Test Suite 'QWPhotoParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 5 tests, with 0 failures (0 unexpected) in 0.012 (0.014) seconds
Test Suite 'QWPhotoPopularityCalculatorSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWPhotoPopularityCalculatorSpec QWPhotoPopularityCalculator_PopularityAlgorithm_ShouldPutMoreWeightIntoCommentsCountThanLikesCount]' started.
2013-06-07 10:58:01.596 DemoDev[2667:1d603] + 'QWPhotoPopularityCalculator, popularity algorithm, should put more weight into comments count than likes count' [PASSED]
Test Case '-[QWPhotoPopularityCalculatorSpec QWPhotoPopularityCalculator_PopularityAlgorithm_ShouldPutMoreWeightIntoCommentsCountThanLikesCount]' passed (0.000 seconds).
Test Case '-[QWPhotoPopularityCalculatorSpec QWPhotoPopularityCalculator_PopularityAlgorithm_ShouldPutMoreWeightIntoCommentsCountThanViewsCount]' started.
2013-06-07 10:58:01.597 DemoDev[2667:1d603] + 'QWPhotoPopularityCalculator, popularity algorithm, should put more weight into comments count than views count' [PASSED]
Test Case '-[QWPhotoPopularityCalculatorSpec QWPhotoPopularityCalculator_PopularityAlgorithm_ShouldPutMoreWeightIntoCommentsCountThanViewsCount]' passed (0.000 seconds).
Test Case '-[QWPhotoPopularityCalculatorSpec QWPhotoPopularityCalculator_PopularityAlgorithm_ShouldPutMoreWeigthIntoLikesCountThanViewsCount]' started.
2013-06-07 10:58:01.598 DemoDev[2667:1d603] + 'QWPhotoPopularityCalculator, popularity algorithm, should put more weigth into likes count than views count' [PASSED]
Test Case '-[QWPhotoPopularityCalculatorSpec QWPhotoPopularityCalculator_PopularityAlgorithm_ShouldPutMoreWeigthIntoLikesCountThanViewsCount]' passed (0.000 seconds).
Test Suite 'QWPhotoPopularityCalculatorSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.001 (0.002) seconds
Test Suite 'QWPhotoViewsCountParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWPhotoViewsCountParserSpec QWPhotoViewsCountParser_ParsingResponse_ShouldUpdatePhotoViewCountsToThoseFromServer]' started.
2013-06-07 10:58:01.603 DemoDev[2667:1d603] + 'QWPhotoViewsCountParser, parsing response, should update photo view counts to those from server' [PASSED]
Test Case '-[QWPhotoViewsCountParserSpec QWPhotoViewsCountParser_ParsingResponse_ShouldUpdatePhotoViewCountsToThoseFromServer]' passed (0.005 seconds).
Test Case '-[QWPhotoViewsCountParserSpec QWPhotoViewsCountParser_ParsingResponse_WhenViewsCountFromServerIsDifferentFromTheLocalOne_ShouldUpdatePopularity]' started.
2013-06-07 10:58:01.607 DemoDev[2667:1d603] + 'QWPhotoViewsCountParser, parsing response, when views count from server is different from the local one, should update popularity' [PASSED]
Test Case '-[QWPhotoViewsCountParserSpec QWPhotoViewsCountParser_ParsingResponse_WhenViewsCountFromServerIsDifferentFromTheLocalOne_ShouldUpdatePopularity]' passed (0.004 seconds).
Test Case '-[QWPhotoViewsCountParserSpec QWPhotoViewsCountParser_ParsingResponse_WhenViewsCountFromServerIsDifferentFromTheLocalOne_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:01.611 DemoDev[2667:1d603] + 'QWPhotoViewsCountParser, parsing response, when views count from server is different from the local one, should update last activity timestamp' [PASSED]
Test Case '-[QWPhotoViewsCountParserSpec QWPhotoViewsCountParser_ParsingResponse_WhenViewsCountFromServerIsDifferentFromTheLocalOne_ShouldUpdateLastActivityTimestamp]' passed (0.003 seconds).
Test Case '-[QWPhotoViewsCountParserSpec QWPhotoViewsCountParser_ParsingResponse_WhenViewsCountFromServerIsTheSameAsTheLocalOne_ShouldLeavePopularityAtTheSameLevel]' started.
2013-06-07 10:58:01.615 DemoDev[2667:1d603] + 'QWPhotoViewsCountParser, parsing response, when views count from server is the same as the local one, should leave popularity at the same level' [PASSED]
Test Case '-[QWPhotoViewsCountParserSpec QWPhotoViewsCountParser_ParsingResponse_WhenViewsCountFromServerIsTheSameAsTheLocalOne_ShouldLeavePopularityAtTheSameLevel]' passed (0.003 seconds).
Test Suite 'QWPhotoViewsCountParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.016 (0.018) seconds
Test Suite 'QWPhotoViewsCountRegistrySpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWPhotoViewsCountRegistrySpec QWPhotoViewsCountRegistry_IncrementingViewsCountForPhoto_WhenIncrementedForTheFirstTime_ShouldBumpViewsCountTo1]' started.
2013-06-07 10:58:01.616 DemoDev[2667:1d603] + 'QWPhotoViewsCountRegistry, incrementing views count for photo, when incremented for the first time, should bump views count to 1' [PASSED]
Test Case '-[QWPhotoViewsCountRegistrySpec QWPhotoViewsCountRegistry_IncrementingViewsCountForPhoto_WhenIncrementedForTheFirstTime_ShouldBumpViewsCountTo1]' passed (0.001 seconds).
Test Case '-[QWPhotoViewsCountRegistrySpec QWPhotoViewsCountRegistry_IncrementingViewsCountForPhoto_WhenIncrementedAFewTimes_ShouldSumAppAllIncrements]' started.
2013-06-07 10:58:01.617 DemoDev[2667:1d603] + 'QWPhotoViewsCountRegistry, incrementing views count for photo, when incremented a few times , should sum app all increments' [PASSED]
Test Case '-[QWPhotoViewsCountRegistrySpec QWPhotoViewsCountRegistry_IncrementingViewsCountForPhoto_WhenIncrementedAFewTimes_ShouldSumAppAllIncrements]' passed (0.001 seconds).
Test Suite 'QWPhotoViewsCountRegistrySpec' finished at 2013-06-07 08:58:01 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.001 (0.002) seconds
Test Suite 'QWPhotosCommentsAndLoversParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldAddCommentToPhoto]' started.
2013-06-07 10:58:01.624 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367083920
2013-06-07 10:58:01.625 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's new comment, should add comment to photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldAddCommentToPhoto]' passed (0.007 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:01.632 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367273536
2013-06-07 10:58:01.632 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's new comment, should update popularity for a photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldUpdatePopularityForAPhoto]' passed (0.007 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:01.638 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367242624
2013-06-07 10:58:01.639 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's new comment, should update last activity timestamp' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldUpdateLastActivityTimestamp]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldUpdateAlbumCommentsCount]' started.
2013-06-07 10:58:01.645 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367245856
2013-06-07 10:58:01.646 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's new comment, should update album comments count' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldUpdateAlbumCommentsCount]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldUpdateCountersInShareDemoFeedObject]' started.
2013-06-07 10:58:01.653 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367285952
2013-06-07 10:58:01.653 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's new comment, should update counters in share demo feed object' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresNewComment_ShouldUpdateCountersInShareDemoFeedObject]' passed (0.007 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_WhenThereAreNoLovers_ShouldNotUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:01.661 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's existing comment, when there are no lovers, should not update popularity for a photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_WhenThereAreNoLovers_ShouldNotUpdatePopularityForAPhoto]' passed (0.007 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_WhenThereAreNoLovers_ShouldNotUpdateLastActivityTimestampForAPhoto]' started.
2013-06-07 10:58:01.667 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's existing comment, when there are no lovers, should not update last activity timestamp for a photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_WhenThereAreNoLovers_ShouldNotUpdateLastActivityTimestampForAPhoto]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_ShouldNotAddNewComment]' started.
2013-06-07 10:58:01.674 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's existing comment, should not add new comment' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_ShouldNotAddNewComment]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_ShouldNotUpdateAlbumCommentsCount]' started.
2013-06-07 10:58:01.680 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's existing comment, should not update album comments count' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_ShouldNotUpdateAlbumCommentsCount]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_ShouldNotUpdateCountersInShareDemoFeedObject]' started.
2013-06-07 10:58:01.687 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing comments, when there's existing comment, should not update counters in share demo feed object' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingComments_WhenTheresExistingComment_ShouldNotUpdateCountersInShareDemoFeedObject]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresNewLover_ShouldAddLoverToPhoto]' started.
2013-06-07 10:58:01.692 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367255296
2013-06-07 10:58:01.693 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's new lover, should add lover to photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresNewLover_ShouldAddLoverToPhoto]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresNewLover_ShouldUpdateAlbumLovesCount]' started.
2013-06-07 10:58:01.699 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367337056
2013-06-07 10:58:01.699 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's new lover, should update album loves count' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresNewLover_ShouldUpdateAlbumLovesCount]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresNewLover_ShouldUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:01.706 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367255072
2013-06-07 10:58:01.707 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's new lover, should update likes count in feed object for demo share' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresNewLover_ShouldUpdateLikesCountInFeedObjectForDemoShare]' passed (0.007 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresNewLover_ShouldUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:01.713 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367336992
2013-06-07 10:58:01.714 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's new lover, should update popularity for a photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresNewLover_ShouldUpdatePopularityForAPhoto]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_ShouldNotAddNewLover]' started.
2013-06-07 10:58:01.720 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 364906704
2013-06-07 10:58:01.720 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's existing lover, should not add new lover' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_ShouldNotAddNewLover]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_ShouldNotUpdateAlbumLovesCount]' started.
2013-06-07 10:58:01.728 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 366161488
2013-06-07 10:58:01.728 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's existing lover, should not update album loves count' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_ShouldNotUpdateAlbumLovesCount]' passed (0.008 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_ShouldNotUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:01.735 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367250064
2013-06-07 10:58:01.735 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's existing lover, should not update likes count in feed object for demo share' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_ShouldNotUpdateLikesCountInFeedObjectForDemoShare]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_WhenThereAreNoComments_ShouldNotUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:01.741 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's existing lover, when there are no comments, should not update popularity for a photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_WhenThereAreNoComments_ShouldNotUpdatePopularityForAPhoto]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_AndSomeoneUnlovedPhoto_ShouldRemoveUsersWhoUnlovedPhoto]' started.
2013-06-07 10:58:01.747 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 367290240
2013-06-07 10:58:01.748 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367290240
2013-06-07 10:58:01.748 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's existing lover, and someone unloved photo, should remove users who unloved photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_AndSomeoneUnlovedPhoto_ShouldRemoveUsersWhoUnlovedPhoto]' passed (0.006 seconds).
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_AndSomeoneUnlovedPhoto_ShouldUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:01.754 DemoDev[2667:1d603] Created new object of class QWUser with id 3 in context 367347456
2013-06-07 10:58:01.755 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367347456
2013-06-07 10:58:01.755 DemoDev[2667:1d603] + 'QWPhotosCommentsAndLoversParser, parsing lovers, when there's existing lover, and someone unloved photo, should update popularity for a photo' [PASSED]
Test Case '-[QWPhotosCommentsAndLoversParserSpec QWPhotosCommentsAndLoversParser_ParsingLovers_WhenTheresExistingLover_AndSomeoneUnlovedPhoto_ShouldUpdatePopularityForAPhoto]' passed (0.007 seconds).
Test Suite 'QWPhotosCommentsAndLoversParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 20 tests, with 0 failures (0 unexpected) in 0.128 (0.138) seconds
Test Suite 'QWPhotosParserSpec' started at 2013-06-07 08:58:01 +0000
Test Suite 'QWPhotosParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 0 tests, with 0 failures (0 unexpected) in 0.000 (0.000) seconds
Test Suite 'QWPhotosPopularityHandlerSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_CheckingIfPopularityUpdateIsNeeded_ShouldReturnYESIfDifferenceBetweenCurrentTimestampAndLastUpdateTimestampIsMoreThanADay]' started.
2013-06-07 10:58:01.759 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, checking if popularity update is needed, should return YES if difference between current timestamp and last update timestamp is more than a day' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_CheckingIfPopularityUpdateIsNeeded_ShouldReturnYESIfDifferenceBetweenCurrentTimestampAndLastUpdateTimestampIsMoreThanADay]' passed (0.003 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_CheckingIfPopularityUpdateIsNeeded_ShouldReturnNOIfDifferenceBetweenCurrentTimestampAndLastUpdateTimestampIsLessThanADay]' started.
2013-06-07 10:58:01.763 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, checking if popularity update is needed, should return NO if difference between current timestamp and last update timestamp is less than a day' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_CheckingIfPopularityUpdateIsNeeded_ShouldReturnNOIfDifferenceBetweenCurrentTimestampAndLastUpdateTimestampIsLessThanADay]' passed (0.003 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenUserIsNil_ShouldNOTUpdatePopularity]' started.
2013-06-07 10:58:01.769 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for logged in user photos, when user is nil, should NOT update popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenUserIsNil_ShouldNOTUpdatePopularity]' passed (0.005 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenDifferenceBetweenLastPopularityUpdateTimestampAndCurrentTimestampIsToSmall_ShouldNOTUpdatePopularity]' started.
2013-06-07 10:58:01.776 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for logged in user photos, when difference between last popularity update timestamp and current timestamp is to small, should NOT update popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenDifferenceBetweenLastPopularityUpdateTimestampAndCurrentTimestampIsToSmall_ShouldNOTUpdatePopularity]' passed (0.006 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenDifferenceBetweenLastPopularityUpdateTimestampAndCurrentTimestampIsToSmall_ShouldNOTUpdateLastPopularityUpdateTimestamp]' started.
2013-06-07 10:58:01.780 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for logged in user photos, when difference between last popularity update timestamp and current timestamp is to small, should NOT update last popularity update timestamp' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenDifferenceBetweenLastPopularityUpdateTimestampAndCurrentTimestampIsToSmall_ShouldNOTUpdateLastPopularityUpdateTimestamp]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenUserIsNOTNilAndDifferenceBetweenLastPopularityUpdateTimestampAndCurrentTimestampIsNOTToSmall_ShouldUpdatePopularityForAllLoggedUserPhotos]' started.
2013-06-07 10:58:01.787 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for logged in user photos, when user is NOT nil and difference between last popularity update timestamp and current timestamp is NOT to small, should update popularity for all logged user photos' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenUserIsNOTNilAndDifferenceBetweenLastPopularityUpdateTimestampAndCurrentTimestampIsNOTToSmall_ShouldUpdatePopularityForAllLoggedUserPhotos]' passed (0.006 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenUserIsNOTNilAndDifferenceBetweenLastPopularityUpdateTimestampAndCurrentTimestampIsNOTToSmall_ShouldUpdateLastPopularityUpdateTimestamp]' started.
2013-06-07 10:58:01.792 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for logged in user photos, when user is NOT nil and difference between last popularity update timestamp and current timestamp is NOT to small, should update last popularity update timestamp' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_WhenUserIsNOTNilAndDifferenceBetweenLastPopularityUpdateTimestampAndCurrentTimestampIsNOTToSmall_ShouldUpdateLastPopularityUpdateTimestamp]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_ShouldNOTUpdatePopularityForOtherUsersThanLoggedUser]' started.
2013-06-07 10:58:01.799 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for logged in user photos, should NOT update popularity for other users than logged user' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForLoggedInUserPhotos_ShouldNOTUpdatePopularityForOtherUsersThanLoggedUser]' passed (0.006 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingViewsCountForPhotosWithViewsCountDictionary_ShouldExecuteViewsCountUpdateExecutorMethod]' started.
2013-06-07 10:58:01.805 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating views count for photos with views count dictionary, should execute views count update executor method' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingViewsCountForPhotosWithViewsCountDictionary_ShouldExecuteViewsCountUpdateExecutorMethod]' passed (0.005 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenCommentsCountIncreased_ShouldIncreasePopularity]' started.
2013-06-07 10:58:01.809 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when comments count increased, should increase popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenCommentsCountIncreased_ShouldIncreasePopularity]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenCommentsCountDecreased_ShouldDecreasePopularity]' started.
2013-06-07 10:58:01.815 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when comments count decreased, should decrease popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenCommentsCountDecreased_ShouldDecreasePopularity]' passed (0.005 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenLovesCountIncreased_ShouldIncreasePopularity]' started.
2013-06-07 10:58:01.820 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when loves count increased, should increase popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenLovesCountIncreased_ShouldIncreasePopularity]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenLovesCountDecreased_ShouldDecreasePopularity]' started.
2013-06-07 10:58:01.825 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when loves count decreased, should decrease popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenLovesCountDecreased_ShouldDecreasePopularity]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenViewsCountIncreased_ShouldIncreasePopularity]' started.
2013-06-07 10:58:01.829 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when views count increased, should increase popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenViewsCountIncreased_ShouldIncreasePopularity]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenViewsCountDecreased_ShouldDecreasedPopularity]' started.
2013-06-07 10:58:01.834 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when views count decreased, should decreased popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenViewsCountDecreased_ShouldDecreasedPopularity]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenLastActivityTimestampIncreased_WhenPhotoHasViewsCount_CommentsCountAndLovesCountEqualTo0_ShouldNOTChangePopularity]' started.
2013-06-07 10:58:01.838 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when last activity timestamp increased, when photo has viewsCount, commentsCount and lovesCount equal to 0, should NOT change popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenLastActivityTimestampIncreased_WhenPhotoHasViewsCount_CommentsCountAndLovesCountEqualTo0_ShouldNOTChangePopularity]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenLastActivityTimestampIncreased_WhenAtLeastOneOfPropertiesviewsCount_CommentsCount_LovesCountIsNotZero_ShouldIncreasePopularity]' started.
2013-06-07 10:58:01.844 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when last activity timestamp increased, when at least one of properties (viewsCount, commentsCount, lovesCount) is not zero, should increase popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenLastActivityTimestampIncreased_WhenAtLeastOneOfPropertiesviewsCount_CommentsCount_LovesCountIsNotZero_ShouldIncreasePopularity]' passed (0.004 seconds).
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenNeitherCommentsCountNorLovesCountNorViewsCountNorLastActivityTimestampChanged_ShouldNOTChangePopularity]' started.
2013-06-07 10:58:01.849 DemoDev[2667:1d603] + 'QWPhotosPopularityHandler, updating popularity for photo with object id, when neither comments count nor loves count nor views count nor last activity timestamp changed, should NOT change popularity' [PASSED]
Test Case '-[QWPhotosPopularityHandlerSpec QWPhotosPopularityHandler_UpdatingPopularityForPhotoWithObjectId_WhenNeitherCommentsCountNorLovesCountNorViewsCountNorLastActivityTimestampChanged_ShouldNOTChangePopularity]' passed (0.004 seconds).
Test Suite 'QWPhotosPopularityHandlerSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 18 tests, with 0 failures (0 unexpected) in 0.081 (0.093) seconds
Test Suite 'QWPostRequestSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWPostRequestSpec QWPostRequest_WhenRequestingHttpMethodType_ShouldReturnPOST]' started.
2013-06-07 10:58:01.850 DemoDev[2667:1d603] + 'QWPostRequest, when requesting http method type, should return POST' [PASSED]
Test Case '-[QWPostRequestSpec QWPostRequest_WhenRequestingHttpMethodType_ShouldReturnPOST]' passed (0.000 seconds).
Test Suite 'QWPostRequestSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.000 (0.001) seconds
Test Suite 'QWDemoViewControllerSpec' started at 2013-06-07 08:58:01 +0000
Test Suite 'QWDemoViewControllerSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 0 tests, with 0 failures (0 unexpected) in 0.000 (0.000) seconds
Test Suite 'QWRejectShareDemoMethodExecutorSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWRejectShareDemoMethodExecutorSpec QWRejectShareDemoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldDeleteDemoShareRequest]' started.
2013-06-07 10:58:01.857 DemoDev[2667:1d603] + 'QWRejectShareDemoMethodExecutor, executing request, when request is successful, should delete demo share request' [PASSED]
Test Case '-[QWRejectShareDemoMethodExecutorSpec QWRejectShareDemoMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldDeleteDemoShareRequest]' passed (0.007 seconds).
Test Case '-[QWRejectShareDemoMethodExecutorSpec QWRejectShareDemoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRestoreDeletedDemoShareRequest]' started.
2013-06-07 10:58:01.864 DemoDev[2667:1d603] Created new object of class QWDemoShareRequest with id 1 in context 358666208
2013-06-07 10:58:01.865 DemoDev[2667:1d603] + 'QWRejectShareDemoMethodExecutor, executing request, when request failed, should restore deleted demo share request' [PASSED]
Test Case '-[QWRejectShareDemoMethodExecutorSpec QWRejectShareDemoMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRestoreDeletedDemoShareRequest]' passed (0.007 seconds).
Test Suite 'QWRejectShareDemoMethodExecutorSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.014 (0.015) seconds
Test Suite 'QWRenameAlbumMethodExecutorSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWRenameAlbumMethodExecutorSpec QWRenameAlbumMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldRenameAlbumLocally]' started.
2013-06-07 10:58:01.869 DemoDev[2667:1d603] + 'QWRenameAlbumMethodExecutor, executing request, when request is successful, should rename album locally' [PASSED]
Test Case '-[QWRenameAlbumMethodExecutorSpec QWRenameAlbumMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldRenameAlbumLocally]' passed (0.004 seconds).
Test Case '-[QWRenameAlbumMethodExecutorSpec QWRenameAlbumMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldMarkAlbumAsRenamedLocally]' started.
2013-06-07 10:58:01.874 DemoDev[2667:1d603] + 'QWRenameAlbumMethodExecutor, executing request, when request is successful, should mark album as renamed locally' [PASSED]
Test Case '-[QWRenameAlbumMethodExecutorSpec QWRenameAlbumMethodExecutor_ExecutingRequest_WhenRequestIsSuccessful_ShouldMarkAlbumAsRenamedLocally]' passed (0.004 seconds).
Test Case '-[QWRenameAlbumMethodExecutorSpec QWRenameAlbumMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRollbackTitle]' started.
2013-06-07 10:58:01.879 DemoDev[2667:1d603] + 'QWRenameAlbumMethodExecutor, executing request, when request failed, should rollback title' [PASSED]
Test Case '-[QWRenameAlbumMethodExecutorSpec QWRenameAlbumMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRollbackTitle]' passed (0.004 seconds).
Test Case '-[QWRenameAlbumMethodExecutorSpec QWRenameAlbumMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRollbackWasRenamedProperty]' started.
2013-06-07 10:58:01.883 DemoDev[2667:1d603] + 'QWRenameAlbumMethodExecutor, executing request, when request failed, should rollback was renamed property' [PASSED]
Test Case '-[QWRenameAlbumMethodExecutorSpec QWRenameAlbumMethodExecutor_ExecutingRequest_WhenRequestFailed_ShouldRollbackWasRenamedProperty]' passed (0.004 seconds).
Test Suite 'QWRenameAlbumMethodExecutorSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.017 (0.018) seconds
Test Suite 'QWRequestSpec' started at 2013-06-07 08:58:01 +0000
Test Suite 'QWRequestSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 0 tests, with 0 failures (0 unexpected) in 0.000 (0.000) seconds
Test Suite 'QWRootViewControllerSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWRootViewControllerSpec QWRootViewController_ViewDidLoad_ShouldUpdatePopularityWhenNeeded]' started.
2013-06-07 10:58:01.888 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.890 DemoDev[2667:1d603] No push token to send.
2013-06-07 10:58:01.892 DemoDev[2667:1d603] + 'QWRootViewController, view did load, should update popularity when needed' [PASSED]
Test Case '-[QWRootViewControllerSpec QWRootViewController_ViewDidLoad_ShouldUpdatePopularityWhenNeeded]' passed (0.008 seconds).
Test Case '-[QWRootViewControllerSpec QWRootViewController_LoggingUser_ShouldUpdatePopularityWhenNeeded]' started.
2013-06-07 10:58:01.896 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.900 DemoDev[2667:1d603] + 'QWRootViewController, logging user, should update popularity when needed' [PASSED]
Test Case '-[QWRootViewControllerSpec QWRootViewController_LoggingUser_ShouldUpdatePopularityWhenNeeded]' passed (0.008 seconds).
Test Case '-[QWRootViewControllerSpec QWRootViewController_LoggingUser_ShouldUpdateRemovedPhotos]' started.
2013-06-07 10:58:01.906 DemoDev[2667:1d603] Persistent store is compatible
2013-06-07 10:58:01.909 DemoDev[2667:1d603] + 'QWRootViewController, logging user, should update removed photos' [PASSED]
Test Case '-[QWRootViewControllerSpec QWRootViewController_LoggingUser_ShouldUpdateRemovedPhotos]' passed (0.010 seconds).
Test Suite 'QWRootViewControllerSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.025 (0.026) seconds
Test Suite 'QWSendContactsParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldAddUser]' started.
2013-06-07 10:58:01.914 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 366224768
2013-06-07 10:58:01.915 DemoDev[2667:1d603] + 'QWSendContactsParser, parsing response, should add user' [PASSED]
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldAddUser]' passed (0.005 seconds).
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldMarkUserAsSuggested]' started.
2013-06-07 10:58:01.918 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 366100800
2013-06-07 10:58:01.920 DemoDev[2667:1d603] + 'QWSendContactsParser, parsing response, should mark user as suggested' [PASSED]
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldMarkUserAsSuggested]' passed (0.004 seconds).
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldAddDemoUserIdToContact]' started.
2013-06-07 10:58:01.923 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 367506640
2013-06-07 10:58:01.923 DemoDev[2667:1d603] + 'QWSendContactsParser, parsing response, should add demoUserId to contact' [PASSED]
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldAddDemoUserIdToContact]' passed (0.004 seconds).
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldAddAvatarUrlToContact]' started.
2013-06-07 10:58:01.926 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 367341888
2013-06-07 10:58:01.927 DemoDev[2667:1d603] + 'QWSendContactsParser, parsing response, should add avatarUrl to contact' [PASSED]
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldAddAvatarUrlToContact]' passed (0.004 seconds).
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldAddRankToUser]' started.
2013-06-07 10:58:01.930 DemoDev[2667:1d603] Created new object of class QWUser with id 2 in context 367574144
2013-06-07 10:58:01.931 DemoDev[2667:1d603] + 'QWSendContactsParser, parsing response, should add rank to user' [PASSED]
Test Case '-[QWSendContactsParserSpec QWSendContactsParser_ParsingResponse_ShouldAddRankToUser]' passed (0.004 seconds).
Test Suite 'QWSendContactsParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 5 tests, with 0 failures (0 unexpected) in 0.020 (0.021) seconds
Test Suite 'QWServerMethodExecutorSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWServerMethodExecutorSpec QWServerMethodExecutor_ReceivingFailureResponse_ShouldCallRequestDelegateDidRunFailureCallbackMethod]' started.
2013-06-07 10:58:01.933 DemoDev[2667:1d603] + 'QWServerMethodExecutor, receiving failure response, should call request delegate did run failure callback method' [PASSED]
Test Case '-[QWServerMethodExecutorSpec QWServerMethodExecutor_ReceivingFailureResponse_ShouldCallRequestDelegateDidRunFailureCallbackMethod]' passed (0.001 seconds).
Test Suite 'QWServerMethodExecutorSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.001 (0.001) seconds
Test Suite 'QWShareAlbumsParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWShareAlbumsParserSpec QWShareAlbumsParser_ShouldSetIsUserWeSharedPhotoOrAlbumWithToYESToUserWeSharedAlbumWith]' started.
2013-06-07 10:58:01.938 DemoDev[2667:1d603] + 'QWShareAlbumsParser, should set isUserWeSharedPhotoOrAlbumWith to YES to user we shared album with' [PASSED]
Test Case '-[QWShareAlbumsParserSpec QWShareAlbumsParser_ShouldSetIsUserWeSharedPhotoOrAlbumWithToYESToUserWeSharedAlbumWith]' passed (0.005 seconds).
Test Case '-[QWShareAlbumsParserSpec QWShareAlbumsParser_ShouldAddSharedAlbumToAlbumsSharedWithUser]' started.
2013-06-07 10:58:01.943 DemoDev[2667:1d603] + 'QWShareAlbumsParser, should add shared album to albums shared with user' [PASSED]
Test Case '-[QWShareAlbumsParserSpec QWShareAlbumsParser_ShouldAddSharedAlbumToAlbumsSharedWithUser]' passed (0.005 seconds).
Test Suite 'QWShareAlbumsParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.009 (0.010) seconds
Test Suite 'QWSharePhotosParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWSharePhotosParserSpec QWSharePhotosParser_ShouldSetIsUserWeSharedPhotoOrAlbumWithToYESToUserWeSharedPhotoWith]' started.
2013-06-07 10:58:01.947 DemoDev[2667:1d603] + 'QWSharePhotosParser, should set isUserWeSharedPhotoOrAlbumWith to YES to user we shared photo with' [PASSED]
Test Case '-[QWSharePhotosParserSpec QWSharePhotosParser_ShouldSetIsUserWeSharedPhotoOrAlbumWithToYESToUserWeSharedPhotoWith]' passed (0.004 seconds).
Test Case '-[QWSharePhotosParserSpec QWSharePhotosParser_ShouldAddSharedPhotoToPhotosSharedWithUser]' started.
2013-06-07 10:58:01.952 DemoDev[2667:1d603] + 'QWSharePhotosParser, should add shared photo to photos shared with user' [PASSED]
Test Case '-[QWSharePhotosParserSpec QWSharePhotosParser_ShouldAddSharedPhotoToPhotosSharedWithUser]' passed (0.004 seconds).
Test Suite 'QWSharePhotosParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.009 (0.010) seconds
Test Suite 'QWShareDemoParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWShareDemoParserSpec QWShareDemoParser_ShouldSetIsUserWeSharedPhotoOrAlbumWithToYESToUserWeSharedDemoWith]' started.
2013-06-07 10:58:01.957 DemoDev[2667:1d603] + 'QWShareDemoParser, should set isUserWeSharedPhotoOrAlbumWith to YES to user we shared demo with' [PASSED]
Test Case '-[QWShareDemoParserSpec QWShareDemoParser_ShouldSetIsUserWeSharedPhotoOrAlbumWithToYESToUserWeSharedDemoWith]' passed (0.004 seconds).
Test Case '-[QWShareDemoParserSpec QWShareDemoParser_WhenUserRequestedDemoShare_ShouldRemoveDemoShareRequest]' started.
2013-06-07 10:58:01.962 DemoDev[2667:1d603] + 'QWShareDemoParser, when user requested demo share, should remove demo share request' [PASSED]
Test Case '-[QWShareDemoParserSpec QWShareDemoParser_WhenUserRequestedDemoShare_ShouldRemoveDemoShareRequest]' passed (0.004 seconds).
Test Suite 'QWShareDemoParserSpec' finished at 2013-06-07 08:58:01 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.008 (0.009) seconds
Test Suite 'QWSharedAlbumsParserSpec' started at 2013-06-07 08:58:01 +0000
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasNoCommentBefore_ShouldUpdateAlbumCommentsCount]' started.
2013-06-07 10:58:01.967 DemoDev[2667:1d603] Albums count 1
2013-06-07 10:58:01.967 DemoDev[2667:1d603] Created new object of class QWPhoto with id 4 in context 359602640
2013-06-07 10:58:01.968 DemoDev[2667:1d603] Created new object of class QWUser with id 4 in context 359602640
2013-06-07 10:58:01.969 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 359602640
2013-06-07 10:58:01.970 DemoDev[2667:1d603] + 'QWSharedAlbumsParser, when parsing album, if there was no comment before, should update album comments count' [PASSED]
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasNoCommentBefore_ShouldUpdateAlbumCommentsCount]' passed (0.008 seconds).
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasNoCommentBefore_ShouldAddCommentToPhoto]' started.
2013-06-07 10:58:01.977 DemoDev[2667:1d603] Albums count 1
2013-06-07 10:58:01.978 DemoDev[2667:1d603] Created new object of class QWPhoto with id 4 in context 367750032
2013-06-07 10:58:01.979 DemoDev[2667:1d603] Created new object of class QWUser with id 4 in context 367750032
2013-06-07 10:58:01.979 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367750032
2013-06-07 10:58:01.980 DemoDev[2667:1d603] + 'QWSharedAlbumsParser, when parsing album, if there was no comment before, should add comment to photo' [PASSED]
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasNoCommentBefore_ShouldAddCommentToPhoto]' passed (0.009 seconds).
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasNoCommentBefore_ShouldUpdateCommentsCounterInShareDemoFeedObject]' started.
2013-06-07 10:58:01.985 DemoDev[2667:1d603] Albums count 1
2013-06-07 10:58:01.985 DemoDev[2667:1d603] Created new object of class QWPhoto with id 4 in context 367683552
2013-06-07 10:58:01.987 DemoDev[2667:1d603] Created new object of class QWUser with id 4 in context 367683552
2013-06-07 10:58:01.987 DemoDev[2667:1d603] Created new object of class QWComment with id 5 in context 367683552
2013-06-07 10:58:01.987 DemoDev[2667:1d603] + 'QWSharedAlbumsParser, when parsing album, if there was no comment before, should update comments counter in share demo feed object' [PASSED]
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasNoCommentBefore_ShouldUpdateCommentsCounterInShareDemoFeedObject]' passed (0.007 seconds).
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasSameCommentBefore_ShouldNotUpdateAlbumCommentsCount]' started.
2013-06-07 10:58:01.994 DemoDev[2667:1d603] Albums count 1
2013-06-07 10:58:01.994 DemoDev[2667:1d603] Created new object of class QWUser with id 4 in context 367787616
2013-06-07 10:58:01.995 DemoDev[2667:1d603] + 'QWSharedAlbumsParser, when parsing album, if there was same comment before, should not update album comments count' [PASSED]
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasSameCommentBefore_ShouldNotUpdateAlbumCommentsCount]' passed (0.007 seconds).
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasSameCommentBefore_ShouldNotAddCommentToPhoto]' started.
2013-06-07 10:58:02.001 DemoDev[2667:1d603] Albums count 1
2013-06-07 10:58:02.001 DemoDev[2667:1d603] Created new object of class QWUser with id 4 in context 367822784
2013-06-07 10:58:02.002 DemoDev[2667:1d603] + 'QWSharedAlbumsParser, when parsing album, if there was same comment before, should not add comment to photo' [PASSED]
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasSameCommentBefore_ShouldNotAddCommentToPhoto]' passed (0.007 seconds).
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasSameCommentBefore_ShouldNotUpdateCommentsCounterInShareDemoFeedObject]' started.
2013-06-07 10:58:02.010 DemoDev[2667:1d603] Albums count 1
2013-06-07 10:58:02.010 DemoDev[2667:1d603] Created new object of class QWUser with id 4 in context 367663952
2013-06-07 10:58:02.011 DemoDev[2667:1d603] + 'QWSharedAlbumsParser, when parsing album, if there was same comment before, should not update comments counter in share demo feed object' [PASSED]
Test Case '-[QWSharedAlbumsParserSpec QWSharedAlbumsParser_WhenParsingAlbum_IfThereWasSameCommentBefore_ShouldNotUpdateCommentsCounterInShareDemoFeedObject]' passed (0.008 seconds).
Test Suite 'QWSharedAlbumsParserSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.046 (0.049) seconds
Test Suite 'QWSharedContentHandlerSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWSharedContentHandlerSpec QWSharedContentHandler_HasDownloadedAllOldFeedsFlag_WhenInitializationEnds_ShouldBeSetToNO]' started.
2013-06-07 10:58:02.012 DemoDev[2667:1d603] + 'QWSharedContentHandler, has downloaded all old feeds flag, when initialization ends, should be set to NO' [PASSED]
Test Case '-[QWSharedContentHandlerSpec QWSharedContentHandler_HasDownloadedAllOldFeedsFlag_WhenInitializationEnds_ShouldBeSetToNO]' passed (0.001 seconds).
Test Case '-[QWSharedContentHandlerSpec QWSharedContentHandler_UpdatingOlderSharedContent_WhenReceivedEmptyFeedListResponse_ShouldSetHasDownloadedAllOldFeedsFlagToYES]' started.
2013-06-07 10:58:02.017 DemoDev[2667:1d603] + 'QWSharedContentHandler, updating older shared content, when received empty feed list response, should set hasDownloadedAllOldFeeds flag to YES' [PASSED]
Test Case '-[QWSharedContentHandlerSpec QWSharedContentHandler_UpdatingOlderSharedContent_WhenReceivedEmptyFeedListResponse_ShouldSetHasDownloadedAllOldFeedsFlagToYES]' passed (0.004 seconds).
Test Case '-[QWSharedContentHandlerSpec QWSharedContentHandler_UpdatingOlderSharedContent_WhenReceivedErrorResponse_ShouldLeaveHasDownloadedAllOldFeedsAsNO]' started.
2013-06-07 10:58:02.021 DemoDev[2667:1d603] + 'QWSharedContentHandler, updating older shared content, when received error response, should leave hasDownloadedAllOldFeeds as NO' [PASSED]
Test Case '-[QWSharedContentHandlerSpec QWSharedContentHandler_UpdatingOlderSharedContent_WhenReceivedErrorResponse_ShouldLeaveHasDownloadedAllOldFeedsAsNO]' passed (0.003 seconds).
Test Suite 'QWSharedContentHandlerSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.008 (0.010) seconds
Test Suite 'QWStopViewingDemoParserSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWStopViewingDemoParserSpec QWStopViewingDemoParser_WhenStoppingViewingOfUsersDemo_ShouldMarkThatUserIsNotSharingTheirDemo]' started.
2013-06-07 10:58:02.026 DemoDev[2667:1d603] + 'QWStopViewingDemoParser, when stopping viewing of users Demo, should mark that user is not sharing their Demo' [PASSED]
Test Case '-[QWStopViewingDemoParserSpec QWStopViewingDemoParser_WhenStoppingViewingOfUsersDemo_ShouldMarkThatUserIsNotSharingTheirDemo]' passed (0.004 seconds).
Test Case '-[QWStopViewingDemoParserSpec QWStopViewingDemoParser_WhenStoppingViewingOfUsersDemo_ShouldMarkThatUserWasNotAskedToShareDemo]' started.
2013-06-07 10:58:02.032 DemoDev[2667:1d603] + 'QWStopViewingDemoParser, when stopping viewing of users Demo, should mark that user was not asked to share Demo' [PASSED]
Test Case '-[QWStopViewingDemoParserSpec QWStopViewingDemoParser_WhenStoppingViewingOfUsersDemo_ShouldMarkThatUserWasNotAskedToShareDemo]' passed (0.006 seconds).
Test Case '-[QWStopViewingDemoParserSpec QWStopViewingDemoParser_WhenStoppingViewingOfUsersDemo_ShouldDeleteThatUserShareDemoFeedItem]' started.
2013-06-07 10:58:02.037 DemoDev[2667:1d603] + 'QWStopViewingDemoParser, when stopping viewing of users Demo, should delete that user Share Demo Feed Item' [PASSED]
Test Case '-[QWStopViewingDemoParserSpec QWStopViewingDemoParser_WhenStoppingViewingOfUsersDemo_ShouldDeleteThatUserShareDemoFeedItem]' passed (0.005 seconds).
Test Case '-[QWStopViewingDemoParserSpec QWStopViewingDemoParser_WhenStoppingViewingOfUsersDemo_ShouldCallQWUserCleanupParserWithSameResponseAndRequest]' started.
2013-06-07 10:58:02.042 DemoDev[2667:1d603] + 'QWStopViewingDemoParser, when stopping viewing of users Demo, should call QWUserCleanupParser with same response and request' [PASSED]
Test Case '-[QWStopViewingDemoParserSpec QWStopViewingDemoParser_WhenStoppingViewingOfUsersDemo_ShouldCallQWUserCleanupParserWithSameResponseAndRequest]' passed (0.004 seconds).
Test Suite 'QWStopViewingDemoParserSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.019 (0.021) seconds
Test Suite 'QWSyncAlbumProcessorOperationSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWSyncAlbumProcessorOperationSpec QWSyncAlbumProcessorOperation_ShouldMoveTheThumbnailGeneratedDuringEnumeration]' started.
2013-06-07 10:58:02.045 DemoDev[2667:1d603] new QWSyncAlbumProcessorOperation: <QWSyncAlbumProcessorOperation: 0x15d52170>
2013-06-07 10:58:02.046 DemoDev[2667:1d603] Created new object of class QWAlbum with id 12 in context 366265824
2013-06-07 10:58:02.047 DemoDev[2667:1d603] Created new object of class QWUser with id 22 in context 366265824
2013-06-07 10:58:02.049 DemoDev[2667:1d603] Created new object of class QWPhoto with id (null) in context 366265824
2013-06-07 10:58:02.050 DemoDev[2667:1d603] + 'QWSyncAlbumProcessorOperation, should move the thumbnail generated during enumeration' [PASSED]
Test Case '-[QWSyncAlbumProcessorOperationSpec QWSyncAlbumProcessorOperation_ShouldMoveTheThumbnailGeneratedDuringEnumeration]' passed (0.008 seconds).
Test Suite 'QWSyncAlbumProcessorOperationSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.008 (0.008) seconds
Test Suite 'QWSyncAlbumsBatchPreprocessingOperationSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWSyncAlbumsBatchPreprocessingOperationSpec QWSyncAlbumsBatchPreprocessingOperation_ProcessingBatch_WhenUploadedBatchIsBiggerThanDownloadedBatch_ShouldAddUploadedAndNotReceivedAssetUrlsAsRemovedPhotos]' started.
2013-06-07 10:58:02.053 DemoDev[2667:1d603] Created new object of class QWRemovedPhoto with id assets-library://asset/asset.JPG?id=98C6D49E-17E9-4EC9-AE8A-DC2984439DE9&ext=JPG in context 367813200
2013-06-07 10:58:02.054 DemoDev[2667:1d603] + 'QWSyncAlbumsBatchPreprocessingOperation, processing batch, when uploaded batch is bigger than downloaded batch, should add uploaded and not received asset urls as removed photos' [PASSED]
Test Case '-[QWSyncAlbumsBatchPreprocessingOperationSpec QWSyncAlbumsBatchPreprocessingOperation_ProcessingBatch_WhenUploadedBatchIsBiggerThanDownloadedBatch_ShouldAddUploadedAndNotReceivedAssetUrlsAsRemovedPhotos]' passed (0.003 seconds).
Test Case '-[QWSyncAlbumsBatchPreprocessingOperationSpec QWSyncAlbumsBatchPreprocessingOperation_ProcessingBatch_WhenUploadedBatchIsTheSameAsDownloadedBatch_ShouldNotAddAnyAssetUrlsToRemovedPhotos]' started.
2013-06-07 10:58:02.057 DemoDev[2667:1d603] + 'QWSyncAlbumsBatchPreprocessingOperation, processing batch, when uploaded batch is the same as downloaded batch, should not add any asset urls to removed photos' [PASSED]
Test Case '-[QWSyncAlbumsBatchPreprocessingOperationSpec QWSyncAlbumsBatchPreprocessingOperation_ProcessingBatch_WhenUploadedBatchIsTheSameAsDownloadedBatch_ShouldNotAddAnyAssetUrlsToRemovedPhotos]' passed (0.003 seconds).
Test Suite 'QWSyncAlbumsBatchPreprocessingOperationSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 2 tests, with 0 failures (0 unexpected) in 0.006 (0.007) seconds
Test Suite 'QWSyncEndOperationSpec' started at 2013-06-07 08:58:02 +0000
Test Suite 'QWSyncEndOperationSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 0 tests, with 0 failures (0 unexpected) in 0.000 (0.000) seconds
Test Suite 'QWSyncImageEnumerationOperationSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_Enumeration_ShouldStartAtProvidedIndex]' started.
2013-06-07 10:58:02.059 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[10]: <QWSyncImageEnumerationOperation: 0x15ec3b40>
2013-06-07 10:58:02.059 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, enumeration, should start at provided index' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_Enumeration_ShouldStartAtProvidedIndex]' passed (0.001 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_Enumeration_ShouldEnumerateInDescendingIndexOrder]' started.
2013-06-07 10:58:02.060 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[10]: <QWSyncImageEnumerationOperation: 0x15ede240>
2013-06-07 10:58:02.060 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, enumeration, should enumerate in descending index order' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_Enumeration_ShouldEnumerateInDescendingIndexOrder]' passed (0.001 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_Enumeration_ShouldNotStartIfTheOperationGetsCanceledBeforehand]' started.
2013-06-07 10:58:02.061 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[10]: <QWSyncImageEnumerationOperation: 0x15ee2810>
2013-06-07 10:58:02.061 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, enumeration, should not start if the operation gets canceled beforehand' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_Enumeration_ShouldNotStartIfTheOperationGetsCanceledBeforehand]' passed (0.001 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_Enumeration_ShouldStopWhenTheOperationGetsCanceledInTheMiddle]' started.
2013-06-07 10:58:02.062 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[10]: <QWSyncImageEnumerationOperation: 0x15eecea0>
2013-06-07 10:58:02.062 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, enumeration, should stop when the operation gets canceled in the middle' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_Enumeration_ShouldStopWhenTheOperationGetsCanceledInTheMiddle]' passed (0.001 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_EnumerationOfAssetGroup_WhenScreenshotsAllowed_ShouldSkipVideos]' started.
2013-06-07 10:58:02.065 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[2]: <QWSyncImageEnumerationOperation: 0x15ed53c0>
2013-06-07 10:58:02.106 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, enumeration of asset group, when screenshots allowed, should skip videos' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_EnumerationOfAssetGroup_WhenScreenshotsAllowed_ShouldSkipVideos]' passed (0.043 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_EnumerationOfAssetGroup_WhenScreenshotsAllowed_ShouldSkipAlreadyDemoedPhotos]' started.
2013-06-07 10:58:02.109 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[2]: <QWSyncImageEnumerationOperation: 0x15f1bff0>
2013-06-07 10:58:02.111 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[2]: <QWSyncImageEnumerationOperation: 0x15f2bc40>
2013-06-07 10:58:02.149 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, enumeration of asset group, when screenshots allowed, should skip already demoed photos' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_EnumerationOfAssetGroup_WhenScreenshotsAllowed_ShouldSkipAlreadyDemoedPhotos]' passed (0.043 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_ShouldReturnRightAmountOfObjects]' started.
2013-06-07 10:58:02.162 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[0]: <QWSyncImageEnumerationOperation: 0x15b3d120>
2013-06-07 10:58:02.164 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, extracting asset info, When screenshots allowed, should return right amount of objects' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_ShouldReturnRightAmountOfObjects]' passed (0.014 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_ShouldPostProgressNotification]' started.
2013-06-07 10:58:02.175 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[0]: <QWSyncImageEnumerationOperation: 0x15ea9e80>
2013-06-07 10:58:02.177 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, extracting asset info, When screenshots allowed, should post progress notification' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_ShouldPostProgressNotification]' passed (0.013 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_ShouldContainProperValues_ForAssetURL]' started.
2013-06-07 10:58:02.190 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[0]: <QWSyncImageEnumerationOperation: 0x15ec4c20>
2013-06-07 10:58:02.192 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, extracting asset info, When screenshots allowed, should contain proper values, for asset URL' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_ShouldContainProperValues_ForAssetURL]' passed (0.014 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_ShouldContainProperValues_ForCreationTimestamp]' started.
2013-06-07 10:58:02.203 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[0]: <QWSyncImageEnumerationOperation: 0x15edf500>
2013-06-07 10:58:02.205 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, extracting asset info, When screenshots allowed, should contain proper values, for creation timestamp' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_ShouldContainProperValues_ForCreationTimestamp]' passed (0.013 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_WhenPhotoContainsLocationData_ShouldReturnProperLatitude]' started.
2013-06-07 10:58:02.217 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[0]: <QWSyncImageEnumerationOperation: 0x15e8a6d0>
2013-06-07 10:58:02.219 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, extracting asset info, When screenshots allowed, when photo contains location data, should return proper latitude' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_WhenPhotoContainsLocationData_ShouldReturnProperLatitude]' passed (0.013 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_WhenPhotoContainsLocationData_ShouldReturnProperLongitude]' started.
2013-06-07 10:58:02.230 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[0]: <QWSyncImageEnumerationOperation: 0x15eef780>
2013-06-07 10:58:02.232 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, extracting asset info, When screenshots allowed, when photo contains location data, should return proper longitude' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_WhenPhotoContainsLocationData_ShouldReturnProperLongitude]' passed (0.013 seconds).
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_WhenPhotoContainsNoLocationData_ShouldNotContainInfoFromExif]' started.
2013-06-07 10:58:02.243 DemoDev[2667:1d603] new QWSyncImageEnumerationOperation[0]: <QWSyncImageEnumerationOperation: 0x15ecf0c0>
2013-06-07 10:58:02.245 DemoDev[2667:1d603] + 'QWSyncImageEnumerationOperation, extracting asset info, When screenshots allowed, when photo contains no location data, should not contain info from exif' [PASSED]
Test Case '-[QWSyncImageEnumerationOperationSpec QWSyncImageEnumerationOperation_ExtractingAssetInfo_WhenScreenshotsAllowed_WhenPhotoContainsNoLocationData_ShouldNotContainInfoFromExif]' passed (0.013 seconds).
Test Suite 'QWSyncImageEnumerationOperationSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 13 tests, with 0 failures (0 unexpected) in 0.181 (0.187) seconds
Test Suite 'QWSyncManagerSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWSyncManagerSpec QWSyncManager_ConditionalStartingSync_ShouldSetState_ToQWSyncManagerStateNoInternetIfNoInternetAvailable]' started.
2013-06-07 10:58:02.248 DemoDev[2667:1d603] tryToSync network status: 1
2013-06-07 10:58:02.248 DemoDev[2667:1d603] Sync manager state changed to state: 2 from state: 0
2013-06-07 10:58:02.250 DemoDev[2667:1d603] Sync manager state changed to state: 0 from state: 0
2013-06-07 10:58:02.250 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.251 DemoDev[2667:1d603] Sync manager state changed to state: 0 from state: 0
2013-06-07 10:58:02.252 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.252 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.253 DemoDev[2667:1d603] Sync manager state changed to state: 0 from state: 0
2013-06-07 10:58:02.254 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.254 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.254 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.255 DemoDev[2667:1d603] Sync manager state changed to state: 0 from state: 0
2013-06-07 10:58:02.256 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.256 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.256 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.256 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.256 DemoDev[2667:1d603] Sync manager state changed to state: 4 from state: 0
2013-06-07 10:58:02.256 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.256 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.257 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.257 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.257 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.257 DemoDev[2667:1d603] Sync manager state changed to state: 4 from state: 0
2013-06-07 10:58:02.257 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.257 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.257 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.258 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.258 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.258 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.258 DemoDev[2667:1d603] Sync manager state changed to state: 4 from state: 0
2013-06-07 10:58:02.258 DemoDev[2667:1d603] syncManagerChangedState: 0
2013-06-07 10:58:02.258 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.259 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.259 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.259 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.259 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.259 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.259 DemoDev[2667:1d603] Sync manager state changed to state: 4 from state: 0
2013-06-07 10:58:02.259 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.260 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.260 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.260 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.260 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.260 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.260 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.260 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.261 DemoDev[2667:1d603] + 'QWSyncManager, conditional starting sync, should set state, to QWSyncManagerStateNoInternet if no internet available' [PASSED]
Test Case '-[QWSyncManagerSpec QWSyncManager_ConditionalStartingSync_ShouldSetState_ToQWSyncManagerStateNoInternetIfNoInternetAvailable]' passed (0.015 seconds).
Test Case '-[QWSyncManagerSpec QWSyncManager_ConditionalStartingSync_ShouldSetState_ToQWSyncManagerStateWorkingIfOnWIFI]' started.
2013-06-07 10:58:02.264 DemoDev[2667:1d603] tryToSync network status: 2
2013-06-07 10:58:02.264 DemoDev[2667:1d603] startSync sync manager state : 0
2013-06-07 10:58:02.264 DemoDev[2667:1d603] Synchronization started
2013-06-07 10:58:02.264 DemoDev[2667:1d603] Sync manager state changed to state: 3 from state: 0
2013-06-07 10:58:02.264 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.264 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.265 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.265 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.265 DemoDev[2667:1d603] new QWSyncStartOperation: <QWSyncStartOperation: 0x15b78650>
2013-06-07 10:58:02.266 DemoDev[2667:1d603] new QWSyncEndOperation: <QWSyncEndOperation: 0x15b7a6a0>
2013-06-07 10:58:02.266 DemoDev[2667:1d603] + 'QWSyncManager, conditional starting sync, should set state, to QWSyncManagerStateWorking if on WIFI' [PASSED]
Test Case '-[QWSyncManagerSpec QWSyncManager_ConditionalStartingSync_ShouldSetState_ToQWSyncManagerStateWorkingIfOnWIFI]' passed (0.005 seconds).
Test Case '-[QWSyncManagerSpec QWSyncManager_StopingSync_ShouldSetStateToQWSyncManagerStateIdle]' started.
2013-06-07 10:58:02.269 DemoDev[2667:1d603] Sync manager state changed to state: 3 from state: 0
2013-06-07 10:58:02.269 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.269 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.269 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.269 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.269 DemoDev[2667:1d603] Sync manager state changed to state: 0 from state: 3
2013-06-07 10:58:02.270 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.270 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.270 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.270 DemoDev[2667:1d603] syncManagerChangedState: 4
2013-06-07 10:58:02.270 DemoDev[2667:1d603] + 'QWSyncManager, stoping sync, should set state to QWSyncManagerStateIdle' [PASSED]
Test Case '-[QWSyncManagerSpec QWSyncManager_StopingSync_ShouldSetStateToQWSyncManagerStateIdle]' passed (0.004 seconds).
Test Suite 'QWSyncManagerSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.024 (0.025) seconds
Test Suite 'QWSyncMetadataUploadOperationSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWSyncMetadataUploadOperationSpec QWSyncMetadataUploadOperation_RunningOperation_ShouldUseProperRequestObject]' started.
2013-06-07 10:58:02.272 DemoDev[2667:1d603] new QWSyncMetadataUploadOperation: <QWSyncMetadataUploadOperation: 0x15b678b0>
2013-06-07 10:58:02.272 DemoDev[2667:1d603] Starting sending photo metadatas: <QWSyncMetadataUploadOperation: 0x15b678b0>
2013-06-07 10:58:02.272 DemoDev[2667:1d603] + 'QWSyncMetadataUploadOperation, running operation, should use proper request object' [PASSED]
Test Case '-[QWSyncMetadataUploadOperationSpec QWSyncMetadataUploadOperation_RunningOperation_ShouldUseProperRequestObject]' passed (0.001 seconds).
Test Case '-[QWSyncMetadataUploadOperationSpec QWSyncMetadataUploadOperation_RunningOperation_ShouldNotMakeAnyHTTPCallsIfTheOperationGetsCanceledBeforehand]' started.
2013-06-07 10:58:02.274 DemoDev[2667:1d603] new QWSyncMetadataUploadOperation: <QWSyncMetadataUploadOperation: 0x15b7d980>
2013-06-07 10:58:02.274 DemoDev[2667:1d603] + 'QWSyncMetadataUploadOperation, running operation, should not make any HTTP calls if the operation gets canceled beforehand' [PASSED]
Test Case '-[QWSyncMetadataUploadOperationSpec QWSyncMetadataUploadOperation_RunningOperation_ShouldNotMakeAnyHTTPCallsIfTheOperationGetsCanceledBeforehand]' passed (0.001 seconds).
Test Case '-[QWSyncMetadataUploadOperationSpec QWSyncMetadataUploadOperation_RunningOperation_ShouldProperlyIndicateNetworkReleatedFailures]' started.
2013-06-07 10:58:02.275 DemoDev[2667:1d603] new QWSyncMetadataUploadOperation: <QWSyncMetadataUploadOperation: 0x15b71ad0>
2013-06-07 10:58:02.275 DemoDev[2667:1d603] Starting sending photo metadatas: <QWSyncMetadataUploadOperation: 0x15b71ad0>
2013-06-07 10:58:02.276 DemoDev[2667:1d603] Concurrent operation failed: <QWSyncMetadataUploadOperation: 0x15b71ad0> with error: (null)
2013-06-07 10:58:02.276 DemoDev[2667:1d603] + 'QWSyncMetadataUploadOperation, running operation, should properly indicate network releated failures ' [PASSED]
Test Case '-[QWSyncMetadataUploadOperationSpec QWSyncMetadataUploadOperation_RunningOperation_ShouldProperlyIndicateNetworkReleatedFailures]' passed (0.002 seconds).
Test Suite 'QWSyncMetadataUploadOperationSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.004 (0.006) seconds
Test Suite 'QWSyncPhotoUploadOperationSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_ShouldFailIfCanceledBeforeStarting]' started.
2013-06-07 10:58:02.283 DemoDev[2667:21103] Concurrent operation failed: <QWSyncPhotoUploadOperation: 0x15b83a10> with error: (null)
2013-06-07 10:58:02.283 DemoDev[2667:1d603] + 'QWSyncPhotoUploadOperation, should fail if canceled before starting' [PASSED]
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_ShouldFailIfCanceledBeforeStarting]' passed (0.006 seconds).
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_ShouldCompleteAsFastAsPossibleWhenAlreadyUploaded]' started.
2013-06-07 10:58:02.290 DemoDev[2667:21403] new QWSyncImageEnumerationOperation[-1]: <QWSyncImageEnumerationOperation: 0x15746180>
2013-06-07 10:58:02.290 DemoDev[2667:1d603] + 'QWSyncPhotoUploadOperation, should complete as fast as possible when already uploaded' [PASSED]
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_ShouldCompleteAsFastAsPossibleWhenAlreadyUploaded]' passed (0.006 seconds).
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_DownloadingTheUploadForm_ShouldFailIfTheRequestFails]' started.
2013-06-07 10:58:02.294 DemoDev[2667:21103] image batch enumeration completed
2013-06-07 10:58:02.294 DemoDev[2667:21103] Method url: https://api-dev.qwi.lt/api/photos/upload/pending, method: GET body: 
2013-06-07 10:58:02.295 DemoDev[2667:21403] Concurrent operation failed: <QWSyncPhotoUploadOperation: 0x15f4e220> with error: (null)
2013-06-07 10:58:02.295 DemoDev[2667:1d603] + 'QWSyncPhotoUploadOperation, downloading the upload form, should fail if the request fails' [PASSED]
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_DownloadingTheUploadForm_ShouldFailIfTheRequestFails]' passed (0.005 seconds).
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_DownloadingTheUploadForm_ShouldFailIfTheResponseIsMelformed]' started.
2013-06-07 10:58:02.301 DemoDev[2667:21403] Concurrent operation failed: <QWSyncPhotoUploadOperation: 0x15d7ecb0> with error: (null)
2013-06-07 10:58:02.301 DemoDev[2667:1d603] + 'QWSyncPhotoUploadOperation, downloading the upload form, should fail if the response is melformed' [PASSED]
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_DownloadingTheUploadForm_ShouldFailIfTheResponseIsMelformed]' passed (0.005 seconds).
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_LoadingAsset_ShouldFailIfTheRequestFails]' started.
2013-06-07 10:58:02.308 DemoDev[2667:21103] Concurrent operation failed: <QWSyncPhotoUploadOperation: 0x15d8cba0> with error: Error Domain=QWSyncPhotoUploadOperation asset was not found Code=-1 "The operation couldn’t be completed. (QWSyncPhotoUploadOperation asset was not found error -1.)"
2013-06-07 10:58:02.308 DemoDev[2667:1d603] + 'QWSyncPhotoUploadOperation, loading asset, should fail if the request fails' [PASSED]
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_LoadingAsset_ShouldFailIfTheRequestFails]' passed (0.007 seconds).
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_LoadingAsset_ShouldFailIfTheAssetWasRemoved]' started.
2013-06-07 10:58:02.313 DemoDev[2667:21d07] Concurrent operation failed: <QWSyncPhotoUploadOperation: 0x15d9a040> with error: Error Domain=QWSyncPhotoUploadOperation asset was not found Code=-1 "The operation couldn’t be completed. (QWSyncPhotoUploadOperation asset was not found error -1.)"
2013-06-07 10:58:02.313 DemoDev[2667:1d603] + 'QWSyncPhotoUploadOperation, loading asset, should fail if the asset was removed' [PASSED]
Test Case '-[QWSyncPhotoUploadOperationSpec QWSyncPhotoUploadOperation_LoadingAsset_ShouldFailIfTheAssetWasRemoved]' passed (0.005 seconds).
Test Suite 'QWSyncPhotoUploadOperationSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.035 (0.037) seconds
Test Suite 'QWSyncStartOperationSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWSyncStartOperationSpec QWSyncStartOperation_ShouldEnumerateThroughGroupsSearchingForSavedPhotos]' started.
2013-06-07 10:58:02.314 DemoDev[2667:1d603] new QWSyncStartOperation: <QWSyncStartOperation: 0x15b89f00>
2013-06-07 10:58:02.315 DemoDev[2667:1d603] + 'QWSyncStartOperation, should enumerate through groups searching for saved photos' [PASSED]
Test Case '-[QWSyncStartOperationSpec QWSyncStartOperation_ShouldEnumerateThroughGroupsSearchingForSavedPhotos]' passed (0.001 seconds).
Test Case '-[QWSyncStartOperationSpec QWSyncStartOperation_ShouldHaveAValueSetForTheAssetGroupProperty]' started.
2013-06-07 10:58:02.315 DemoDev[2667:1d603] new QWSyncStartOperation: <QWSyncStartOperation: 0x15b82370>
2013-06-07 10:58:02.316 DemoDev[2667:1d603] + 'QWSyncStartOperation, should have a value set for the assetGroup property' [PASSED]
Test Case '-[QWSyncStartOperationSpec QWSyncStartOperation_ShouldHaveAValueSetForTheAssetGroupProperty]' passed (0.001 seconds).
Test Case '-[QWSyncStartOperationSpec QWSyncStartOperation_ShouldNotEnumerateGroupsIfCanceled]' started.
2013-06-07 10:58:02.316 DemoDev[2667:1d603] new QWSyncStartOperation: <QWSyncStartOperation: 0x15b8aea0>
2013-06-07 10:58:02.317 DemoDev[2667:1d603] + 'QWSyncStartOperation, should not enumerate groups if canceled' [PASSED]
Test Case '-[QWSyncStartOperationSpec QWSyncStartOperation_ShouldNotEnumerateGroupsIfCanceled]' passed (0.001 seconds).
Test Suite 'QWSyncStartOperationSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 3 tests, with 0 failures (0 unexpected) in 0.002 (0.003) seconds
Test Suite 'QWTagPeopleParserSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_ShouldAddTagsToAlbum]' started.
2013-06-07 10:58:02.323 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 366568944
2013-06-07 10:58:02.324 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, should add tags to album' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_ShouldAddTagsToAlbum]' passed (0.007 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_ShouldAddUserTagToAlbum]' started.
2013-06-07 10:58:02.329 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 367024736
2013-06-07 10:58:02.330 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, should add user tag to album' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_ShouldAddUserTagToAlbum]' passed (0.006 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_ShouldAddContactTagToAlbum]' started.
2013-06-07 10:58:02.335 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 367010048
2013-06-07 10:58:02.336 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, should add contact tag to album' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_ShouldAddContactTagToAlbum]' passed (0.006 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_ShouldAddFreeTextTagToAlbum]' started.
2013-06-07 10:58:02.341 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 371344384
2013-06-07 10:58:02.342 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, should add free text tag to album' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_ShouldAddFreeTextTagToAlbum]' passed (0.006 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenUserIsAlreadyTagged_ShouldNotAddAnotherTag]' started.
2013-06-07 10:58:02.347 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 371315936
2013-06-07 10:58:02.348 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, when user is already tagged, should not add another tag' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenUserIsAlreadyTagged_ShouldNotAddAnotherTag]' passed (0.006 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenContactIsAlreadyTagged_ShouldNotAddAnotherTag]' started.
2013-06-07 10:58:02.354 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 367007440
2013-06-07 10:58:02.355 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, when contact is already tagged, should not add another tag' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenContactIsAlreadyTagged_ShouldNotAddAnotherTag]' passed (0.007 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenRemovingTags_ShouldRemoveTagsFromAlbum]' started.
2013-06-07 10:58:02.362 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 371276304
2013-06-07 10:58:02.362 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, when removing tags, should remove tags from album' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenRemovingTags_ShouldRemoveTagsFromAlbum]' passed (0.007 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenRemovingTags_ShouldRemoveTagsWithDemoUsers]' started.
2013-06-07 10:58:02.368 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 367047440
2013-06-07 10:58:02.369 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, when removing tags, should remove tags with demo users' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenRemovingTags_ShouldRemoveTagsWithDemoUsers]' passed (0.006 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenRemovingTags_ShouldRemoveTagsWithContacts]' started.
2013-06-07 10:58:02.374 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 371332240
2013-06-07 10:58:02.375 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, when removing tags, should remove tags with contacts' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenRemovingTags_ShouldRemoveTagsWithContacts]' passed (0.006 seconds).
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenRemovingTags_ShouldRemoveFreeTextTagToAlbum]' started.
2013-06-07 10:58:02.381 DemoDev[2667:1d603] Created new object of class QWTagUser with id tag in context 371280656
2013-06-07 10:58:02.382 DemoDev[2667:1d603] + 'QWTagPeopleParser, parsing response, when removing tags, should remove free text tag to album' [PASSED]
Test Case '-[QWTagPeopleParserSpec QWTagPeopleParser_ParsingResponse_WhenRemovingTags_ShouldRemoveFreeTextTagToAlbum]' passed (0.006 seconds).
Test Suite 'QWTagPeopleParserSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 10 tests, with 0 failures (0 unexpected) in 0.061 (0.065) seconds
Test Suite 'QWUnLovePhotoParserSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdatePhotoLovers]' started.
2013-06-07 10:58:02.388 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user loved, should update photo lovers' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdatePhotoLovers]' passed (0.006 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdateAlbumLovesCount]' started.
2013-06-07 10:58:02.395 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user loved, should update album loves count' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdateAlbumLovesCount]' passed (0.007 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:02.402 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user loved, should update likes count in feed object for demo share' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdateLikesCountInFeedObjectForDemoShare]' passed (0.006 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:02.409 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user loved, should update popularity for a photo' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdatePopularityForAPhoto]' passed (0.007 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:02.415 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user loved, should update last activity timestamp' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserLoved_ShouldUpdateLastActivityTimestamp]' passed (0.006 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdatePhotoLovers]' started.
2013-06-07 10:58:02.421 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user didn't love, should not update photo lovers' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdatePhotoLovers]' passed (0.005 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdateAlbumLovesCount]' started.
2013-06-07 10:58:02.427 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user didn't love, should not update album loves count' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdateAlbumLovesCount]' passed (0.005 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdateLikesCountInFeedObjectForDemoShare]' started.
2013-06-07 10:58:02.432 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user didn't love, should not update likes count in feed object for demo share' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdateLikesCountInFeedObjectForDemoShare]' passed (0.005 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdatePopularityForAPhoto]' started.
2013-06-07 10:58:02.439 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user didn't love, should not update popularity for a photo' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdatePopularityForAPhoto]' passed (0.006 seconds).
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:02.445 DemoDev[2667:1d603] + 'QWUnLovePhotoParser, when unloving photo which user didn't love, should not update last activity timestamp' [PASSED]
Test Case '-[QWUnLovePhotoParserSpec QWUnLovePhotoParser_WhenUnlovingPhotoWhichUserDidntLove_ShouldNotUpdateLastActivityTimestamp]' passed (0.006 seconds).
Test Suite 'QWUnLovePhotoParserSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 10 tests, with 0 failures (0 unexpected) in 0.059 (0.064) seconds
Test Suite 'QWUnlovePhotoMethodExecutorSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestIsSuccessful_ShouldRemoveLoverFromPhoto]' started.
2013-06-07 10:58:02.453 DemoDev[2667:1d603] + 'QWUnlovePhotoMethodExecutor, executing request with QWFailedRequestsHandler, when request is successful, should remove lover from photo' [PASSED]
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestIsSuccessful_ShouldRemoveLoverFromPhoto]' passed (0.008 seconds).
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestIsSuccessful_ShouldUpdateAlbumLovesCount]' started.
2013-06-07 10:58:02.463 DemoDev[2667:1d603] + 'QWUnlovePhotoMethodExecutor, executing request with QWFailedRequestsHandler, when request is successful, should update album loves count' [PASSED]
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestIsSuccessful_ShouldUpdateAlbumLovesCount]' passed (0.009 seconds).
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestIsSuccessful_ShouldUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:02.470 DemoDev[2667:1d603] + 'QWUnlovePhotoMethodExecutor, executing request with QWFailedRequestsHandler, when request is successful, should update last activity timestamp' [PASSED]
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestIsSuccessful_ShouldUpdateLastActivityTimestamp]' passed (0.007 seconds).
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestIsSuccessful_ShouldUpdatePopularity]' started.
2013-06-07 10:58:02.478 DemoDev[2667:1d603] + 'QWUnlovePhotoMethodExecutor, executing request with QWFailedRequestsHandler, when request is successful, should update popularity' [PASSED]
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestIsSuccessful_ShouldUpdatePopularity]' passed (0.007 seconds).
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestFailed_ShouldNotUpdateLoversInPhoto]' started.
2013-06-07 10:58:02.486 DemoDev[2667:1d603] + 'QWUnlovePhotoMethodExecutor, executing request with QWFailedRequestsHandler, when request failed, should not update lovers in photo' [PASSED]
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestFailed_ShouldNotUpdateLoversInPhoto]' passed (0.008 seconds).
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestFailed_ShouldNotUpdateAlbumLovesCount]' started.
2013-06-07 10:58:02.495 DemoDev[2667:1d603] + 'QWUnlovePhotoMethodExecutor, executing request with QWFailedRequestsHandler, when request failed, should not update album loves count' [PASSED]
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestFailed_ShouldNotUpdateAlbumLovesCount]' passed (0.008 seconds).
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestFailed_ShouldNotUpdateLastActivityTimestamp]' started.
2013-06-07 10:58:02.503 DemoDev[2667:1d603] + 'QWUnlovePhotoMethodExecutor, executing request with QWFailedRequestsHandler, when request failed, should not update last activity timestamp' [PASSED]
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestFailed_ShouldNotUpdateLastActivityTimestamp]' passed (0.008 seconds).
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestFailed_ShouldNotUpdatePopularity]' started.
2013-06-07 10:58:02.512 DemoDev[2667:1d603] + 'QWUnlovePhotoMethodExecutor, executing request with QWFailedRequestsHandler, when request failed, should not update popularity' [PASSED]
Test Case '-[QWUnlovePhotoMethodExecutorSpec QWUnlovePhotoMethodExecutor_ExecutingRequestWithQWFailedRequestsHandler_WhenRequestFailed_ShouldNotUpdatePopularity]' passed (0.009 seconds).
Test Suite 'QWUnlovePhotoMethodExecutorSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 8 tests, with 0 failures (0 unexpected) in 0.063 (0.067) seconds
Test Suite 'QWUnsharePhotoManagerSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWUnsharePhotoManagerSpec QWUnsharePhotoManager_TappingOnAStopSharingButton_ShouldSendUnsharePhotoRequest]' started.
2013-06-07 10:58:02.518 DemoDev[2667:1d603] + 'QWUnsharePhotoManager, tapping on a stop sharing button, should send unshare photo request' [PASSED]
Test Case '-[QWUnsharePhotoManagerSpec QWUnsharePhotoManager_TappingOnAStopSharingButton_ShouldSendUnsharePhotoRequest]' passed (0.005 seconds).
Test Case '-[QWUnsharePhotoManagerSpec QWUnsharePhotoManager_StartingPhotoUnshareFlow_WhenPhotoIsInSharedAlbum_ShouldShowUnshareAlbumDialog]' started.
2013-06-07 10:58:02.524 DemoDev[2667:1d603] + 'QWUnsharePhotoManager, starting photo unshare flow, when photo is in shared album, should show unshare album dialog' [PASSED]
Test Case '-[QWUnsharePhotoManagerSpec QWUnsharePhotoManager_StartingPhotoUnshareFlow_WhenPhotoIsInSharedAlbum_ShouldShowUnshareAlbumDialog]' passed (0.006 seconds).
Test Case '-[QWUnsharePhotoManagerSpec QWUnsharePhotoManager_StartingPhotoUnshareFlow_WhenPhotoIsSharedByAutosharing_ShouldShowStopAutosharingDialog]' started.
2013-06-07 10:58:02.530 DemoDev[2667:1d603] + 'QWUnsharePhotoManager, starting photo unshare flow, when photo is shared by auto-sharing, should show stop auto-sharing dialog' [PASSED]
Test Case '-[QWUnsharePhotoManagerSpec QWUnsharePhotoManager_StartingPhotoUnshareFlow_WhenPhotoIsSharedByAutosharing_ShouldShowStopAutosharingDialog]' passed (0.005 seconds).
Test Case '-[QWUnsharePhotoManagerSpec QWUnsharePhotoManager_StartingPhotoUnshareFlow_WhenPhotoIsSharedAsASeparateObject_ShouldUnsharePhotoDialog]' started.
2013-06-07 10:58:02.535 DemoDev[2667:1d603] + 'QWUnsharePhotoManager, starting photo unshare flow, when photo is shared as a separate object, should unshare photo dialog' [PASSED]
Test Case '-[QWUnsharePhotoManagerSpec QWUnsharePhotoManager_StartingPhotoUnshareFlow_WhenPhotoIsSharedAsASeparateObject_ShouldUnsharePhotoDialog]' passed (0.005 seconds).
Test Suite 'QWUnsharePhotoManagerSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.021 (0.023) seconds
Test Suite 'QWUnsharePhotoParserSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWUnsharePhotoParserSpec QWUnsharePhotoParser_WhenUnsharingPhotoThatIsNotInSharedAlbum_ShouldRemoveThisPhotoFromSharedWithUserPhotos]' started.
2013-06-07 10:58:02.540 DemoDev[2667:1d603] + 'QWUnsharePhotoParser, when unsharing photo that is not in shared album, should remove this photo from shared with user photos' [PASSED]
Test Case '-[QWUnsharePhotoParserSpec QWUnsharePhotoParser_WhenUnsharingPhotoThatIsNotInSharedAlbum_ShouldRemoveThisPhotoFromSharedWithUserPhotos]' passed (0.004 seconds).
Test Case '-[QWUnsharePhotoParserSpec QWUnsharePhotoParser_WhenUnsharingPhotoThatIsInSharedAlbum_ShouldUnshareAlbum]' started.
2013-06-07 10:58:02.546 DemoDev[2667:1d603] + 'QWUnsharePhotoParser, when unsharing photo that is in shared album, should unshare album' [PASSED]
Test Case '-[QWUnsharePhotoParserSpec QWUnsharePhotoParser_WhenUnsharingPhotoThatIsInSharedAlbum_ShouldUnshareAlbum]' passed (0.006 seconds).
Test Case '-[QWUnsharePhotoParserSpec QWUnsharePhotoParser_WhenUnsharingPhotoThatIsInSharedAlbum_ShouldMakeTheRestOfThePhotosFromAlbumShared]' started.
2013-06-07 10:58:02.552 DemoDev[2667:1d603] + 'QWUnsharePhotoParser, when unsharing photo that is in shared album, should make the rest of the photos from album shared' [PASSED]
Test Case '-[QWUnsharePhotoParserSpec QWUnsharePhotoParser_WhenUnsharingPhotoThatIsInSharedAlbum_ShouldMakeTheRestOfThePhotosFromAlbumShared]' passed (0.006 seconds).
Test Case '-[QWUnsharePhotoParserSpec QWUnsharePhotoParser_WhenUnsharingPhotoThatIsInSharedAlbum_ShouldUnsharePhoto]' started.
2013-06-07 10:58:02.560 DemoDev[2667:1d603] + 'QWUnsharePhotoParser, when unsharing photo that is in shared album, should unshare photo' [PASSED]
Test Case '-[QWUnsharePhotoParserSpec QWUnsharePhotoParser_WhenUnsharingPhotoThatIsInSharedAlbum_ShouldUnsharePhoto]' passed (0.006 seconds).
Test Suite 'QWUnsharePhotoParserSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 4 tests, with 0 failures (0 unexpected) in 0.022 (0.024) seconds
Test Suite 'QWUpdateDeletedPhotosParserSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWUpdateDeletedPhotosParserSpec QWUpdateDeletedPhotosParser_ShouldAddAllReveivedAssetUrlsToRemovedPhotos]' started.
2013-06-07 10:58:02.563 DemoDev[2667:1d603] Created new object of class QWRemovedPhoto with id assets-library://asset/asset.JPG?id=F16AEFAC-6418-489F-AB12-21B972DDA257&ext=JPG in context 364796480
2013-06-07 10:58:02.563 DemoDev[2667:1d603] Created new object of class QWRemovedPhoto with id assets-library://asset/asset.JPG?id=A7F20C7F-18F7-474C-A4CE-0082A9EC4153&ext=JPG in context 364796480
2013-06-07 10:58:02.563 DemoDev[2667:1d603] Created new object of class QWRemovedPhoto with id assets-library://asset/asset.JPG?id=6C439FEB-DFD9-4203-A6F1-78BA36833FA5&ext=JPG in context 364796480
2013-06-07 10:58:02.563 DemoDev[2667:1d603] + 'QWUpdateDeletedPhotosParser, should add all reveived asset urls to removed photos' [PASSED]
Test Case '-[QWUpdateDeletedPhotosParserSpec QWUpdateDeletedPhotosParser_ShouldAddAllReveivedAssetUrlsToRemovedPhotos]' passed (0.003 seconds).
Test Suite 'QWUpdateDeletedPhotosParserSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 1 test, with 0 failures (0 unexpected) in 0.003 (0.004) seconds
Test Suite 'QWUpdatedContentParserSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingPhoto_ShouldUpdateCommentsCountInAlbum]' started.
2013-06-07 10:58:02.573 DemoDev[2667:1d603] <QWUser: 0x15b0c2f0> (entity: QWUser; id: 0x15b0d2b0 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1316> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15bf6020 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1310>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x15b0f080 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1317>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.573 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.574 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.577 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing photo, should update comments count in album' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingPhoto_ShouldUpdateCommentsCountInAlbum]' passed (0.013 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingPhoto_ShouldUpdateLovesCountInAlbum]' started.
2013-06-07 10:58:02.587 DemoDev[2667:1d603] <QWUser: 0x15da6bc0> (entity: QWUser; id: 0x15da6b60 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1327> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15d9edb0 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1321>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x15da7770 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1328>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.587 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.588 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.589 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing photo, should update loves count in album' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingPhoto_ShouldUpdateLovesCountInAlbum]' passed (0.012 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingPhoto_ShouldUpdateLikesCounterInShareDemoFeedObject]' started.
2013-06-07 10:58:02.600 DemoDev[2667:1d603] <QWUser: 0x15f46d20> (entity: QWUser; id: 0x15f46cc0 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1338> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15f4f2e0 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1332>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x15f478d0 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1339>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.600 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.601 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.603 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing photo, should update likes counter in share demo feed object' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingPhoto_ShouldUpdateLikesCounterInShareDemoFeedObject]' passed (0.013 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingPhoto_ShouldUpdateCommentsCounterInShareDemoFeedObject]' started.
2013-06-07 10:58:02.614 DemoDev[2667:1d603] <QWUser: 0x15dbaf40> (entity: QWUser; id: 0x15dbaee0 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1349> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15db6bf0 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1343>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x15ba3bd0 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1350>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.615 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.615 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.616 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing photo, should update comments counter in share demo feed object' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingPhoto_ShouldUpdateCommentsCounterInShareDemoFeedObject]' passed (0.013 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingComment_ShouldDeleteACommentFromPhoto]' started.
2013-06-07 10:58:02.627 DemoDev[2667:1d603] <QWUser: 0x15dcd720> (entity: QWUser; id: 0x15dcd6c0 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1360> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15dc7f50 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1354>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x15dce2d0 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1361>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.628 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.628 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.629 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing comment, should delete a comment from photo' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingComment_ShouldDeleteACommentFromPhoto]' passed (0.013 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingComment_ShouldUpdateCommentsCountOnAPhoto]' started.
2013-06-07 10:58:02.640 DemoDev[2667:1d603] <QWUser: 0x163295f0> (entity: QWUser; id: 0x16329590 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1371> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x16318370 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1365>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x1632a1b0 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1372>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.641 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.641 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.642 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing comment, should update comments count on a photo' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingComment_ShouldUpdateCommentsCountOnAPhoto]' passed (0.013 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingComment_ShouldUpdateCommentCountForAlbum]' started.
2013-06-07 10:58:02.654 DemoDev[2667:1d603] <QWUser: 0x1621a5f0> (entity: QWUser; id: 0x15e8d6a0 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1382> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15ddd290 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1376>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x15ed1410 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1383>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.654 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.655 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.657 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing comment, should update comment count for album' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingComment_ShouldUpdateCommentCountForAlbum]' passed (0.014 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenUpdatingAlbums_ShouldDownloadAlbumsInfo]' started.
2013-06-07 10:58:02.669 DemoDev[2667:1d603] <QWUser: 0x15dee480> (entity: QWUser; id: 0x15dee420 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1393> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15de7b60 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1387>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x15def030 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1394>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.669 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.671 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when updating albums, should download albums info' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenUpdatingAlbums_ShouldDownloadAlbumsInfo]' passed (0.014 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenUpdatingPhotos_ShouldUpdatePhotoDimensions]' started.
2013-06-07 10:58:02.680 DemoDev[2667:1d603] <QWUser: 0x1633b900> (entity: QWUser; id: 0x1633b8a0 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1404> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x163362c0 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1398>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x1633c4b0 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1405>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.681 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.682 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.683 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when updating photos, should update photo dimensions' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenUpdatingPhotos_ShouldUpdatePhotoDimensions]' passed (0.012 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenUpdatingPhotos_ShouldRemoveCachedImages]' started.
2013-06-07 10:58:02.692 DemoDev[2667:1d603] <QWUser: 0x162514d0> (entity: QWUser; id: 0x16251470 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1415> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x16233300 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1409>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x16252090 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1416>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.693 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.694 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.695 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when updating photos, should remove cached images' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenUpdatingPhotos_ShouldRemoveCachedImages]' passed (0.012 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingDemoShare_ShouldDeleteThatUserShareDemoFeedItem]' started.
2013-06-07 10:58:02.707 DemoDev[2667:1d603] <QWUser: 0x15f74e70> (entity: QWUser; id: 0x15f74e10 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1426> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15f63e90 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1420>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x15df4610 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1427>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.707 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/demo/getAccessibleAssets, method: POST body: user_id=3
2013-06-07 10:58:02.708 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.710 DemoDev[2667:1d603] <QWUser: 0x15f74e70> (entity: QWUser; id: 0x15f74e10 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1426> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x15f63e90 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1420>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.710 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing demo share, should delete that user Share Demo Feed Item' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingDemoShare_ShouldDeleteThatUserShareDemoFeedItem]' passed (0.015 seconds).
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingDemoShare_ShouldCleanupAlbumsAndPhotosInfoForThatUser]' started.
2013-06-07 10:58:02.720 DemoDev[2667:1d603] <QWUser: 0x16267db0> (entity: QWUser; id: 0x16267d50 <x-coredata:///QWUser/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1437> ; data: {
    affectedByFeed =     (
    );
    albums =     (
        "0x162552e0 <x-coredata:///QWAlbum/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1431>"
    );
    albumsSharedWithUser =     (
    );
    avatarChecksum = nil;
    avatarUrl = nil;
    comments =     (
    );
    coverPhotoChecksum = nil;
    coverPhotoUrl = nil;
    entityId = 3;
    feedActions =     (
        "0x16268970 <x-coredata:///QWFeedObject/tA4F85DBC-BE78-4B7B-A42F-900835D1216A1438>"
    );
    firstName = nil;
    iRequestedDemo = nil;
    isDormant = 0;
    isSuggested = 0;
    isUserWeSharedPhotoOrAlbumWith = nil;
    lastName = nil;
    likedPhotos =     (
    );
    photos =     (
    );
    photosSharedWithUser =     (
    );
    rank = 0;
    redownloadAvatar = 0;
    redownloadCoverPhoto = nil;
    shareRequest = nil;
    sharedNotifications =     (
    );
    sharingNotifications =     (
    );
    sharingDemo = 0;
    tags =     (
    );
    viewingDemo = 0;
})
2013-06-07 10:58:02.721 DemoDev[2667:1d603] Method url: https://api-dev.qwi.lt/api/albums/updates, method: POST body: albums_ids=%5B3%5D
2013-06-07 10:58:02.722 DemoDev[2667:1d603] + 'QWUpdatedContentParser, when removing demo share, should cleanup albums and photos info for that user' [PASSED]
Test Case '-[QWUpdatedContentParserSpec QWUpdatedContentParser_WhenRemovingDemoShare_ShouldCleanupAlbumsAndPhotosInfoForThatUser]' passed (0.012 seconds).
Test Suite 'QWUpdatedContentParserSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 12 tests, with 0 failures (0 unexpected) in 0.154 (0.159) seconds
Test Suite 'QWUserNameHelperSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnFullNameWhenUserHasFirstAndLastName]' started.
2013-06-07 10:58:02.726 DemoDev[2667:1d603] + 'QWUser+NameHelper, should return full name when user has first and last name' [PASSED]
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnFullNameWhenUserHasFirstAndLastName]' passed (0.003 seconds).
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnFirstNameIfUserHasNoLastName]' started.
2013-06-07 10:58:02.729 DemoDev[2667:1d603] + 'QWUser+NameHelper, should return first name if user has no last name' [PASSED]
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnFirstNameIfUserHasNoLastName]' passed (0.003 seconds).
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnLastNameIfUserHasNoFirstName]' started.
2013-06-07 10:58:02.732 DemoDev[2667:1d603] + 'QWUser+NameHelper, should return last name if user has no first name' [PASSED]
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnLastNameIfUserHasNoFirstName]' passed (0.003 seconds).
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnLastNameIfUsersFirstNameIsEmpty]' started.
2013-06-07 10:58:02.736 DemoDev[2667:1d603] + 'QWUser+NameHelper, should return last name if user's first name is empty' [PASSED]
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnLastNameIfUsersFirstNameIsEmpty]' passed (0.004 seconds).
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnFirstNameIfUsersLastNameIsEmpty]' started.
2013-06-07 10:58:02.739 DemoDev[2667:1d603] + 'QWUser+NameHelper, should return first name if user's last name is empty' [PASSED]
Test Case '-[QWUserNameHelperSpec QWUserNameHelper_ShouldReturnFirstNameIfUsersLastNameIsEmpty]' passed (0.003 seconds).
Test Suite 'QWUserNameHelperSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 5 tests, with 0 failures (0 unexpected) in 0.015 (0.016) seconds
Test Suite 'QWUserDemoCleanupParserSpec' started at 2013-06-07 08:58:02 +0000
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldDeleteAllAlbumsWithoutSpecifiedIds]' started.
2013-06-07 10:58:02.747 DemoDev[2667:1d603] + 'QWUserDemoCleanupParser, when receiving response with albumIds and photosIds with data that should not be deleted, should delete all albums without specified ids' [PASSED]
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldDeleteAllAlbumsWithoutSpecifiedIds]' passed (0.007 seconds).
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldDeleteAllPhotosInTheAlbumWithIdWithoutSpecifiedPhotosIds]' started.
2013-06-07 10:58:02.755 DemoDev[2667:1d603] + 'QWUserDemoCleanupParser, when receiving response with albumIds and photosIds with data that should not be deleted, should delete all photos in the album with id without specified photos ids' [PASSED]
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldDeleteAllPhotosInTheAlbumWithIdWithoutSpecifiedPhotosIds]' passed (0.008 seconds).
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldDeleteAllAlbumsPhotosWithoutSpecifiedIds]' started.
2013-06-07 10:58:02.764 DemoDev[2667:1d603] + 'QWUserDemoCleanupParser, when receiving response with albumIds and photosIds with data that should not be deleted, should delete all albums photos without specified ids' [PASSED]
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldDeleteAllAlbumsPhotosWithoutSpecifiedIds]' passed (0.007 seconds).
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldUpdateCommentsCounterInAlbums]' started.
2013-06-07 10:58:02.771 DemoDev[2667:1d603] + 'QWUserDemoCleanupParser, when receiving response with albumIds and photosIds with data that should not be deleted, should update comments counter in albums' [PASSED]
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldUpdateCommentsCounterInAlbums]' passed (0.007 seconds).
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldUpdateLovesCounterInAlbums]' started.
2013-06-07 10:58:02.779 DemoDev[2667:1d603] + 'QWUserDemoCleanupParser, when receiving response with albumIds and photosIds with data that should not be deleted, should update loves counter in albums' [PASSED]
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdsAndPhotosIdsWithDataThatShouldNotBeDeleted_ShouldUpdateLovesCounterInAlbums]' passed (0.007 seconds).
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdButNoPhotosIds_ShouldDeleteThatAlbum]' started.
2013-06-07 10:58:02.786 DemoDev[2667:1d603] + 'QWUserDemoCleanupParser, when receiving response with albumId but no photosIds, should delete that album' [PASSED]
Test Case '-[QWUserDemoCleanupParserSpec QWUserDemoCleanupParser_WhenReceivingResponseWithAlbumIdButNoPhotosIds_ShouldDeleteThatAlbum]' passed (0.007 seconds).
Test Suite 'QWUserDemoCleanupParserSpec' finished at 2013-06-07 08:58:02 +0000.
Executed 6 tests, with 0 failures (0 unexpected) in 0.044 (0.048) seconds
Test Suite '/Users/demouser/projects/Demo/ios-client/build/Debug-iphonesimulator/DemoTests.octest(Tests)' finished at 2013-06-07 08:58:02 +0000.
Executed 471 tests, with 1 failure (1 unexpected) in 3.253 (3.487) seconds
Test Suite 'All tests' finished at 2013-06-07 08:58:02 +0000.
Executed 471 tests, with 1 failure (1 unexpected) in 3.253 (3.488) seconds
